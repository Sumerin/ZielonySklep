<?php
    include(dirname(__FILE__).'/config/config.inc.php');
    include(dirname(__FILE__).'/init.php');
    $default_lang = Configuration::get('PS_LANG_DEFAULT');

    
    function copyImg($id_entity, $id_image = null, $url, $entity = 'products')
	{
		$tmpfile = tempnam(_PS_TMP_IMG_DIR_, 'ps_import');
		$watermark_types = explode(',', Configuration::get('WATERMARK_TYPES'));

		switch ($entity)
		{
			default:
			case 'products':
				$image_obj = new Image($id_image);
				$path = $image_obj->getPathForCreation();
			break;
			case 'categories':
				$path = _PS_CAT_IMG_DIR_.(int)$id_entity;
			break;
		}

		// Evaluate the memory required to resize the image: if it's too much, you can't resize it.
		if (!ImageManager::checkImageMemoryLimit($url))
		
			return false;

		// 'file_exists' doesn't work on distant file, and getimagesize make the import slower.
		// Just hide the warning, the traitment will be the same.
		if (@copy($url, $tmpfile))
		{
			ImageManager::resize($tmpfile, $path.'.jpg');
			$images_types = ImageType::getImagesTypes($entity);
			foreach ($images_types as $image_type)
				ImageManager::resize($tmpfile, $path.'-'.stripslashes($image_type['name']).'.jpg', $image_type['width'], $image_type['height']);

			if (in_array($image_type['id_image_type'], $watermark_types))
				Hook::exec('actionWatermark', array('id_image' => $id_image, 'id_product' => $id_entity));
		}
		else
		{
			unlink($tmpfile);
			print('ssss');
			return false;
		}
		unlink($tmpfile);
		return true;
	}
    
    $category = new Category();
        $category->name = [$default_lang => 'Pieczywo_i_cukiernia'];
$category->id_parent=Configuration::get('PS_HOME_CATEGORY');
$category->link_rewrite=[$default_lang => 'Pieczywo_i_cukiernia'];
$category->add();
        $subcategory = new Category();
        $subcategory->name = [$default_lang => 'cukiernia'];
$subcategory->id_parent=$category->id;
$subcategory->link_rewrite=[$default_lang => 'cukiernia'];
$subcategory->add();
        $product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Croissant_maslany_50_g'];
$product->link_rewrite = [$default_lang => 'Croissant'];
$product->price = 1.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Croissant maślany 50 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Donut_z_polewa_czekoladowa_55_g'];
$product->link_rewrite = [$default_lang => 'Donut_z_p'];
$product->price = 1.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Donut z polewą czekoladową 55 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => '7_Days_Croissant_z_nadzieniem_kakaowym_60_g'];
$product->link_rewrite = [$default_lang => '7_Days_Cr'];
$product->price = 1.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/7 Days Croissant z nadzieniem kakaowym 60 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Oskroba_Strucla_serowa_450_g'];
$product->link_rewrite = [$default_lang => 'Oskroba_S'];
$product->price = 4.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Oskroba Strucla serowa 450 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Pieczywo_pszenne_drozdzowe_400_g_(10_sztuk)'];
$product->link_rewrite = [$default_lang => 'Tesco_Pie'];
$product->price = 5.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Pieczywo pszenne drożdżowe 400 g (10 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Donut_z_polewa_truskawkowa_58_g'];
$product->link_rewrite = [$default_lang => 'Donut_z_p'];
$product->price = 1.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Donut z polewą truskawkową 58 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Gofry_250_g_(12_sztuk)'];
$product->link_rewrite = [$default_lang => 'Tesco_Gof'];
$product->price = 3.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Gofry 250 g (12 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Stokrotki_Ciasteczka_z_marmolada_350_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Sto'];
$product->price = 5.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Stokrotki Ciasteczka z marmoladą 350 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Dan_Cake_Bueczki_mleczne_400_g_(10_sztuk)'];
$product->link_rewrite = [$default_lang => 'Dan_Cake_'];
$product->price = 6.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Dan Cake Bułeczki mleczne 400 g (10 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => '7_Days_Croissant_z_nadzieniem_z_orzechow_laskowych_60_g'];
$product->link_rewrite = [$default_lang => '7_Days_Cr'];
$product->price = 1.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/7 Days Croissant z nadzieniem z orzechów laskowych 60 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => '7_Days_Croissant_z_nadzieniem_o_smaku_spumante_60_g'];
$product->link_rewrite = [$default_lang => '7_Days_Cr'];
$product->price = 1.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/7 Days Croissant z nadzieniem o smaku spumante 60 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => '7_Days_Mini_Croissant_z_nadzieniem_kakaowym_185_g'];
$product->link_rewrite = [$default_lang => '7_Days_Mi'];
$product->price = 4.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/7 Days Mini Croissant z nadzieniem kakaowym 185 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Brzesc_Somka_ptysiowa_125_g'];
$product->link_rewrite = [$default_lang => 'Brzesc_So'];
$product->price = 3.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Brześć Słomka ptysiowa 125 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => '7_Days_Borseto_Sodka_buka_z_nadzieniem_kakaowym_80_g'];
$product->link_rewrite = [$default_lang => '7_Days_Bo'];
$product->price = 2.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/7 Days Borseto Słodka bułka z nadzieniem kakaowym 80 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => '7_Days_Borseto_Sodka_buka_z_nadzieniem_jabkowo-cynamonowym_80_g'];
$product->link_rewrite = [$default_lang => '7_Days_Bo'];
$product->price = 2.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/7 Days Borseto Słodka bułka z nadzieniem jabłkowo-cynamonowym 80 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Oskroba_Strucla_jabkowa_450_g'];
$product->link_rewrite = [$default_lang => 'Oskroba_S'];
$product->price = 4.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Oskroba Strucla jabłkowa 450 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Donut_z_polewa_o_smaku_jabkowym_54_g'];
$product->link_rewrite = [$default_lang => 'Donut_z_p'];
$product->price = 1.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Donut z polewą o smaku jabłkowym 54 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Dan_Cake_Ciasto_marmurkowe_400_g'];
$product->link_rewrite = [$default_lang => 'Dan_Cake_'];
$product->price = 4.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Dan Cake Ciasto marmurkowe 400 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Oskroba_Placek_drozdzowy_400_g'];
$product->link_rewrite = [$default_lang => 'Oskroba_P'];
$product->price = 3.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Oskroba Placek drożdżowy 400 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Oskroba_Babka_jogurtowa_500_g'];
$product->link_rewrite = [$default_lang => 'Oskroba_B'];
$product->price = 6.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Oskroba Babka jogurtowa 500 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Ciasto_marmurkowe_500_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Cia'];
$product->price = 6.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Ciasto marmurkowe 500 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => '7_Days_Borseto_Sodka_buka_z_nadzieniem_z_owocow_lesnych_80_g'];
$product->link_rewrite = [$default_lang => '7_Days_Bo'];
$product->price = 2.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/7 Days Borseto Słodka bułka z nadzieniem z owoców leśnych 80 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Oskroba_Placek_drozdzowy_z_rodzynkami_400_g'];
$product->link_rewrite = [$default_lang => 'Oskroba_P'];
$product->price = 5.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Oskroba Placek drożdżowy z rodzynkami 400 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Oskroba_Makowiec_450_g'];
$product->link_rewrite = [$default_lang => 'Oskroba_M'];
$product->price = 6.09;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Oskroba Makowiec 450 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Dan_Cake_Mufinki_stracciatella_300_g'];
$product->link_rewrite = [$default_lang => 'Dan_Cake_'];
$product->price = 5.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Dan Cake Mufinki stracciatella 300 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => '7_Days_Mini_Croissant_z_nadzieniem_o_smaku_spumante_185_g'];
$product->link_rewrite = [$default_lang => '7_Days_Mi'];
$product->price = 4.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/7 Days Mini Croissant z nadzieniem o smaku spumante 185 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Ciasto_o_smaku_cytrynowym_500_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Cia'];
$product->price = 6.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Ciasto o smaku cytrynowym 500 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Ciasteczka_Florentynki_300_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Cia'];
$product->price = 5.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Ciasteczka Florentynki 300 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Pieczywo_pszenne_drozdzowe_z_czekolada_350_g_(10_sztuk)'];
$product->link_rewrite = [$default_lang => 'Tesco_Pie'];
$product->price = 6.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Pieczywo pszenne drożdżowe z czekoladą 350 g (10 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Oskroba_Strucla_wisniowa_450_g'];
$product->link_rewrite = [$default_lang => 'Oskroba_S'];
$product->price = 4.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Oskroba Strucla wiśniowa 450 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Secpol_Sekacz_krolewski_300_g'];
$product->link_rewrite = [$default_lang => 'Secpol_Se'];
$product->price = 10.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Secpol Sękacz królewski 300 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Brzesc_Somka_ptysiowa_z_cynamonem_125_g'];
$product->link_rewrite = [$default_lang => 'Brzesc_So'];
$product->price = 3.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Brześć Słomka ptysiowa z cynamonem 125 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Dan_Cake_Mufinki_czekoladowe_300_g'];
$product->link_rewrite = [$default_lang => 'Dan_Cake_'];
$product->price = 5.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Dan Cake Mufinki czekoladowe 300 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => '7_Days_Croissant_z_nadzieniem_z_orzeszkow_ziemnych_i_kakaowym_60_g'];
$product->link_rewrite = [$default_lang => '7_Days_Cr'];
$product->price = 1.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/7 Days Croissant z nadzieniem z orzeszków ziemnych i kakaowym 60 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Oskroba_Piernik_staropolski_500_g'];
$product->link_rewrite = [$default_lang => 'Oskroba_P'];
$product->price = 4.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Oskroba Piernik staropolski 500 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Oskroba_Strucla_morelowa_450_g'];
$product->link_rewrite = [$default_lang => 'Oskroba_S'];
$product->price = 4.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Oskroba Strucla morelowa 450 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Ciasteczka_soneczne_300_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Cia'];
$product->price = 5.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Ciasteczka słoneczne 300 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Dan_Cake_Ciasto_truskawkowe_400_g'];
$product->link_rewrite = [$default_lang => 'Dan_Cake_'];
$product->price = 4.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Dan Cake Ciasto truskawkowe 400 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Oskroba_Babka_waniliowa_500_g'];
$product->link_rewrite = [$default_lang => 'Oskroba_B'];
$product->price = 6.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Oskroba Babka waniliowa 500 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Ciasteczka_bakaliowe_z_zurawina_250_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Cia'];
$product->price = 5.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Ciasteczka bakaliowe z żurawiną 250 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Secpol_Sekacz_krolewski_kostka_w_mlecznej_polewie_70_g'];
$product->link_rewrite = [$default_lang => 'Secpol_Se'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Secpol Sękacz królewski kostka w mlecznej polewie 70 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Oskroba_Strucla_owocowa_450_g'];
$product->link_rewrite = [$default_lang => 'Oskroba_S'];
$product->price = 4.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Oskroba Strucla owocowa 450 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Misie_bezowe_40_g_(4_sztuki)'];
$product->link_rewrite = [$default_lang => 'Misie_bez'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Misie bezowe 40 g (4 sztuki).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Oskroba_Babka_marmurkowa_400_g'];
$product->link_rewrite = [$default_lang => 'Oskroba_B'];
$product->price = 5.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Oskroba Babka marmurkowa 400 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Goldfein_Ciasto_marcepanowe_w_polewie_o_smaku_kakaowym_400_g'];
$product->link_rewrite = [$default_lang => 'Goldfein_'];
$product->price = 5.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Goldfein Ciasto marcepanowe w polewie o smaku kakaowym 400 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Oskroba_Babka_o_smaku_cytrynowym_400_g'];
$product->link_rewrite = [$default_lang => 'Oskroba_B'];
$product->price = 5.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Oskroba Babka o smaku cytrynowym 400 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Oskroba_Babka_o_smaku_pomaranczowym_500_g'];
$product->link_rewrite = [$default_lang => 'Oskroba_B'];
$product->price = 6.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Oskroba Babka o smaku pomarańczowym 500 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Secpol_Sekacz_krolewski_50_g'];
$product->link_rewrite = [$default_lang => 'Secpol_Se'];
$product->price = 2.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Secpol Sękacz królewski 50 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Goldfein_Ciasto_kakaowe_z_patkami_czekoladowymi_w_polewie_o_smaku_kakaowym_400_g'];
$product->link_rewrite = [$default_lang => 'Goldfein_'];
$product->price = 5.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Goldfein Ciasto kakaowe z płatkami czekoladowymi w polewie o smaku kakaowym 400 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Gusparo_Rolada_Produkt_na_bazie_ciasta_biszkoptowego_z_kremem_kakaowym_i_dekoracja_250_g'];
$product->link_rewrite = [$default_lang => 'Gusparo_R'];
$product->price = 4.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Gusparo Rolada Produkt na bazie ciasta biszkoptowego z kremem kakaowym i dekoracją 250 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Oskroba_Keks_angielski_450_g'];
$product->link_rewrite = [$default_lang => 'Oskroba_K'];
$product->price = 7.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Oskroba Keks angielski 450 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Babka_marmurkowa_400_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Bab'];
$product->price = 5.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Babka marmurkowa 400 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mark_Sekacz_mazurski_0,270_kg'];
$product->link_rewrite = [$default_lang => 'Mark_Seka'];
$product->price = 8.25;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mark Sękacz mazurski 0,270 kg.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Wafel_Pysznyiger_o_smaku_pyszno_kakaowo-sliwkowym_140_g'];
$product->link_rewrite = [$default_lang => 'Wafel_Pys'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Wafel Pysznyiger o smaku pyszno kakaowo-śliwkowym 140 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Wafel_Pysznyiger_o_smaku_pyszno_kakaowym_140_g'];
$product->link_rewrite = [$default_lang => 'Wafel_Pys'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Wafel Pysznyiger o smaku pyszno kakaowym 140 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Secpol_Sekacz_krolewski_kostka_w_mlecznej_polewie_300_g'];
$product->link_rewrite = [$default_lang => 'Secpol_Se'];
$product->price = 10.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Secpol Sękacz królewski kostka w mlecznej polewie 300 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Gusparo_Merendina_na_bazie_ciasta_biszkoptowego_z_kremem_kakaowym_280_g_(10_sztuk)'];
$product->link_rewrite = [$default_lang => 'Gusparo_M'];
$product->price = 5.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Gusparo Merendina na bazie ciasta biszkoptowego z kremem kakaowym 280 g (10 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Oskroba_Strucla_truskawkowa_450_g'];
$product->link_rewrite = [$default_lang => 'Oskroba_S'];
$product->price = 4.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Oskroba Strucla truskawkowa 450 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Babka_o_smaku_waniliowym_400_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Bab'];
$product->price = 5.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Babka o smaku waniliowym 400 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Gusparo_Rolada_Produkt_na_bazie_ciasta_biszkoptowego_z_kremem_mleczno-wisniowym_i_dekoracja_250_g'];
$product->link_rewrite = [$default_lang => 'Gusparo_R'];
$product->price = 4.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Gusparo Rolada Produkt na bazie ciasta biszkoptowego z kremem mleczno-wiśniowym i dekoracją 250 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'La_Trinitaine_Magdalenki_poduzne_250_g'];
$product->link_rewrite = [$default_lang => 'La_Trinit'];
$product->price = 6.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/La Trinitaine Magdalenki podłużne 250 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Oskroba_Babka_o_smaku_waniliowym_400_g'];
$product->link_rewrite = [$default_lang => 'Oskroba_B'];
$product->price = 5.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Oskroba Babka o smaku waniliowym 400 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mark_Sekacz_mazurski'];
$product->link_rewrite = [$default_lang => 'Mark_Seka'];
$product->price = 3.00;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mark Sękacz mazurski.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Chipicao_Croissant_z_nadzieniem_kakaowym_60_g'];
$product->link_rewrite = [$default_lang => 'Chipicao_'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Chipicao Croissant z nadzieniem kakaowym 60 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Say_it_with_Cake.._Ciasto_kakaowe_z_kremem_o_smaku_czekoladowym_1025_g'];
$product->link_rewrite = [$default_lang => 'Say_it_wi'];
$product->price = 25.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Say it with Cake.. Ciasto kakaowe z kremem o smaku czekoladowym 1025 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Wafel_Pysznyiger_o_smaku_waniliowo-smietankowym_140_g'];
$product->link_rewrite = [$default_lang => 'Wafel_Pys'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Wafel Pysznyiger o smaku waniliowo-śmietankowym 140 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Marlenka_Tort_miodowy_z_orzechami_800_g'];
$product->link_rewrite = [$default_lang => 'Marlenka_'];
$product->price = 38.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Marlenka Tort miodowy z orzechami 800 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Marlenka_Torcik_miodowy_100_g'];
$product->link_rewrite = [$default_lang => 'Marlenka_'];
$product->price = 7.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Marlenka Torcik miodowy 100 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'La_Trinitaine_Magdalenki_marmurkowe_250_g'];
$product->link_rewrite = [$default_lang => 'La_Trinit'];
$product->price = 6.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/La Trinitaine Magdalenki marmurkowe 250 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Kamp_Krajanka_waflowa_o_smaku_toffi_300_g'];
$product->link_rewrite = [$default_lang => 'Kamp_Kraj'];
$product->price = 6.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Kamp Krajanka waflowa o smaku toffi 300 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Gusparo_Merendina_na_bazie_ciasta_biszkoptowego_z_kremem_o_smaku_mlecznym_280_g_(8_sztuk)'];
$product->link_rewrite = [$default_lang => 'Gusparo_M'];
$product->price = 5.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Gusparo Merendina na bazie ciasta biszkoptowego z kremem o smaku mlecznym 280 g (8 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Poppies_Chocolito_Ciastka_kokosowe_z_polewa_czekoladowa_200_g'];
$product->link_rewrite = [$default_lang => 'Poppies_C'];
$product->price = 7.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Poppies Chocolito Ciastka kokosowe z polewą czekoladową 200 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Balconi_Tiramisu_Torcik_300_g_(10_sztuk)'];
$product->link_rewrite = [$default_lang => 'Balconi_T'];
$product->price = 10.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Balconi Tiramisu Torcik 300 g (10 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Marlenka_Kulki_miodowe_z_kakao_235_g'];
$product->link_rewrite = [$default_lang => 'Marlenka_'];
$product->price = 16.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Marlenka Kulki miodowe z kakao 235 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Balconi_Choco_and_Latte_Torcik_czekoladowy_300_g_(10_sztuk)'];
$product->link_rewrite = [$default_lang => 'Balconi_C'];
$product->price = 10.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Balconi Choco and Latte Torcik czekoladowy 300 g (10 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Marlenka_Kulki_miodowe_235_g'];
$product->link_rewrite = [$default_lang => 'Marlenka_'];
$product->price = 16.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Marlenka Kulki miodowe 235 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mark_Sekacz_mini_200_g'];
$product->link_rewrite = [$default_lang => 'Mark_Seka'];
$product->price = 8.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mark Sękacz mini 200 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Marlenka_Torcik_miodowy_z_kakao_100_g'];
$product->link_rewrite = [$default_lang => 'Marlenka_'];
$product->price = 7.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Marlenka Torcik miodowy z kakao 100 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Balconi_Mix_Max_Ciastko_z_polewa_kakaowa_niskokaloryczna_i_nadzieniem_czekoladowym_350_g_(10_sztuk)'];
$product->link_rewrite = [$default_lang => 'Balconi_M'];
$product->price = 9.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Balconi Mix Max Ciastko z polewą kakaową niskokaloryczną i nadzieniem czekoladowym 350 g (10 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Dulcesol_Black_Makaroniki_o_smaku_malina_80_g_(4_sztuki)'];
$product->link_rewrite = [$default_lang => 'Dulcesol_'];
$product->price = 8.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Dulcesol Black Makaroniki o smaku malina 80 g (4 sztuki).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => '7_Days_Max_Croissant_z_nadzieniem_o_smaku_waniliowym_110_g'];
$product->link_rewrite = [$default_lang => '7_Days_Ma'];
$product->price = 2.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/7 Days Max Croissant z nadzieniem o smaku waniliowym 110 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Rolada_Pupil_380_g'];
$product->link_rewrite = [$default_lang => 'Rolada_Pu'];
$product->price = 11.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Rolada Pupil 380 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Balconi_Mix_Milk_Torcik_mix_mleczny_350_g_(10_sztuk)'];
$product->link_rewrite = [$default_lang => 'Balconi_M'];
$product->price = 9.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Balconi Mix Milk Torcik mix mleczny 350 g (10 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Olz_Mleczne_bueczki_maslane_350_g'];
$product->link_rewrite = [$default_lang => 'Olz_Mlecz'];
$product->price = 8.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Ölz Mleczne bułeczki maślane 350 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tago_Muzy_Czekoladowe_Wafle_z_kremem_kakaowo-orzechowym_w_czekoladzie_mlecznej_120_g'];
$product->link_rewrite = [$default_lang => 'Tago_Muzy'];
$product->price = 4.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tago Muzy Czekoladowe Wafle z kremem kakaowo-orzechowym w czekoladzie mlecznej 120 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'PIERNIKOWE_GWIAZDKI_100_g'];
$product->link_rewrite = [$default_lang => 'PIERNIKOW'];
$product->price = 3.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/PIERNIKOWE GWIAZDKI 100 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => '7_Days_Doub!e_Max_Croissant_z_nadzieniem_o_smaku_waniliowym_i_wisniowym_110_g'];
$product->link_rewrite = [$default_lang => '7_Days_Do'];
$product->price = 2.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/7 Days Doub!e Max Croissant z nadzieniem o smaku waniliowym i wiśniowym 110 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'CHOINKI_FRANC_200_g'];
$product->link_rewrite = [$default_lang => 'CHOINKI_F'];
$product->price = 5.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/CHOINKI FRANC 200 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'PIERNIKOWE_DEKORACJE_150_g'];
$product->link_rewrite = [$default_lang => 'PIERNIKOW'];
$product->price = 4.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/PIERNIKOWE DEKORACJE 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Dan_Cake_Babeczka_drozdzowa_z_serem_140_g_(2_sztuki)'];
$product->link_rewrite = [$default_lang => 'Dan_Cake_'];
$product->price = 3.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Dan Cake Babeczka drożdżowa z serem 140 g (2 sztuki).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => '7_Days_Doub!e_Max_Croissant_z_nadzieniem_o_smaku_kakaowym_i_kokosowym_110_g'];
$product->link_rewrite = [$default_lang => '7_Days_Do'];
$product->price = 2.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/7 Days Doub!e Max Croissant z nadzieniem o smaku kakaowym i kokosowym 110 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Dulcesol_Black_Makaroniki_o_smaku_czekolada_80_g_(4_sztuki)'];
$product->link_rewrite = [$default_lang => 'Dulcesol_'];
$product->price = 8.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Dulcesol Black Makaroniki o smaku czekolada 80 g (4 sztuki).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'HERBATNIKI_SNIEGOWE_150_g'];
$product->link_rewrite = [$default_lang => 'HERBATNIK'];
$product->price = 6.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/HERBATNIKI SNIEGOWE 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Aryzta_Ciastko_z_mango_i_marakuja_100_g'];
$product->link_rewrite = [$default_lang => 'Aryzta_Ci'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Aryzta Ciastko z mango i marakują 100 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Aryzta_Ciastko_kokosowe_100_g'];
$product->link_rewrite = [$default_lang => 'Aryzta_Ci'];
$product->price = 1.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Aryzta Ciastko kokosowe 100 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Balconi_Trancetto_al_Cacao_Magro_Torcik_kakaowy_280_g_(10_sztuk)'];
$product->link_rewrite = [$default_lang => 'Balconi_T'];
$product->price = 7.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Balconi Trancetto al Cacao Magro Torcik kakaowy 280 g (10 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'MINI_DONUT_Z_CYNAMONEM_18_g'];
$product->link_rewrite = [$default_lang => 'MINI_DONU'];
$product->price = 0.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/MINI DONUT Z CYNAMONEM 18 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'KARO_290_g'];
$product->link_rewrite = [$default_lang => 'KARO_290_'];
$product->price = 4.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/KARO 290 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Dan_Cake_Babeczka_drozdzowa_z_kakao_140_g_(2_sztuki)'];
$product->link_rewrite = [$default_lang => 'Dan_Cake_'];
$product->price = 3.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Dan Cake Babeczka drożdżowa z kakao 140 g (2 sztuki).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Brzesc_Makowiec_400_g'];
$product->link_rewrite = [$default_lang => 'Brzesc_Ma'];
$product->price = 4.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Brześć Makowiec 400 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => '7_Days_Doub!e_Max_Croissant_z_nadzieniem_o_smaku_waniliowym_i_truskawkowym_110_g'];
$product->link_rewrite = [$default_lang => '7_Days_Do'];
$product->price = 2.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/7 Days Doub!e Max Croissant z nadzieniem o smaku waniliowym i truskawkowym 110 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Chipicao_Herbatniki_kakaowe_przekadane_kremem_kakaowym_50_g'];
$product->link_rewrite = [$default_lang => 'Chipicao_'];
$product->price = 2.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Chipicao Herbatniki kakaowe przekładane kremem kakaowym 50 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Balconi_Tiramisu_400_g'];
$product->link_rewrite = [$default_lang => 'Balconi_T'];
$product->price = 11.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Balconi Tiramisù 400 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Szarlotka_i_sernik_mix_350_g'];
$product->link_rewrite = [$default_lang => 'Szarlotka'];
$product->price = 9.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Szarlotka i sernik mix 350 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Macarons_de_Pauline_Makaroniki_z_migdaami_koncentratem_z_truskawek_pistacjami_czekolada_72_g'];
$product->link_rewrite = [$default_lang => 'Macarons_'];
$product->price = 15.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Macarons de Pauline Makaroniki z migdałami koncentratem z truskawek pistacjami czekoladą 72 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Balconi_Mini_Rolls_Chocolate_Mini_roladki_czekoladowe_180_g_(6_sztuk)'];
$product->link_rewrite = [$default_lang => 'Balconi_M'];
$product->price = 5.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Balconi Mini Rolls Chocolate Mini roladki czekoladowe 180 g (6 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Rogalik_czekoladowy_85_g'];
$product->link_rewrite = [$default_lang => 'Rogalik_c'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Rogalik czekoladowy 85 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Szarlotka_Tutti_Frutti'];
$product->link_rewrite = [$default_lang => 'Szarlotka'];
$product->price = 2.00;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Szarlotka Tutti Frutti.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tago_Piernik_duet_190_g'];
$product->link_rewrite = [$default_lang => 'Tago_Pier'];
$product->price = 3.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tago Piernik duet 190 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tort_Czarny_Las_1500_g'];
$product->link_rewrite = [$default_lang => 'Tort_Czar'];
$product->price = 40.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tort Czarny Las 1500 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'CIASTEK_115_g'];
$product->link_rewrite = [$default_lang => 'CIASTEK_1'];
$product->price = 3.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/CIASTEK 115 g.png'))
    {
    
        $image->delete();
    }
    
}
$subcategory = new Category();
        $subcategory->name = [$default_lang => 'chleb'];
$subcategory->id_parent=$category->id;
$subcategory->link_rewrite=[$default_lang => 'chleb'];
$subcategory->add();
        $product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Chleb_swojski_zytnio-pszenny_krojony_500_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Chl'];
$product->price = 2.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Chleb swojski żytnio-pszenny krojony 500 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Oskroba_Wiejski_Chleb_pszenno-zytni_500_g'];
$product->link_rewrite = [$default_lang => 'Oskroba_W'];
$product->price = 2.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Oskroba Wiejski Chleb pszenno-żytni 500 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Chleb_razowy_400_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Chl'];
$product->price = 3.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Chleb razowy 400 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Oskroba_Chleb_Dawny_500_g'];
$product->link_rewrite = [$default_lang => 'Oskroba_C'];
$product->price = 3.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Oskroba Chleb Dawny 500 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Chleb_chopski'];
$product->link_rewrite = [$default_lang => 'Chleb_cho'];
$product->price = 0.87;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Chleb chłopski.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Chleb_krolewski'];
$product->link_rewrite = [$default_lang => 'Chleb_kro'];
$product->price = 0.80;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Chleb królewski.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Oskroba_Zocisty_Chleb_pszenno-zytni_z_ziarnami_400_g'];
$product->link_rewrite = [$default_lang => 'Oskroba_Z'];
$product->price = 2.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Oskroba Złocisty Chleb pszenno-żytni z ziarnami 400 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Chleb_razowy_penoziarnisty_500_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Chl'];
$product->price = 2.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Chleb razowy pełnoziarnisty 500 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Oskroba_Chleb_zytni_penoziarnisty_450_g'];
$product->link_rewrite = [$default_lang => 'Oskroba_C'];
$product->price = 2.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Oskroba Chleb żytni pełnoziarnisty 450 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Chleb_zocisty_krojony'];
$product->link_rewrite = [$default_lang => 'Chleb_zoc'];
$product->price = 0.80;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Chleb złocisty krojony.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Oskroba_Chleb_Litewski_500_g'];
$product->link_rewrite = [$default_lang => 'Oskroba_C'];
$product->price = 3.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Oskroba Chleb Litewski 500 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Chleb_rustykalny'];
$product->link_rewrite = [$default_lang => 'Chleb_rus'];
$product->price = 0.70;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Chleb rustykalny.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Oskroba_Buka_wyborowa_350_g'];
$product->link_rewrite = [$default_lang => 'Oskroba_B'];
$product->price = 2.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Oskroba Bułka wyborowa 350 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mestemacher_Pumpernikiel_250_g'];
$product->link_rewrite = [$default_lang => 'Mestemach'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mestemacher Pumpernikiel 250 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Chleb_zytni_penoziarnisty_500_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Chl'];
$product->price = 3.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Chleb żytni pełnoziarnisty 500 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Schulstad_Fitness_Style_z_ziarnami_Chleb_zytni_420_g'];
$product->link_rewrite = [$default_lang => 'Schulstad'];
$product->price = 3.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Schulstad Fitness Style z ziarnami Chleb żytni 420 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Chleb_razowy_ze_sonecznikiem_450_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Chl'];
$product->price = 2.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Chleb razowy ze słonecznikiem 450 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Schulstad_Chleb_z_Pieca_600_g'];
$product->link_rewrite = [$default_lang => 'Schulstad'];
$product->price = 2.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Schulstad Chleb z Pieca 600 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Chleb_krolewski_krojony'];
$product->link_rewrite = [$default_lang => 'Chleb_kro'];
$product->price = 0.80;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Chleb królewski krojony.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mestemacher_Chleb_razowy_500_g'];
$product->link_rewrite = [$default_lang => 'Mestemach'];
$product->price = 3.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mestemacher Chleb razowy 500 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Schulstad_Chleb_z_amarantusem_400_g'];
$product->link_rewrite = [$default_lang => 'Schulstad'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Schulstad Chleb z amarantusem 400 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bagietka_z_ziarnami_120_g'];
$product->link_rewrite = [$default_lang => 'Bagietka_'];
$product->price = 1.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bagietka z ziarnami 120 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Chleb_na_miodzie_ze_sliwka_250_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Chl'];
$product->price = 3.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Chleb na miodzie ze śliwką 250 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Oskroba_Chleb_graham_330_g'];
$product->link_rewrite = [$default_lang => 'Oskroba_C'];
$product->price = 3.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Oskroba Chleb graham 330 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Chleb_pumpernikiel_250_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Chl'];
$product->price = 3.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Chleb pumpernikiel 250 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Schulstad_Chleb_z_Pieca_z_ziarnami_660_g'];
$product->link_rewrite = [$default_lang => 'Schulstad'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Schulstad Chleb z Pieca z ziarnami 660 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Chleb_rustykalny_z_zurawina_320_g'];
$product->link_rewrite = [$default_lang => 'Chleb_rus'];
$product->price = 4.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Chleb rustykalny z żurawiną 320 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Chleb_wielozbozowy_penoziarnisty_500_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Chl'];
$product->price = 3.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Chleb wielozbożowy pełnoziarnisty 500 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Chleb_razowy_300_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Chl'];
$product->price = 3.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Chleb razowy 300 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Piekarnie_Bochen_Chleb_tradycyjny_1_kg'];
$product->link_rewrite = [$default_lang => 'Piekarnie'];
$product->price = 3.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Piekarnie Bochen Chleb tradycyjny 1 kg.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Piekarnie_Bochen_Chleb_baltonowski_500_g'];
$product->link_rewrite = [$default_lang => 'Piekarnie'];
$product->price = 1.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Piekarnie Bochen Chleb baltonowski 500 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Piekarnie_Bochen_Chleb_wieloziartnisty_500_g'];
$product->link_rewrite = [$default_lang => 'Piekarnie'];
$product->price = 3.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Piekarnie Bochen Chleb wieloziartnisty 500 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Oskroba_Chleb_sojowy_penoziarnisty_450_g'];
$product->link_rewrite = [$default_lang => 'Oskroba_C'];
$product->price = 3.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Oskroba Chleb sojowy pełnoziarnisty 450 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Chleb_wieloziarnisty_400_g'];
$product->link_rewrite = [$default_lang => 'Chleb_wie'];
$product->price = 2.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Chleb wieloziarnisty 400 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Finest_Pieczywo_pszenne_drozdzowe_400_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Fin'];
$product->price = 12.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Finest Pieczywo pszenne drożdżowe 400 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Chleb_sowianski_370_g'];
$product->link_rewrite = [$default_lang => 'Chleb_sow'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Chleb słowiański 370 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mestemacher_Bio_Chleb_zytni_penoziarnisty_ze_zotym_siemieniem_lnianym_i_nasionami_chia_350_g'];
$product->link_rewrite = [$default_lang => 'Mestemach'];
$product->price = 6.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mestemacher Bio Chleb żytni pełnoziarnisty ze złotym siemieniem lnianym i nasionami chia 350 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Chleb_zytni_owsiany_400_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Chl'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Chleb żytni owsiany 400 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Oskroba_Chleb_wiejski_500_g'];
$product->link_rewrite = [$default_lang => 'Oskroba_C'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Oskroba Chleb wiejski 500 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mestemacher_Bio_Chleb_zytni_penoziarnisty_z_amarantusem_i_quinoa_350_g'];
$product->link_rewrite = [$default_lang => 'Mestemach'];
$product->price = 6.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mestemacher Bio Chleb żytni pełnoziarnisty z amarantusem i quinoa 350 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Chleb_z_orkiszem_380_g'];
$product->link_rewrite = [$default_lang => 'Chleb_z_o'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Chleb z orkiszem 380 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Chleb_z_orkiszem_krojony'];
$product->link_rewrite = [$default_lang => 'Chleb_z_o'];
$product->price = 0.90;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Chleb z orkiszem krojony.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mestemacher_Chleb_biakowy_250_g'];
$product->link_rewrite = [$default_lang => 'Mestemach'];
$product->price = 6.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mestemacher Chleb białkowy 250 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Chleb_razowy_450_g'];
$product->link_rewrite = [$default_lang => 'Chleb_raz'];
$product->price = 2.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Chleb razowy 450 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Chleb_z_orzechami_i_rodzynkami_350_g'];
$product->link_rewrite = [$default_lang => 'Chleb_z_o'];
$product->price = 3.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Chleb z orzechami i rodzynkami 350 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Chleb_fintes_300_g'];
$product->link_rewrite = [$default_lang => 'Chleb_fin'];
$product->price = 3.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Chleb fintes 300 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Chleb_razowy_ze_sonecznikiem_450_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Chl'];
$product->price = 2.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Chleb razowy ze słonecznikiem 450 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Schulstad_Chleb_ze_sonecznikiem_430_g'];
$product->link_rewrite = [$default_lang => 'Schulstad'];
$product->price = 3.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Schulstad Chleb ze słonecznikiem 430 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Oskroba_Chleb_alpejski_500_g'];
$product->link_rewrite = [$default_lang => 'Oskroba_C'];
$product->price = 2.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Oskroba Chleb alpejski 500 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Chleb_ze_sonecznikiem_500_g'];
$product->link_rewrite = [$default_lang => 'Chleb_ze_'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Chleb ze słonecznikiem 500 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Chleb_orkiszowy_z_amarantusem_335_g'];
$product->link_rewrite = [$default_lang => 'Chleb_ork'];
$product->price = 2.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Chleb orkiszowy z amarantusem 335 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Oskroba_Chleb_zytni_z_musli_300_g'];
$product->link_rewrite = [$default_lang => 'Oskroba_C'];
$product->price = 4.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Oskroba Chleb żytni z musli 300 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Chleb_sprint_340_g'];
$product->link_rewrite = [$default_lang => 'Chleb_spr'];
$product->price = 4.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Chleb sprint 340 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Schulstad_Fitness_Style_Chleb_zytni_7_ziaren_390_g'];
$product->link_rewrite = [$default_lang => 'Schulstad'];
$product->price = 3.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Schulstad Fitness Style Chleb żytni 7 ziaren 390 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Oskroba_Chleb_wiejski'];
$product->link_rewrite = [$default_lang => 'Oskroba_C'];
$product->price = 0.72;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Oskroba Chleb wiejski.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Chleb_wieloziarnisty_400_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Chl'];
$product->price = 3.09;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Chleb wieloziarnisty 400 g.png'))
    {
    
        $image->delete();
    }
    
}
$subcategory = new Category();
        $subcategory->name = [$default_lang => 'bulki'];
$subcategory->id_parent=$category->id;
$subcategory->link_rewrite=[$default_lang => 'bulki'];
$subcategory->add();
        $product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Buka_polska_40_g'];
$product->link_rewrite = [$default_lang => 'Buka_pols'];
$product->price = 0.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bułka polska 40 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Buka_sniadaniowa_70_g'];
$product->link_rewrite = [$default_lang => 'Buka_snia'];
$product->price = 0.45;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bułka śniadaniowa 70 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Buka_tarta_pszenna_400_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Buk'];
$product->price = 1.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Bułka tarta pszenna 400 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Schulstad_Buka_tarta_luksusowa_375_g'];
$product->link_rewrite = [$default_lang => 'Schulstad'];
$product->price = 2.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Schulstad Bułka tarta luksusowa 375 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Buka_z_dynia_50_g'];
$product->link_rewrite = [$default_lang => 'Buka_z_dy'];
$product->price = 0.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bułka z dynią 50 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Kajzerka_wieloziarnista_60_g'];
$product->link_rewrite = [$default_lang => 'Kajzerka_'];
$product->price = 0.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Kajzerka wieloziarnista 60 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bagietka_wiejska_360_g'];
$product->link_rewrite = [$default_lang => 'Bagietka_'];
$product->price = 4.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bagietka wiejska 360 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Buka_wiejska_ciemna_90_g'];
$product->link_rewrite = [$default_lang => 'Buka_wiej'];
$product->price = 1.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bułka wiejska ciemna 90 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Nowel_Kajzerka_z_makiem_60_g'];
$product->link_rewrite = [$default_lang => 'Nowel_Kaj'];
$product->price = 0.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Nowel Kajzerka z makiem 60 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Nowel_Kajzerka_z_sezamem_60_g'];
$product->link_rewrite = [$default_lang => 'Nowel_Kaj'];
$product->price = 0.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Nowel Kajzerka z sezamem 60 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bagietka_czosnkowa_165_g'];
$product->link_rewrite = [$default_lang => 'Bagietka_'];
$product->price = 2.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bagietka czosnkowa 165 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Buka_wieloziarnista_80_g'];
$product->link_rewrite = [$default_lang => 'Buka_wiel'];
$product->price = 0.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bułka wieloziarnista 80 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bagietka_fintes_310_g'];
$product->link_rewrite = [$default_lang => 'Bagietka_'];
$product->price = 3.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bagietka fintes 310 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Ciabata_110_g'];
$product->link_rewrite = [$default_lang => 'Ciabata_1'];
$product->price = 0.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Ciabata 110 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Buka_wiejska_jasna_80_g'];
$product->link_rewrite = [$default_lang => 'Buka_wiej'];
$product->price = 1.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bułka wiejska jasna 80 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Brzesc_Groszek_ptysiowy_125_g'];
$product->link_rewrite = [$default_lang => 'Brzesc_Gr'];
$product->price = 3.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Brześć Groszek ptysiowy 125 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Aryzta_Pasztecik_z_pieczarkami_100_g'];
$product->link_rewrite = [$default_lang => 'Aryzta_Pa'];
$product->price = 1.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Aryzta Pasztecik z pieczarkami 100 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Ciabatta_z_zioami_prowansalskimi_120_g'];
$product->link_rewrite = [$default_lang => 'Ciabatta_'];
$product->price = 1.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Ciabatta z ziołami prowansalskimi 120 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Finest_Bueczki_drozdzowe_maslane_270_g_(6_sztuk)'];
$product->link_rewrite = [$default_lang => 'Tesco_Fin'];
$product->price = 8.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Finest Bułeczki drożdżowe maślane 270 g (6 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Finest_Bueczki_drozdzowe_z_kawakami_czekolady_270_g_(6_sztuk)'];
$product->link_rewrite = [$default_lang => 'Tesco_Fin'];
$product->price = 8.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Finest Bułeczki drożdżowe z kawałkami czekolady 270 g (6 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Kapusniaczek_100_g'];
$product->link_rewrite = [$default_lang => 'Kapusniac'];
$product->price = 1.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Kapuśniaczek 100 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Lekkie_patki_zbozowo-ryzowe_tradycyjne_55_g_(10_sztuk)'];
$product->link_rewrite = [$default_lang => 'Lekkie_pa'];
$product->price = 3.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Lekkie płatki zbożowo-ryżowe tradycyjne 55 g (10 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Lekkie_patki_zbozowo-ryzowe_cebulowe_55_g_(10_sztuk)'];
$product->link_rewrite = [$default_lang => 'Lekkie_pa'];
$product->price = 3.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Lekkie płatki zbożowo-ryżowe cebulowe 55 g (10 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Chleb_przasny_Podpomyki_sodkie_55_g'];
$product->link_rewrite = [$default_lang => 'Chleb_prz'];
$product->price = 3.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Chleb przaśny Podpłomyki słodkie 55 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Rafapol_Krakusek_z_kminkiem_100_g'];
$product->link_rewrite = [$default_lang => 'Rafapol_K'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Rafapol Krakusek z kminkiem 100 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Bueczki_zawijane_z_kremem_i_rodzynkami_nasaczonymi_rumem_270_g_(6_sztuk)'];
$product->link_rewrite = [$default_lang => 'Tesco_Bue'];
$product->price = 8.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Bułeczki zawijane z kremem i rodzynkami nasączonymi rumem 270 g (6 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Chleb_przasny_Podpomyki_o_smaku_paprykowym_55_g'];
$product->link_rewrite = [$default_lang => 'Chleb_prz'];
$product->price = 3.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Chleb przaśny Podpłomyki o smaku paprykowym 55 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Chleb_przasny_Podpomyki_wiejskie_55_g'];
$product->link_rewrite = [$default_lang => 'Chleb_prz'];
$product->price = 3.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Chleb przaśny Podpłomyki wiejskie 55 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Bueczki_zawijane_z_kremem_i_kawakami_czekolady_300_g_(6_sztuk)'];
$product->link_rewrite = [$default_lang => 'Tesco_Bue'];
$product->price = 9.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Bułeczki zawijane z kremem i kawałkami czekolady 300 g (6 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Buka_z_serem_70_g'];
$product->link_rewrite = [$default_lang => 'Buka_z_se'];
$product->price = 1.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bułka z serem 70 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Chleb_przasny_Podpomyki_o_smaku_cebulowym_55_g'];
$product->link_rewrite = [$default_lang => 'Chleb_prz'];
$product->price = 3.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Chleb przaśny Podpłomyki o smaku cebulowym 55 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Morato_Grissini_Paluszki_chlebowe_z_oliwa_z_oliwek_125_g'];
$product->link_rewrite = [$default_lang => 'Morato_Gr'];
$product->price = 4.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Morato Grissini Paluszki chlebowe z oliwą z oliwek 125 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Morato_Grissini_Paluszki_chlebowe_z_oliwa_z_oliwek_z_zielonymi_oliwkami_i_rozmarynem_125_g'];
$product->link_rewrite = [$default_lang => 'Morato_Gr'];
$product->price = 4.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Morato Grissini Paluszki chlebowe z oliwą z oliwek z zielonymi oliwkami i rozmarynem 125 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Aryzta_Rozek_z_grzybami_100_g'];
$product->link_rewrite = [$default_lang => 'Aryzta_Ro'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Aryzta Rożek z grzybami 100 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Morato_Grissini_Woskie_paluszki_chlebowe_luksusowe_z_nasionami_sezamu_i_oliwa_z_oliwek_125_g'];
$product->link_rewrite = [$default_lang => 'Morato_Gr'];
$product->price = 4.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Morato Grissini Włoskie paluszki chlebowe luksusowe z nasionami sezamu i oliwą z oliwek 125 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Dulcesol_Pan_Sottile_Chleb_z_ekstra_oliwa_z_oliwek_pierwszego_toczenia_310_g_(8_sztuk)'];
$product->link_rewrite = [$default_lang => 'Dulcesol_'];
$product->price = 7.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Dulcesol Pan Sottile Chleb z ekstra oliwą z oliwek pierwszego tłoczenia 310 g (8 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Muffina_z_czekolada_100_g'];
$product->link_rewrite = [$default_lang => 'Muffina_z'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Muffina z czekoladą 100 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'La_Boulangere_Miekki_chleb_szwedzki_180_g_(6_sztuk)'];
$product->link_rewrite = [$default_lang => 'La_Boulan'];
$product->price = 8.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/La Boulangère Miękki chleb szwedzki 180 g (6 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Dulcesol_Pieczone_bueczki_z_ekstra_dziewicza_oliwa_czosnkiem_i_pietruszka_160_g'];
$product->link_rewrite = [$default_lang => 'Dulcesol_'];
$product->price = 8.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Dulcesol Pieczone bułeczki z ekstra dziewiczą oliwą czosnkiem i pietruszką 160 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mestemacher_Buka_penoziarnista_fitness_260_g_(8_kromek)'];
$product->link_rewrite = [$default_lang => 'Mestemach'];
$product->price = 6.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mestemacher Bułka pełnoziarnista fitness 260 g (8 kromek).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Dakri_Kajzerki_mix_Pieczywo_pszenne_300_g_(6_sztuk)'];
$product->link_rewrite = [$default_lang => 'Dakri_Kaj'];
$product->price = 3.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Dakri Kajzerki mix Pieczywo pszenne 300 g (6 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Oskroba_Buka_wiejska_ziemniaczana_rustico'];
$product->link_rewrite = [$default_lang => 'Oskroba_B'];
$product->price = 0.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Oskroba Bułka wiejska ziemniaczana rustico.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Dulcesol_Pieczone_bueczki_z_suszonymi_pomidorami_i_oregano_160_g'];
$product->link_rewrite = [$default_lang => 'Dulcesol_'];
$product->price = 8.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Dulcesol Pieczone bułeczki z suszonymi pomidorami i oregano 160 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Buka_ze_sonecznikiem_70_g'];
$product->link_rewrite = [$default_lang => 'Buka_ze_s'];
$product->price = 0.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bułka ze słonecznikiem 70 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mamut_Panier_z_ciecierzycy_250_g'];
$product->link_rewrite = [$default_lang => 'Mamut_Pan'];
$product->price = 7.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mamut Panier z ciecierzycy 250 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Pitta_owalna_480_g_(6_sztuk)'];
$product->link_rewrite = [$default_lang => 'Tesco_Pit'];
$product->price = 9.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Pitta owalna 480 g (6 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bagietka_z_nasionami_chia_110_g'];
$product->link_rewrite = [$default_lang => 'Bagietka_'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bagietka z nasionami chia 110 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Dulcesol_Pan_Sottile_Chleb_z_ziarnami_i_nasionami_310_g_(8_sztuk)'];
$product->link_rewrite = [$default_lang => 'Dulcesol_'];
$product->price = 7.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Dulcesol Pan Sottile Chleb z ziarnami i nasionami 310 g (8 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Muffina_z_jagodami_100_g'];
$product->link_rewrite = [$default_lang => 'Muffina_z'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Muffina z jagodami 100 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Dan_Cake_Bagietki_300_g_(2_sztuki)'];
$product->link_rewrite = [$default_lang => 'Dan_Cake_'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Dan Cake Bagietki 300 g (2 sztuki).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Dijo_Orginal_Tortilla_placki_pszenne__296_g_(8_sztuki)'];
$product->link_rewrite = [$default_lang => 'Dijo_Orgi'];
$product->price = 3.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Dijo Orginal Tortilla placki pszenne  296 g (8 sztuki).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Dijo_Italian_Bread_Spody_do_pizzy_230_g_(2_sztuki)'];
$product->link_rewrite = [$default_lang => 'Dijo_Ital'];
$product->price = 3.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Dijo Italian Bread Spody do pizzy 230 g (2 sztuki).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Dakri_Panierka_Buka_tarta_paprykowa_250_g'];
$product->link_rewrite = [$default_lang => 'Dakri_Pan'];
$product->price = 2.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Dakri Panierka Bułka tarta paprykowa 250 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Pitta_kieszonki_chlebowe_350_g_(5_sztuk)'];
$product->link_rewrite = [$default_lang => 'Tesco_Pit'];
$product->price = 5.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Pitta kieszonki chlebowe 350 g (5 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Dulcesol_Pan_Sottile_Chleb_z_razowej_maki_pszennej_310_g_(8_sztuk)'];
$product->link_rewrite = [$default_lang => 'Dulcesol_'];
$product->price = 7.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Dulcesol Pan Sottile Chleb z razowej mąki pszennej 310 g (8 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Buka_Rustico_ziemniaczana_70_g'];
$product->link_rewrite = [$default_lang => 'Buka_Rust'];
$product->price = 0.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bułka Rustico ziemniaczana 70 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Pitta_grahamka_350_g_(5_sztuk)'];
$product->link_rewrite = [$default_lang => 'Tesco_Pit'];
$product->price = 7.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Pitta grahamka 350 g (5 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Nowel_Bagietka_260_g'];
$product->link_rewrite = [$default_lang => 'Nowel_Bag'];
$product->price = 1.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Nowel Bagietka 260 g.png'))
    {
    
        $image->delete();
    }
    
}
$category = new Category();
        $category->name = [$default_lang => 'Nabial_i_jaja'];
$category->id_parent=Configuration::get('PS_HOME_CATEGORY');
$category->link_rewrite=[$default_lang => 'Nabial_i_jaja'];
$category->add();
        $subcategory = new Category();
        $subcategory->name = [$default_lang => 'smietana'];
$subcategory->id_parent=$category->id;
$subcategory->link_rewrite=[$default_lang => 'smietana'];
$subcategory->add();
        $product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Piatnica_Smietana_do_zupy_18%_200_g'];
$product->link_rewrite = [$default_lang => 'Piatnica_'];
$product->price = 1.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Piątnica Śmietana do zupy 18% 200 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Piatnica_Smietana_do_zupy_18%_400_g'];
$product->link_rewrite = [$default_lang => 'Piatnica_'];
$product->price = 3.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Piątnica Śmietana do zupy 18% 400 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Primo_Smietanka_30%_200_g'];
$product->link_rewrite = [$default_lang => 'Zott_Prim'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Primo Śmietanka 30% 200 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Piatnica_Smietana_do_saatek_sosow_zup_12%_200_g'];
$product->link_rewrite = [$default_lang => 'Piatnica_'];
$product->price = 1.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Piątnica Śmietana do sałatek sosów zup 12% 200 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Smietana_18%_330_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Smi'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Śmietana 18% 330 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Piatnica_Smietana_do_deserow_36%_200_g'];
$product->link_rewrite = [$default_lang => 'Piatnica_'];
$product->price = 2.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Piątnica Śmietana do deserów 36% 200 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'aciata_Smietanka_do_ciast_i_deserow_30%_500_ml'];
$product->link_rewrite = [$default_lang => 'aciata_Sm'];
$product->price = 6.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Łaciata Śmietanka do ciast i deserów 30% 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Primo_Smietana_18%_330_g'];
$product->link_rewrite = [$default_lang => 'Zott_Prim'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Primo Śmietana 18% 330 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Krasnystaw_Smietana_18%_homogenizowana_180_g'];
$product->link_rewrite = [$default_lang => 'Krasnysta'];
$product->price = 1.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Krasnystaw Śmietana 18% homogenizowana 180 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Smietana_12%_330_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Smi'];
$product->price = 1.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Śmietana 12% 330 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Piatnica_Smietana_do_saatek_sosow_zup_12%_400_g'];
$product->link_rewrite = [$default_lang => 'Piatnica_'];
$product->price = 2.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Piątnica Śmietana do sałatek sosów zup 12% 400 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Krasnystaw_Smietana_12%_homogenizowana_180_g'];
$product->link_rewrite = [$default_lang => 'Krasnysta'];
$product->price = 1.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Krasnystaw Śmietana 12% homogenizowana 180 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Krasnystaw_Smietana_18%_homogenizowana_360_g'];
$product->link_rewrite = [$default_lang => 'Krasnysta'];
$product->price = 3.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Krasnystaw Śmietana 18% homogenizowana 360 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Piatnica_Smietanka_30%_400_ml'];
$product->link_rewrite = [$default_lang => 'Piatnica_'];
$product->price = 4.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Piątnica Śmietanka 30% 400 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'aciata_Smietanka_do_zup_i_sosow_18%_500_ml'];
$product->link_rewrite = [$default_lang => 'aciata_Sm'];
$product->price = 4.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Łaciata Śmietanka do zup i sosów 18% 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Primo_Smietana_18%_180_g'];
$product->link_rewrite = [$default_lang => 'Zott_Prim'];
$product->price = 2.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Primo Śmietana 18% 180 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Primo_Smietana_12%_330_g'];
$product->link_rewrite = [$default_lang => 'Zott_Prim'];
$product->price = 2.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Primo Śmietana 12% 330 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'FigAND_Smietana_12%_do_saatek_200_g'];
$product->link_rewrite = [$default_lang => 'FigAND_Sm'];
$product->price = 1.20;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/FigAND Śmietana 12% do sałatek 200 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Krasnystaw_Smietana_12%_homogenizowana_360_g'];
$product->link_rewrite = [$default_lang => 'Krasnysta'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Krasnystaw Śmietana 12% homogenizowana 360 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Primo_Smietana_12%_180_g'];
$product->link_rewrite = [$default_lang => 'Zott_Prim'];
$product->price = 1.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Primo Śmietana 12% 180 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'aciata_Smietanka_do_kawy_12%_500_ml'];
$product->link_rewrite = [$default_lang => 'aciata_Sm'];
$product->price = 4.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Łaciata Śmietanka do kawy 12% 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Smietana_Polska_gesta_12%_200_g'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Śmietana Polska gęsta 12% 200 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Parkadia_Smietanka_UHT_10%_500_g'];
$product->link_rewrite = [$default_lang => 'Parkadia_'];
$product->price = 3.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Parkadia Śmietanka UHT 10% 500 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Smietanka_Polska_30%_200_ml'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 2.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Śmietanka Polska 30% 200 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Bita_smietanka_UHT_o_smaku_waniliowym_250_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Bit'];
$product->price = 4.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Bita śmietanka UHT o smaku waniliowym 250 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Smietana_Polska_gesta_18%_200_g'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 2.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Śmietana Polska gęsta 18% 200 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Smietanka_kremowa_UHT_30%_250_ml'];
$product->link_rewrite = [$default_lang => 'Tesco_Smi'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Śmietanka kremowa UHT 30% 250 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Smietana_18%_180_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Smi'];
$product->price = 1.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Śmietana 18% 180 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bakoma_Bita_smietanka_spray_250_g'];
$product->link_rewrite = [$default_lang => 'Bakoma_Bi'];
$product->price = 7.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bakoma Bita śmietanka spray 250 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Smietana_12%_180_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Smi'];
$product->price = 1.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Śmietana 12% 180 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Smietana_10%_330_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Smi'];
$product->price = 1.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Śmietana 10% 330 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Value_Kremowa_do_zup_i_sosow_Ukwaszona_emulsja_tuszczowa_18%_200_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Val'];
$product->price = 1.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Value Kremowa do zup i sosów Ukwaszona emulsja tłuszczowa 18% 200 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Wypasiona_Smietanka_30%_330_ml'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 4.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Wypasiona Śmietanka 30% 330 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Piatnica_Smietanka_do_ubijania_kremow_i_domowego_masa_42%_200_ml'];
$product->link_rewrite = [$default_lang => 'Piatnica_'];
$product->price = 4.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Piątnica Śmietanka do ubijania kremów i domowego masła 42% 200 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Wypasiona_Smietanka_12%_330_ml'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 3.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Wypasiona Śmietanka 12% 330 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Value_Bita_smietana_w_sprayu_250_ml'];
$product->link_rewrite = [$default_lang => 'Tesco_Val'];
$product->price = 4.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Value Bita śmietana w sprayu 250 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Wypasiona_Smietanka_18%_330_ml'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 3.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Wypasiona Śmietanka 18% 330 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Value_Kremowa_do_saatek_12%_Ukwaszona_emulsja_tuszczowa_200_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Val'];
$product->price = 1.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Value Kremowa do sałatek 12% Ukwaszona emulsja tłuszczowa 200 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Smietana_10%_180_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Smi'];
$product->price = 1.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Śmietana 10% 180 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Krem_smietanowy_z_plesniowym_serem_150_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Kre'];
$product->price = 3.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Krem śmietanowy z pleśniowym serem 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Krem_smietanowy_z_czosnkiem_150_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Kre'];
$product->price = 3.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Krem śmietanowy z czosnkiem 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Krem_smietanowy_z_chrzanem_150_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Kre'];
$product->price = 3.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Krem śmietanowy z chrzanem 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Smietanka_UHT_10%_500_ml'];
$product->link_rewrite = [$default_lang => 'Tesco_Smi'];
$product->price = 3.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Śmietanka UHT 10% 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Krem_smietanowy_naturalny_150_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Kre'];
$product->price = 3.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Krem śmietanowy naturalny 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Horeca_Line_Smietanka_Kuchmistrza_deserowa_34%_1_l'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 14.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Horeca Line Śmietanka Kuchmistrza deserowa 34% 1 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Krem_smietanowy_ze_szczypiorkiem_150_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Kre'];
$product->price = 3.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Krem śmietanowy ze szczypiorkiem 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Smietanka_Polska_30%_1_l'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 13.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Śmietanka Polska 30% 1 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Krem_smietanowy_z_szynka_150_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Kre'];
$product->price = 3.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Krem śmietanowy z szynką 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Smietana_Polska_gesta_18%_400_g'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 3.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Śmietana Polska gęsta 18% 400 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'SMIETANA_18%_ZOTT_1kg'];
$product->link_rewrite = [$default_lang => 'SMIETANA_'];
$product->price = 11.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/SMIETANA 18% ZOTT 1kg.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Horeca_Line_Smietanka_Kuchmistrza_18%_1_l'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 11.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Horeca Line Śmietanka Kuchmistrza 18% 1 l.png'))
    {
    
        $image->delete();
    }
    
}
$subcategory = new Category();
        $subcategory->name = [$default_lang => 'mleko'];
$subcategory->id_parent=$category->id;
$subcategory->link_rewrite=[$default_lang => 'mleko'];
$subcategory->add();
        $product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Wypasione_Mleko_2,0%_1_l'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 2.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Wypasione Mleko 2,0% 1 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'owicz_Mleko_owickie_UHT_3,2%_1_l'];
$product->link_rewrite = [$default_lang => 'owicz_Mle'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Łowicz Mleko łowickie UHT 3,2% 1 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'aciate_Mleko_UHT_2,0%_1_l'];
$product->link_rewrite = [$default_lang => 'aciate_Ml'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Łaciate Mleko UHT 2,0% 1 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Mleko_UHT_3,2%_1_l'];
$product->link_rewrite = [$default_lang => 'Tesco_Mle'];
$product->price = 2.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Mleko UHT 3,2% 1 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Mleko_UHT_1,5%_1_l'];
$product->link_rewrite = [$default_lang => 'Tesco_Mle'];
$product->price = 2.09;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Mleko UHT 1,5% 1 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Mleko_Polskie_spozywcze_3,2%_1_l'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 2.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Mleko Polskie spożywcze 3,2% 1 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Mleko_Polskie_spozywcze_2,0%_1_l'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 2.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Mleko Polskie spożywcze 2,0% 1 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Wypasione_Mleko_3,2%_1_l'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 2.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Wypasione Mleko 3,2% 1 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'aciate_Mleko_UHT_3,2%_1_l'];
$product->link_rewrite = [$default_lang => 'aciate_Ml'];
$product->price = 3.09;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Łaciate Mleko UHT 3,2% 1 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Swieze_mleko_polskie_2,0%_1_l'];
$product->link_rewrite = [$default_lang => 'Tesco_Swi'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Świeże mleko polskie 2,0% 1 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'aciate_Mleko_UHT_2,0%_0,5_l'];
$product->link_rewrite = [$default_lang => 'aciate_Ml'];
$product->price = 1.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Łaciate Mleko UHT 2,0% 0,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Swieze_mleko_polskie_3,2%_1_l'];
$product->link_rewrite = [$default_lang => 'Tesco_Swi'];
$product->price = 2.09;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Świeże mleko polskie 3,2% 1 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mleko_zambrowskie_UHT_0,5%_1_l'];
$product->link_rewrite = [$default_lang => 'Mleko_zam'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mleko zambrowskie UHT 0,5% 1 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'owicz_Mleko_owickie_UHT_2%_1_l'];
$product->link_rewrite = [$default_lang => 'owicz_Mle'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Łowicz Mleko łowickie UHT 2% 1 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'aciate_Mleko_UHT_0,5%_1_l'];
$product->link_rewrite = [$default_lang => 'aciate_Ml'];
$product->price = 2.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Łaciate Mleko UHT 0,5% 1 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'aciate_Mleko_UHT_3,2%_0,5_l'];
$product->link_rewrite = [$default_lang => 'aciate_Ml'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Łaciate Mleko UHT 3,2% 0,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'aciate_Mleko_swieze_2%_1_l'];
$product->link_rewrite = [$default_lang => 'aciate_Ml'];
$product->price = 2.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Łaciate Mleko świeże 2% 1 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Robico_Zimne_Mleko_swieze_2,0%_1_l'];
$product->link_rewrite = [$default_lang => 'Robico_Zi'];
$product->price = 3.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Robico Zimne Mleko świeże 2,0% 1 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'aciate_Mleko_swieze_3,2%_1_l'];
$product->link_rewrite = [$default_lang => 'aciate_Ml'];
$product->price = 2.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Łaciate Mleko świeże 3,2% 1 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Robico_Zimne_Mleko_swieze_3,2%_1_l'];
$product->link_rewrite = [$default_lang => 'Robico_Zi'];
$product->price = 3.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Robico Zimne Mleko świeże 3,2% 1 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'SM_Gostyn_Mleko_gostynskie_zageszczone_niesodzone_light_4%_500_g'];
$product->link_rewrite = [$default_lang => 'SM_Gostyn'];
$product->price = 3.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/SM Gostyń Mleko gostyńskie zagęszczone niesłodzone light 4% 500 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'aciate_Mleko_UHT_2,0%_1,5_l'];
$product->link_rewrite = [$default_lang => 'aciate_Ml'];
$product->price = 4.09;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Łaciate Mleko UHT 2,0% 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mu!_Mleko_UHT_1,5%_1_l'];
$product->link_rewrite = [$default_lang => 'Mu__Mleko'];
$product->price = 2.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mu! Mleko UHT 1,5% 1 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'aciate_Mleko_UHT_0%_1_l'];
$product->link_rewrite = [$default_lang => 'aciate_Ml'];
$product->price = 2.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Łaciate Mleko UHT 0% 1 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'aciate_Mleko_UHT_zageszczone_niesodzone_7,5%_500_ml'];
$product->link_rewrite = [$default_lang => 'aciate_Ml'];
$product->price = 3.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Łaciate Mleko UHT zagęszczone niesłodzone 7,5% 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'SM_Gostyn_Mleko_gostynskie_zageszczone_niesodzone_7,5%_200_g'];
$product->link_rewrite = [$default_lang => 'SM_Gostyn'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/SM Gostyń Mleko gostyńskie zagęszczone niesłodzone 7,5% 200 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'SM_Gostyn_Mleko_gostynskie_zageszczone_niesodzone_7,5%_500_g'];
$product->link_rewrite = [$default_lang => 'SM_Gostyn'];
$product->price = 3.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/SM Gostyń Mleko gostyńskie zagęszczone niesłodzone 7,5% 500 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'aciate_Mleko_UHT_0,5%_0,5_l'];
$product->link_rewrite = [$default_lang => 'aciate_Ml'];
$product->price = 1.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Łaciate Mleko UHT 0,5% 0,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'aciate_Mleko_UHT_3,2%_1,5_l'];
$product->link_rewrite = [$default_lang => 'aciate_Ml'];
$product->price = 4.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Łaciate Mleko UHT 3,2% 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Muller_Mullermilch_czekoladowy_Napoj_mleczny_400_g'];
$product->link_rewrite = [$default_lang => 'Muller_Mu'];
$product->price = 3.09;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Müller Müllermilch czekoladowy Napój mleczny 400 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Swieze_mleko_polskie_1,5%_500_ml'];
$product->link_rewrite = [$default_lang => 'Tesco_Swi'];
$product->price = 1.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Świeże mleko polskie 1,5% 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'SM_Gostyn_Mleko_gostynskie_zageszczone_sodzone_150_g'];
$product->link_rewrite = [$default_lang => 'SM_Gostyn'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/SM Gostyń Mleko gostyńskie zagęszczone słodzone 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Muller_Mullermilch_pistacjowo-kokosowy_Napoj_mleczny_400_g'];
$product->link_rewrite = [$default_lang => 'Muller_Mu'];
$product->price = 3.09;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Müller Müllermilch pistacjowo-kokosowy Napój mleczny 400 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Wypasione_Mleko_2,0%_500_ml'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 1.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Wypasione Mleko 2,0% 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Wypasione_Mleko_czekoladowe_200_ml'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 1.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Wypasione Mleko czekoladowe 200 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Wypasione_Mleko_3,2%_500_ml'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Wypasione Mleko 3,2% 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'SM_Gostyn_Mleko_gostynskie_zageszczone_sodzone_8,0%_530_g'];
$product->link_rewrite = [$default_lang => 'SM_Gostyn'];
$product->price = 6.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/SM Gostyń Mleko gostyńskie zagęszczone słodzone 8,0% 530 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Hula_Krasula_Mleko_pasteryzowane_2,0%_1_l'];
$product->link_rewrite = [$default_lang => 'Hula_Kras'];
$product->price = 2.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Hula Krasula Mleko pasteryzowane 2,0% 1 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Muller_Mullermilch_bananowy_Napoj_mleczny_400_g'];
$product->link_rewrite = [$default_lang => 'Muller_Mu'];
$product->price = 3.09;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Müller Müllermilch bananowy Napój mleczny 400 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Smietanka_do_kawy_UHT_10%_10_x_9,8_ml'];
$product->link_rewrite = [$default_lang => 'Tesco_Smi'];
$product->price = 0.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Śmietanka do kawy UHT 10% 10 x 9,8 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Muller_Mullermilch_kokosowy_Napoj_mleczny_400_g'];
$product->link_rewrite = [$default_lang => 'Muller_Mu'];
$product->price = 3.09;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Müller Müllermilch kokosowy Napój mleczny 400 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Dan_Mleko_czekoladowe_320_g'];
$product->link_rewrite = [$default_lang => 'Danone_Da'];
$product->price = 2.09;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Dan Mleko czekoladowe 320 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'SM_Gostyn_Kajmak_Masa_krowkowa_510_g'];
$product->link_rewrite = [$default_lang => 'SM_Gostyn'];
$product->price = 6.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/SM Gostyń Kajmak Masa krówkowa 510 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Candia_Mleko_kozie_1_l'];
$product->link_rewrite = [$default_lang => 'Candia_Ml'];
$product->price = 8.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Candia Mleko kozie 1 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Muller_Mullermilch_Napoj_mleczny_o_smaku_biaej_czekolady_i_pistacji_377_ml'];
$product->link_rewrite = [$default_lang => 'Muller_Mu'];
$product->price = 3.09;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Müller Müllermilch Napój mleczny o smaku białej czekolady i pistacji 377 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Swieze_mleko_polskie_3,2%_500_ml'];
$product->link_rewrite = [$default_lang => 'Tesco_Swi'];
$product->price = 1.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Świeże mleko polskie 3,2% 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Muller_Mullermilch_Napoj_mleczny_o_smaku_czekoladowo-orzechowym_377_ml'];
$product->link_rewrite = [$default_lang => 'Muller_Mu'];
$product->price = 3.09;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Müller Müllermilch Napój mleczny o smaku czekoladowo-orzechowym 377 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'SM_Gostyn_Mleko_gostynskie_zageszczone_niesodzone_light_4%_200_g'];
$product->link_rewrite = [$default_lang => 'SM_Gostyn'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/SM Gostyń Mleko gostyńskie zagęszczone niesłodzone light 4% 200 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Muller_Mullermilch_truskawkowy_Napoj_mleczny_400_g'];
$product->link_rewrite = [$default_lang => 'Muller_Mu'];
$product->price = 3.09;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Müller Müllermilch truskawkowy Napój mleczny 400 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Wypasione_Mleko_zageszczone_z_magnezem_light_350_g'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 2.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Wypasione Mleko zagęszczone z magnezem light 350 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Hula_Krasula_Mleko_pasteryzowane_3,2%_1_l'];
$product->link_rewrite = [$default_lang => 'Hula_Kras'];
$product->price = 2.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Hula Krasula Mleko pasteryzowane 3,2% 1 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Danio_Shake_It_Napoj_jogurtowy_o_smaku_truskawkowym_240_g'];
$product->link_rewrite = [$default_lang => 'Danone_Da'];
$product->price = 3.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Danio Shake It Napój jogurtowy o smaku truskawkowym 240 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Mleko_w_proszku_pene_400_g'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 12.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Mleko w proszku pełne 400 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Danio_Shake_It_Napoj_jogurtowy_waniliowy_240_g'];
$product->link_rewrite = [$default_lang => 'Danone_Da'];
$product->price = 3.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Danio Shake It Napój jogurtowy waniliowy 240 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'SM_Gostyn_Mleko_gostynskie_zageszczone_sodzone_kakaowe_150_g'];
$product->link_rewrite = [$default_lang => 'SM_Gostyn'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/SM Gostyń Mleko gostyńskie zagęszczone słodzone kakaowe 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Horeca_Line_Mleko_Kuchmistrza_3,2%_1_l'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 3.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Horeca Line Mleko Kuchmistrza 3,2% 1 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Wypasione_Mleko_o_smaku_truskawkowym_200_ml'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 1.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Wypasione Mleko o smaku truskawkowym 200 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mu!_Mleko_UHT_3,2%_1_l'];
$product->link_rewrite = [$default_lang => 'Mu__Mleko'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mu! Mleko UHT 3,2% 1 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'owicz_Smietanka_do_kawy_UHT_10%_200_g_(20_sztuk)'];
$product->link_rewrite = [$default_lang => 'owicz_Smi'];
$product->price = 2.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Łowicz Śmietanka do kawy UHT 10% 200 g (20 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'SM_Gostyn_Mleko_gostynskie_zageszczone_niesodzone_z_magnezem_light_4%_500_g'];
$product->link_rewrite = [$default_lang => 'SM_Gostyn'];
$product->price = 4.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/SM Gostyń Mleko gostyńskie zagęszczone niesłodzone z magnezem light 4% 500 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Wypasione_Mleko_zageszczone_z_magnezem_light_200_g'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Wypasione Mleko zagęszczone z magnezem light 200 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Horeca_Line_Mleko_Kuchmistrza_2,0%_1_l'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 3.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Horeca Line Mleko Kuchmistrza 2,0% 1 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Mleko_zageszczone_sodzone_karmelowe_150_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Mle'];
$product->price = 2.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Mleko zagęszczone słodzone karmelowe 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Wypasione_Mleko_zageszczone_350_g'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 2.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Wypasione Mleko zagęszczone 350 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Smietanka_do_kawy_UHT_100_g_(10_sztuk)'];
$product->link_rewrite = [$default_lang => 'Zott_Smie'];
$product->price = 2.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Śmietanka do kawy UHT 100 g (10 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'owicz_Smietanka_do_kawy_100_g_(10_sztuk)'];
$product->link_rewrite = [$default_lang => 'owicz_Smi'];
$product->price = 1.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Łowicz Śmietanka do kawy 100 g (10 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'SM_Gostyn_Mleko_gostynskie_zageszczone_niesodzone_z_bonnikiem_light_4%_500_g'];
$product->link_rewrite = [$default_lang => 'SM_Gostyn'];
$product->price = 4.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/SM Gostyń Mleko gostyńskie zagęszczone niesłodzone z błonnikiem light 4% 500 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Serduszko_Pyszne_Mleko_smak_waniliowy_250_ml'];
$product->link_rewrite = [$default_lang => 'Zott_Serd'];
$product->price = 2.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Serduszko Pyszne Mleko smak waniliowy 250 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Wypasione_Mleko_waniliowe_200_ml'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 1.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Wypasione Mleko waniliowe 200 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Serduszko_Pyszne_Mleko_czekoladowe_250_ml'];
$product->link_rewrite = [$default_lang => 'Zott_Serd'];
$product->price = 2.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Serduszko Pyszne Mleko czekoladowe 250 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Muller_Mullermilch_waniliowy_Napoj_mleczny_400_g'];
$product->link_rewrite = [$default_lang => 'Muller_Mu'];
$product->price = 3.09;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Müller Müllermilch waniliowy Napój mleczny 400 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Mleko_zageszczone_500_ml'];
$product->link_rewrite = [$default_lang => 'Tesco_Mle'];
$product->price = 3.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Mleko zagęszczone 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Hochwald_Kawa_mrozona_0,5_l'];
$product->link_rewrite = [$default_lang => 'Hochwald_'];
$product->price = 3.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Hochwald Kawa mrożona 0,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Smietanka_do_kawy_310_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Smi'];
$product->price = 3.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Śmietanka do kawy 310 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Hochwald_Kawa_mrozona_250_ml'];
$product->link_rewrite = [$default_lang => 'Hochwald_'];
$product->price = 3.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Hochwald Kawa mrożona 250 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Kawa_mrozona_500_ml'];
$product->link_rewrite = [$default_lang => 'Tesco_Kaw'];
$product->price = 3.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Kawa mrożona 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Wypasione_Mleko_zageszczone_500_g'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 3.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Wypasione Mleko zagęszczone 500 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'MLEKO_SW_MLEKOVITA_3,2%_1L'];
$product->link_rewrite = [$default_lang => 'MLEKO_SW_'];
$product->price = 2.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/MLEKO SW MLEKOVITA 3,2% 1L.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Piatnica_Mleko_wiejskie_swieze_3,2%_1_l'];
$product->link_rewrite = [$default_lang => 'Piatnica_'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Piątnica Mleko wiejskie świeże 3,2% 1 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Super_Body_Active_Napoj_proteinowy_o_smaku_czekoladowym_350_g'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 4.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Super Body Active Napój proteinowy o smaku czekoladowym 350 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'MLEKO_SW_MLEKOVITA_2%_1L'];
$product->link_rewrite = [$default_lang => 'MLEKO_SW_'];
$product->price = 2.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/MLEKO SW MLEKOVITA 2% 1L.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Piatnica_Mleko_wiejskie_swieze_2,0%_1_l'];
$product->link_rewrite = [$default_lang => 'Piatnica_'];
$product->price = 2.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Piątnica Mleko wiejskie świeże 2,0% 1 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Super_Body_Active_Napoj_proteinowy_o_smaku_bananowym_350_g'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 4.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Super Body Active Napój proteinowy o smaku bananowym 350 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Super_Body_Active_Napoj_proteinowy_o_smaku_truskawkowym_350_g'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 4.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Super Body Active Napój proteinowy o smaku truskawkowym 350 g.png'))
    {
    
        $image->delete();
    }
    
}
$subcategory = new Category();
        $subcategory->name = [$default_lang => 'maslo_i_margaryna'];
$subcategory->id_parent=$category->id;
$subcategory->link_rewrite=[$default_lang => 'maslo_i_margaryna'];
$subcategory->add();
        $subcategory = new Category();
        $subcategory->name = [$default_lang => 'ser'];
$subcategory->id_parent=$category->id;
$subcategory->link_rewrite=[$default_lang => 'ser'];
$subcategory->add();
        $product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Sierpc_Ser_krolewski_135_g'];
$product->link_rewrite = [$default_lang => 'Sierpc_Se'];
$product->price = 3.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Sierpc Ser królewski 135 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Ser_rycki_Edam_w_plastrach'];
$product->link_rewrite = [$default_lang => 'Ser_rycki'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Ser rycki Edam w plastrach.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Hochland_Gouda_Ser_zoty_w_plastrach_135_g_(8_plastrow)'];
$product->link_rewrite = [$default_lang => 'Hochland_'];
$product->price = 4.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Hochland Gouda Ser żółty w plastrach 135 g (8 plastrów).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Favita_Ser_saatkowo-kanapkowy_potusty_270_g'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Favita Ser sałatkowo-kanapkowy półtłusty 270 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bieluch_Serek_naturalny_150_g'];
$product->link_rewrite = [$default_lang => 'Bieluch_S'];
$product->price = 2.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bieluch Serek naturalny 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Galbani_Mozzarella_Ser_125_g'];
$product->link_rewrite = [$default_lang => 'Galbani_M'];
$product->price = 4.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Galbani Mozzarella Ser 125 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'SER_KROLEWSKI_SIERPC_LM'];
$product->link_rewrite = [$default_lang => 'SER_KROLE'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/SER KROLEWSKI SIERPC LM.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Almette_smietankowy_Puszysty_serek_twarogowy_150_g'];
$product->link_rewrite = [$default_lang => 'Almette_s'];
$product->price = 3.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Almette śmietankowy Puszysty serek twarogowy 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Serenada_Ser_Salami'];
$product->link_rewrite = [$default_lang => 'Serenada_'];
$product->price = 2.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Serenada Ser Salami.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Hochland_Maasdamer_Ser_zoty_w_plastrach_135_g_(8_plastrow)'];
$product->link_rewrite = [$default_lang => 'Hochland_'];
$product->price = 4.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Hochland Maasdamer Ser żółty w plastrach 135 g (8 plastrów).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Ser_Edam_woszczowski_w_plastrach'];
$product->link_rewrite = [$default_lang => 'Ser_Edam_'];
$product->price = 2.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Ser Edam włoszczowski w plastrach.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Favita_Ser_saatkowo-kanapkowy_tusty_270_g'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Favita Ser sałatkowo-kanapkowy tłusty 270 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Ser_mazdamer_w_plastrach'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 2.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Ser mazdamer w plastrach.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'NaTurek_Nasz_Camembert_naturalny_Ser_120_g'];
$product->link_rewrite = [$default_lang => 'NaTurek_N'];
$product->price = 4.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/NaTurek Nasz Camembert naturalny Ser 120 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Dolina_Narwi_Ser_z_dziurami_185_g'];
$product->link_rewrite = [$default_lang => 'Dolina_Na'];
$product->price = 4.00;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Dolina Narwi Ser z dziurami 185 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'President_Camembert_Naturalny_Ser_180_g_(2_sztuki)'];
$product->link_rewrite = [$default_lang => 'President'];
$product->price = 5.00;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Président Camembert Naturalny Ser 180 g (2 sztuki).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Almette_z_zioami_Puszysty_serek_twarogowy_150_g'];
$product->link_rewrite = [$default_lang => 'Almette_z'];
$product->price = 3.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Almette z ziołami Puszysty serek twarogowy 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Mozzarella_w_zalewie_mini_kulki_125_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Moz'];
$product->price = 3.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Mozzarella w zalewie mini kulki 125 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Ser_Zota_Gouda_z_dziurami'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Ser Złota Gouda z dziurami.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Ser_Hit_w_plastrach'];
$product->link_rewrite = [$default_lang => 'Ser_Hit_w'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Ser Hit w plastrach.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bieluch_Lekki_serek_naturalny_130_g'];
$product->link_rewrite = [$default_lang => 'Bieluch_L'];
$product->price = 1.70;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bieluch Lekki serek naturalny 130 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Ser_woszczowski_w_plastrach'];
$product->link_rewrite = [$default_lang => 'Ser_woszc'];
$product->price = 2.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Ser włoszczowski w plastrach.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Piatnica_Twoj_Smak_Puszysty_Serek_smietankowy_naturalny_150_g'];
$product->link_rewrite = [$default_lang => 'Piatnica_'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Piątnica Twój Smak Puszysty Serek śmietankowy naturalny 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Piatnica_Twoj_Smak_Serek_smietankowy_naturalny_135_g'];
$product->link_rewrite = [$default_lang => 'Piatnica_'];
$product->price = 2.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Piątnica Twój Smak Serek śmietankowy naturalny 135 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Hochland_Edamski_Ser_zoty_w_plastrach_135_g_(8_plastrow)'];
$product->link_rewrite = [$default_lang => 'Hochland_'];
$product->price = 4.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Hochland Edamski Ser żółty w plastrach 135 g (8 plastrów).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Sierpc_Ser_krolewski_250_g'];
$product->link_rewrite = [$default_lang => 'Sierpc_Se'];
$product->price = 7.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Sierpc Ser królewski 250 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Hochland_Tylzycki_Ser_zoty_w_plastrach_135_g_(8_plastrow)'];
$product->link_rewrite = [$default_lang => 'Hochland_'];
$product->price = 4.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Hochland Tylżycki Ser żółty w plastrach 135 g (8 plastrów).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Zottarella_Classic_Ser_mozzarella_kulka_125_g'];
$product->link_rewrite = [$default_lang => 'Zott_Zott'];
$product->price = 4.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Zottarella Classic Ser mozzarella kulka 125 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Creamfields_Ser_plesniowy_Camembert_120_g'];
$product->link_rewrite = [$default_lang => 'Creamfiel'];
$product->price = 3.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Creamfields Ser pleśniowy Camembert 120 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Favita_Ser_saatkowo-kanapkowy_potusty_270_g'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Favita Ser sałatkowo-kanapkowy półtłusty 270 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Mozzarella_Ser_w_zalewie_100_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Moz'];
$product->price = 2.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Mozzarella Ser w zalewie 100 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Piatnica_Twoj_Smak_Serek_smietankowy_naturalny_200_g'];
$product->link_rewrite = [$default_lang => 'Piatnica_'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Piątnica Twój Smak Serek śmietankowy naturalny 200 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Almette_z_pomidorami_dojrzewajacymi_w_soncu_Puszysty_serek_twarogowy_150_g'];
$product->link_rewrite = [$default_lang => 'Almette_z'];
$product->price = 3.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Almette z pomidorami dojrzewającymi w słońcu Puszysty serek twarogowy 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Sierpc_Ser_krolewski_wedzony'];
$product->link_rewrite = [$default_lang => 'Sierpc_Se'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Sierpc Ser królewski wędzony.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'NaTurek_Blue_Ser_z_niebieska_plesnia_100_g'];
$product->link_rewrite = [$default_lang => 'NaTurek_B'];
$product->price = 4.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/NaTurek Blue Ser z niebieską pleśnią 100 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Philadelphia_Original_Serek_smietankowy_125_g'];
$product->link_rewrite = [$default_lang => 'Philadelp'];
$product->price = 4.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Philadelphia Original Serek śmietankowy 125 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Almette_z_chrzanem_Puszysty_serek_twarogowy_150_g'];
$product->link_rewrite = [$default_lang => 'Almette_z'];
$product->price = 3.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Almette z chrzanem Puszysty serek twarogowy 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Skarby_Serowara_Ser_Bursztyn_190_g'];
$product->link_rewrite = [$default_lang => 'Skarby_Se'];
$product->price = 10.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Skarby Serowara Ser Bursztyn 190 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekpol_Edam_Ser_porcjowany_250_g'];
$product->link_rewrite = [$default_lang => 'Mlekpol_E'];
$product->price = 6.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekpol Edam Ser porcjowany 250 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Serenada_Okragy_ser_zoty_Salami_135_g'];
$product->link_rewrite = [$default_lang => 'Serenada_'];
$product->price = 4.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Serenada Okrągły ser żółty Salami 135 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Almette_jogurtowy_Puszysty_serek_twarogowy_150_g'];
$product->link_rewrite = [$default_lang => 'Almette_j'];
$product->price = 3.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Almette jogurtowy Puszysty serek twarogowy 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'aciaty_Serek_smietankowy_naturalny_135_g'];
$product->link_rewrite = [$default_lang => 'aciaty_Se'];
$product->price = 2.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Łaciaty Serek śmietankowy naturalny 135 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Almette_z_ogorkiem_i_zioami_Puszysty_serek_twarogowy_150_g'];
$product->link_rewrite = [$default_lang => 'Almette_z'];
$product->price = 3.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Almette z ogórkiem i ziołami Puszysty serek twarogowy 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Hochland_Ser_kremowy_smietankowy_100_g'];
$product->link_rewrite = [$default_lang => 'Hochland_'];
$product->price = 2.09;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Hochland Ser kremowy śmietankowy 100 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Serenada_Ser_zoty_Gouda_135_g'];
$product->link_rewrite = [$default_lang => 'Serenada_'];
$product->price = 4.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Serenada Ser żółty Gouda 135 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Zottarella_Light_Ser_mozzarella_125_g'];
$product->link_rewrite = [$default_lang => 'Zott_Zott'];
$product->price = 4.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Zottarella Light Ser mozzarella 125 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekpol_Ser_Salami'];
$product->link_rewrite = [$default_lang => 'Mlekpol_S'];
$product->price = 2.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekpol Ser Salami.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Creamfields_Ser_plesniowy_Brie_125_g'];
$product->link_rewrite = [$default_lang => 'Creamfiel'];
$product->price = 3.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Creamfields Ser pleśniowy Brie 125 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Sierpc_Ser_krolewski_light_150_g'];
$product->link_rewrite = [$default_lang => 'Sierpc_Se'];
$product->price = 3.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Sierpc Ser królewski light 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'MSM_Monki_Ser_Edamski'];
$product->link_rewrite = [$default_lang => 'MSM_Monki'];
$product->price = 2.45;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/MSM Mońki Ser Edamski.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Ser_Mazdam_w_plastrach'];
$product->link_rewrite = [$default_lang => 'Ser_Mazda'];
$product->price = 3.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Ser Mazdam w plastrach.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'NaTurek_Nasz_Kozi_Serek_do_smarowania_150_g'];
$product->link_rewrite = [$default_lang => 'NaTurek_N'];
$product->price = 7.09;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/NaTurek Nasz Kozi Serek do smarowania 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Kiri_z_twarozku_smietankowego_Ser_topiony_100_g_(6_porcji)'];
$product->link_rewrite = [$default_lang => 'Kiri_z_tw'];
$product->price = 3.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Kiri z twarożku śmietankowego Ser topiony 100 g (6 porcji).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'NaTurek_Nasz_Brie_naturalny_Ser_125_g'];
$product->link_rewrite = [$default_lang => 'NaTurek_N'];
$product->price = 4.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/NaTurek Nasz Brie naturalny Ser 125 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Ser_Grana_Padano_200_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Ser'];
$product->price = 12.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Ser Grana Padano 200 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Ser_Gouda_holenderska_w_plastrach'];
$product->link_rewrite = [$default_lang => 'Ser_Gouda'];
$product->price = 3.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Ser Gouda holenderska w plastrach.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Creamfields_Ser_plesniowy_Camembert_z_zielonym_pieprzem_120_g'];
$product->link_rewrite = [$default_lang => 'Creamfiel'];
$product->price = 3.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Creamfields Ser pleśniowy Camembert z zielonym pieprzem 120 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'NaTurek_Nasz_Camembert_z_zielonym_pieprzem_Ser_120_g'];
$product->link_rewrite = [$default_lang => 'NaTurek_N'];
$product->price = 4.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/NaTurek Nasz Camembert z zielonym pieprzem Ser 120 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'owicz_Gouda_Ser_mierzwiony_150_g'];
$product->link_rewrite = [$default_lang => 'owicz_Gou'];
$product->price = 4.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Łowicz Gouda Ser mierzwiony 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Piatnica_Twoj_Smak_Serek_smietankowy_ze_szczypiorkiem_135_g'];
$product->link_rewrite = [$default_lang => 'Piatnica_'];
$product->price = 2.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Piątnica Twój Smak Serek śmietankowy ze szczypiorkiem 135 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Sertop_Tychy_Ser_topiony_zoty_ementaler_100_g'];
$product->link_rewrite = [$default_lang => 'Sertop_Ty'];
$product->price = 1.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Sertop Tychy Ser topiony złoty ementaler 100 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Ser_feta_200_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Ser'];
$product->price = 9.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Ser feta 200 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Ser_Gouda_plastry_500_g'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 16.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Ser Gouda plastry 500 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Hochland_Ser_kremowy_w_trojkacikach_Mixtett_200_g'];
$product->link_rewrite = [$default_lang => 'Hochland_'];
$product->price = 4.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Hochland Ser kremowy w trójkącikach Mixtett 200 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Valbon_Camembert_oryginalny_180_g'];
$product->link_rewrite = [$default_lang => 'Valbon_Ca'];
$product->price = 7.55;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Valbon Camembert oryginalny 180 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Gouda_z_zioami_Ser_w_plastrach_150_g'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 3.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Gouda z ziołami Ser w plastrach 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Almette_z_czosnkiem_niedzwiedzim_Puszysty_serek_twarogowy_150_g'];
$product->link_rewrite = [$default_lang => 'Almette_z'];
$product->price = 3.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Almette z czosnkiem niedźwiedzim Puszysty serek twarogowy 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Hochland_Ser_kremowy_w_trojkacikach_smietankowy_200_g'];
$product->link_rewrite = [$default_lang => 'Hochland_'];
$product->price = 4.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Hochland Ser kremowy w trójkącikach śmietankowy 200 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekpol_Salami_Ser_w_plastrach_150_g'];
$product->link_rewrite = [$default_lang => 'Mlekpol_S'];
$product->price = 4.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekpol Salami Ser w plastrach 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'NaTurek_Nasz_Camembert_z_grzybami_Ser_120_g'];
$product->link_rewrite = [$default_lang => 'NaTurek_N'];
$product->price = 4.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/NaTurek Nasz Camembert z grzybami Ser 120 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'NaTurek_Nasz_Puszysty_smietankowy_Serek_twarogowy_140_g'];
$product->link_rewrite = [$default_lang => 'NaTurek_N'];
$product->price = 3.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/NaTurek Nasz Puszysty śmietankowy Serek twarogowy 140 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Ser_Goldamer_penotusty'];
$product->link_rewrite = [$default_lang => 'Ser_Golda'];
$product->price = 2.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Ser Goldamer pełnotłusty.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Hochland_Ser_kremowy_w_plastrach_Cheddar_130_g'];
$product->link_rewrite = [$default_lang => 'Hochland_'];
$product->price = 3.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Hochland Ser kremowy w plastrach Cheddar 130 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Piatnica_Twoj_Smak_Puszysty_Serek_smietankowy_z_pomidorami_suszonymi_na_soncu_150_g'];
$product->link_rewrite = [$default_lang => 'Piatnica_'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Piątnica Twój Smak Puszysty Serek śmietankowy z pomidorami suszonymi na słońcu 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Ser_Soko'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 2.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Ser Sokół.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Creamfields_Ser_plesniowy_Camembert_z_zioami_120_g'];
$product->link_rewrite = [$default_lang => 'Creamfiel'];
$product->price = 3.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Creamfields Ser pleśniowy Camembert z ziołami 120 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Apetina_Classic_Ser_w_kostkach_200_g'];
$product->link_rewrite = [$default_lang => 'Apetina_C'];
$product->price = 8.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Apetina Classic Ser w kostkach 200 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Galbani_Ser_Mozzarella_300_g'];
$product->link_rewrite = [$default_lang => 'Galbani_S'];
$product->price = 9.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Galbani Ser Mozzarella 300 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Parmigiano_Reggiano_Potusty_ser_twardy_125_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Par'];
$product->price = 10.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Parmigiano Reggiano Półtłusty ser twardy 125 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Piatnica_Twoj_Smak_Puszysty_Serek_smietankowy_ze_szczypiorkiem_150_g'];
$product->link_rewrite = [$default_lang => 'Piatnica_'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Piątnica Twój Smak Puszysty Serek śmietankowy ze szczypiorkiem 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Valbon_Brie_oryginalny_200_g'];
$product->link_rewrite = [$default_lang => 'Valbon_Br'];
$product->price = 7.55;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Valbon Brie oryginalny 200 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Piatnica_Twoj_Smak_Puszysty_Serek_smietankowy_z_ososiem_150_g'];
$product->link_rewrite = [$default_lang => 'Piatnica_'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Piątnica Twój Smak Puszysty Serek śmietankowy z łososiem 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'owicz_Edamski_Ser_mierzwiony_150_g'];
$product->link_rewrite = [$default_lang => 'owicz_Eda'];
$product->price = 4.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Łowicz Edamski Ser mierzwiony 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'President_Nadbuzansko-ementalski_Ser'];
$product->link_rewrite = [$default_lang => 'President'];
$product->price = 3.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Président Nadbużańsko-ementalski Ser.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Ser_saatkowo-kanapkowy_200_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Ser'];
$product->price = 2.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Ser sałatkowo-kanapkowy 200 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Naturek_Islos_Ser_saatkowy_180_g'];
$product->link_rewrite = [$default_lang => 'Naturek_I'];
$product->price = 3.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Naturek Islos Ser sałatkowy 180 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekpol_Gouda_Ser_w_plastrach_150_g'];
$product->link_rewrite = [$default_lang => 'Mlekpol_G'];
$product->price = 4.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekpol Gouda Ser w plastrach 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Serenada_Ser_zoty_Babuni_135_g'];
$product->link_rewrite = [$default_lang => 'Serenada_'];
$product->price = 4.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Serenada Ser żółty Babuni 135 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Finest_Gorgonzola_Penotusty_ser_miekki_175_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Fin'];
$product->price = 7.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Finest Gorgonzola Pełnotłusty ser miękki 175 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Piatnica_Twoj_Smak_Serek_smietankowy_z_przyprawami_135_g'];
$product->link_rewrite = [$default_lang => 'Piatnica_'];
$product->price = 2.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Piątnica Twój Smak Serek śmietankowy z przyprawami 135 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Finest_Mozzarella_di_Bufala_Campana_D.O.P._Penotusty_miekki_ser_woski_125_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Fin'];
$product->price = 5.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Finest Mozzarella di Bufala Campana D.O.P. Pełnotłusty miękki ser włoski 125 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Hochland_Ser_kremowy_w_plastrach_Gouda_130_g'];
$product->link_rewrite = [$default_lang => 'Hochland_'];
$product->price = 3.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Hochland Ser kremowy w plastrach Gouda 130 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Piatnica_Twoj_Smak_Serek_smietankowy_z_czosnkiem_135_g'];
$product->link_rewrite = [$default_lang => 'Piatnica_'];
$product->price = 2.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Piątnica Twój Smak Serek śmietankowy z czosnkiem 135 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bieluch_Serek_z_papryka_pomidorami_i_chili_150_g'];
$product->link_rewrite = [$default_lang => 'Bieluch_S'];
$product->price = 2.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bieluch Serek z papryką pomidorami i chili 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'NaTurek_Nasz_Camembert_z_zioami_Ser_120_g'];
$product->link_rewrite = [$default_lang => 'NaTurek_N'];
$product->price = 4.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/NaTurek Nasz Camembert z ziołami Ser 120 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Gouda_z_pieprzem_Ser_w_plastrach_150_g'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 3.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Gouda z pieprzem Ser w plastrach 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Hochland_Ser_kremowy_w_trojkacikach_Sortett_200_g'];
$product->link_rewrite = [$default_lang => 'Hochland_'];
$product->price = 4.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Hochland Ser kremowy w trójkącikach Sortett 200 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'aciaty_Serek_puszysty_z_cebula_i_szczypiorkiem_150_g'];
$product->link_rewrite = [$default_lang => 'aciaty_Se'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Łaciaty Serek puszysty z cebulą i szczypiorkiem 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'OSM_Grodzisk_Mazowiecki_latteo_Mozzarella_w_zalewie_125_g'];
$product->link_rewrite = [$default_lang => 'OSM_Grodz'];
$product->price = 3.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/OSM Grodzisk Mazowiecki latteó Mozzarella w zalewie 125 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Piatnica_Twoj_Smak_Serek_smietankowy_z_chrzanem_135_g'];
$product->link_rewrite = [$default_lang => 'Piatnica_'];
$product->price = 2.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Piątnica Twój Smak Serek śmietankowy z chrzanem 135 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Dolina_Narwi_Spaghettino_Ser_tarty_40_g'];
$product->link_rewrite = [$default_lang => 'Dolina_Na'];
$product->price = 2.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Dolina Narwi Spaghettino Ser tarty 40 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Sierpc_Ser_krolewski_Light'];
$product->link_rewrite = [$default_lang => 'Sierpc_Se'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Sierpc Ser królewski Light.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'OSM_Grodzisk_Mazowiecki_latteo_Mozzarella_mini_125_g'];
$product->link_rewrite = [$default_lang => 'OSM_Grodz'];
$product->price = 4.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/OSM Grodzisk Mazowiecki latteó Mozzarella mini 125 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Hochland_Ser_kremowy_z_zioami_100_g'];
$product->link_rewrite = [$default_lang => 'Hochland_'];
$product->price = 2.09;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Hochland Ser kremowy z ziołami 100 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekpol_Ser_Krolewski_z_Kolna'];
$product->link_rewrite = [$default_lang => 'Mlekpol_S'];
$product->price = 2.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekpol Ser Królewski z Kolna.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Skarby_Serowara_Ser_Rubin_190_g'];
$product->link_rewrite = [$default_lang => 'Skarby_Se'];
$product->price = 10.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Skarby Serowara Ser Rubin 190 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'aciaty_Serek_puszysty_naturalny_150_g'];
$product->link_rewrite = [$default_lang => 'aciaty_Se'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Łaciaty Serek puszysty naturalny 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekpol_Ser_Zoty_Mazur'];
$product->link_rewrite = [$default_lang => 'Mlekpol_S'];
$product->price = 2.44;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekpol Ser Złoty Mazur.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Hochland_Ser_kremowy_z_szynka_100_g'];
$product->link_rewrite = [$default_lang => 'Hochland_'];
$product->price = 2.09;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Hochland Ser kremowy z szynką 100 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Hochland_Ser_kremowy_w_plastrach_Tost_130_g'];
$product->link_rewrite = [$default_lang => 'Hochland_'];
$product->price = 3.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Hochland Ser kremowy w plastrach Tost 130 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'NaTurek_Islos_Ser_saatkowy_zioowy_180_g'];
$product->link_rewrite = [$default_lang => 'NaTurek_I'];
$product->price = 3.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/NaTurek Islos Ser sałatkowy ziołowy 180 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Serenada_Ser_zoty_z_dziurami_Radamer_wedzony_250_g'];
$product->link_rewrite = [$default_lang => 'Serenada_'];
$product->price = 4.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Serenada Ser zółty z dziurami Radamer wędzony 250 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Skarby_Serowara_Ser_Szafir_190_g'];
$product->link_rewrite = [$default_lang => 'Skarby_Se'];
$product->price = 10.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Skarby Serowara Ser Szafir 190 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Hochland_Ser_kremowy_Emmentaler_100_g'];
$product->link_rewrite = [$default_lang => 'Hochland_'];
$product->price = 2.09;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Hochland Ser kremowy Emmentaler 100 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Parmigiano_Reggiano_Ser_tarty_100_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Par'];
$product->price = 9.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Parmigiano Reggiano Ser tarty 100 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Philadelphia_Light_Serek_smietankowy_125_g'];
$product->link_rewrite = [$default_lang => 'Philadelp'];
$product->price = 4.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Philadelphia Light Serek śmietankowy 125 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Ceko_Piorko_Ser_zoty_niskotuszczowy'];
$product->link_rewrite = [$default_lang => 'Ceko_Pior'];
$product->price = 3.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Ceko Piórko Ser żółty niskotłuszczowy.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'NaTurek_Nasz_Brie_z_zioami_Ser_125_g'];
$product->link_rewrite = [$default_lang => 'NaTurek_N'];
$product->price = 4.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/NaTurek Nasz Brie z ziołami Ser 125 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Ser_Gouda_wedzona_plastry_150_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Ser'];
$product->price = 3.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Ser Gouda wędzona plastry 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Lactalis_Ser_Mozzarella'];
$product->link_rewrite = [$default_lang => 'Lactalis_'];
$product->price = 3.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Lactalis Ser Mozzarella.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'NaTurek_Nasz_Brie_z_zielonym_pieprzem_Ser_125_g'];
$product->link_rewrite = [$default_lang => 'NaTurek_N'];
$product->price = 4.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/NaTurek Nasz Brie z zielonym pieprzem Ser 125 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Rolada_Ustrzycka_Ser_w_plastrach_300_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Rol'];
$product->price = 6.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Rolada Ustrzycka Ser w plastrach 300 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Serenada_Ser_Gouda_lekka'];
$product->link_rewrite = [$default_lang => 'Serenada_'];
$product->price = 2.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Serenada Ser Gouda lekka.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Hochland_Kanapkowy_serek_kremowy_smietankowy_130_g'];
$product->link_rewrite = [$default_lang => 'Hochland_'];
$product->price = 2.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Hochland Kanapkowy serek kremowy śmietankowy 130 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Hochland_Na_goraco!_Plastry_sera_z_szynka_i_pieczarkami_144_g'];
$product->link_rewrite = [$default_lang => 'Hochland_'];
$product->price = 4.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Hochland Na gorąco! Plastry sera z szynką i pieczarkami 144 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Serenada_Ser_zoty_z_dziurami_Radamer_250_g'];
$product->link_rewrite = [$default_lang => 'Serenada_'];
$product->price = 4.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Serenada Ser zółty z dziurami Radamer 250 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Sierpc_Ser_Pikserki_135_g'];
$product->link_rewrite = [$default_lang => 'Sierpc_Se'];
$product->price = 4.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Sierpc Ser Pikserki 135 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Apetina_Serek_kremowy_pesto_i_rukola_125_g'];
$product->link_rewrite = [$default_lang => 'Apetina_S'];
$product->price = 3.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Apetina Serek kremowy pesto i rukola 125 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Hochland_Kanapkowy_serek_kremowy_ze_szczypiorkiem_130_g'];
$product->link_rewrite = [$default_lang => 'Hochland_'];
$product->price = 2.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Hochland Kanapkowy serek kremowy ze szczypiorkiem 130 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Almette_Fruit_z_jagoda_i_malina_Puszysty_serek_twarogowy_150_g'];
$product->link_rewrite = [$default_lang => 'Almette_F'];
$product->price = 3.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Almette Fruit z jagodą i maliną Puszysty serek twarogowy 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'aciaty_Serek_smietankowy_z_chrzanem_135_g'];
$product->link_rewrite = [$default_lang => 'aciaty_Se'];
$product->price = 2.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Łaciaty Serek śmietankowy z chrzanem 135 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Hochland_Camembert_naturalny_Ser_120_g'];
$product->link_rewrite = [$default_lang => 'Hochland_'];
$product->price = 4.84;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Hochland Camembert naturalny Ser 120 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Sirtakis_Ser_saatkowy_typu_greckiego_200_g'];
$product->link_rewrite = [$default_lang => 'Sirtakis_'];
$product->price = 6.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Sirtakis Ser sałatkowy typu greckiego 200 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Zakopianskie_Specjay_Faruki_korbacze_wedzone_Przekaska_serowa_100_g'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 5.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Zakopiańskie Specjały Faruki korbacze wędzone Przekąska serowa 100 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'aciaty_Serek_smietankowy_meksykanski_smak_135_g'];
$product->link_rewrite = [$default_lang => 'aciaty_Se'];
$product->price = 2.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Łaciaty Serek śmietankowy meksykański smak 135 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'NaTurek_Nasz_Puszysty_z_rzodkiewka_Serek_twarogowy_140_g'];
$product->link_rewrite = [$default_lang => 'NaTurek_N'];
$product->price = 3.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/NaTurek Nasz Puszysty z rzodkiewką Serek twarogowy 140 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Creamfields_Ser_topiony_kremowy_100_g'];
$product->link_rewrite = [$default_lang => 'Creamfiel'];
$product->price = 1.75;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Creamfields Ser topiony kremowy 100 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'President_Camembert_Naturalny_Ser_170_g'];
$product->link_rewrite = [$default_lang => 'President'];
$product->price = 6.15;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Président Camembert Naturalny Ser 170 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Hochland_Kanapkowy_serek_kremowy_z_szynka_130_g'];
$product->link_rewrite = [$default_lang => 'Hochland_'];
$product->price = 2.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Hochland Kanapkowy serek kremowy z szynką 130 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Ser_Podlaski_plastry_300_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Ser'];
$product->price = 6.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Ser Podlaski plastry 300 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Zottarella_Classic_Minis_Ser_mozzarella_150_g'];
$product->link_rewrite = [$default_lang => 'Zott_Zott'];
$product->price = 6.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Zottarella Classic Minis Ser mozzarella 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Chavroux_Serek_twarogowy_z_mleka_koziego_150_g'];
$product->link_rewrite = [$default_lang => 'Chavroux_'];
$product->price = 13.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Chavroux Serek twarogowy z mleka koziego 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Serenada_Ser_zoty_z_dziurami_Radamer_135_g'];
$product->link_rewrite = [$default_lang => 'Serenada_'];
$product->price = 4.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Serenada Ser żółty z dziurami Radamer 135 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Hochland_Na_goraco!_Plastry_sera_z_pomidorami_i_zioami_144_g'];
$product->link_rewrite = [$default_lang => 'Hochland_'];
$product->price = 4.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Hochland Na gorąco! Plastry sera z pomidorami i ziołami 144 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'NaTurek_Nasz_Puszysty_ze_szczypiorkiem_Serek_twarogowy_140_g'];
$product->link_rewrite = [$default_lang => 'NaTurek_N'];
$product->price = 3.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/NaTurek Nasz Puszysty ze szczypiorkiem Serek twarogowy 140 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Piatnica_Milandia_Ogrod_Smakow_Ser_twarogowy_z_mascarpone_naturalnie_smietankowy_150_g'];
$product->link_rewrite = [$default_lang => 'Piatnica_'];
$product->price = 3.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Piątnica Milandia Ogród Smaków Ser twarogowy z mascarpone naturalnie śmietankowy 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Ceko_Dobrodziej_Ser_zoty'];
$product->link_rewrite = [$default_lang => 'Ceko_Dobr'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Ceko Dobrodziej Ser żółty.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_French_Camembert_Ser_plesniowy_penotusty_250_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Fre'];
$product->price = 7.44;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco French Camembert Ser pleśniowy pełnotłusty 250 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'aciaty_Serek_puszysty_smak_meksykanski_150_g'];
$product->link_rewrite = [$default_lang => 'aciaty_Se'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Łaciaty Serek puszysty smak meksykański 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Cathedral_City_Extra_Mature_Cheddar_Ser_dojrzewajacy_200_g'];
$product->link_rewrite = [$default_lang => 'Cathedral'];
$product->price = 14.90;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Cathedral City Extra Mature Cheddar Ser dojrzewający 200 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Cathedral_City_Mild_Cheddar_Ser_dojrzewajacy_200_g'];
$product->link_rewrite = [$default_lang => 'Cathedral'];
$product->price = 13.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Cathedral City Mild Cheddar Ser dojrzewający 200 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Giorno_Serek_puszysty_suszone_kurki_150_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Gio'];
$product->price = 2.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Giorno Serek puszysty suszone kurki 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Creamfields_Serek_kanapkowy_ze_szczypiorkiem_150_g'];
$product->link_rewrite = [$default_lang => 'Creamfiel'];
$product->price = 2.09;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Creamfields Serek kanapkowy ze szczypiorkiem 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Hochland_Gouda_wedzona_Ser_zoty_w_plastrach_135_g_(8_plastrow)'];
$product->link_rewrite = [$default_lang => 'Hochland_'];
$product->price = 4.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Hochland Gouda wędzona Ser żółty w plastrach 135 g (8 plastrów).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'OSM_Skierniewice_Mozzarella_kulki_w_zalewie_100_g'];
$product->link_rewrite = [$default_lang => 'OSM_Skier'];
$product->price = 3.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/OSM Skierniewice Mozzarella kulki w zalewie 100 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Serenada_Ser_Salami_Krolewskie'];
$product->link_rewrite = [$default_lang => 'Serenada_'];
$product->price = 2.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Serenada Ser Salami Królewskie.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Sertop_Tychy_Ser_topiony_zoty_ementaler_140_g_(8_porcji)'];
$product->link_rewrite = [$default_lang => 'Sertop_Ty'];
$product->price = 3.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Sertop Tychy Ser topiony złoty ementaler 140 g (8 porcji).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Almette_Fruit_z_gruszka_i_jabkiem_Puszysty_serek_twarogowy_150_g'];
$product->link_rewrite = [$default_lang => 'Almette_F'];
$product->price = 3.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Almette Fruit z gruszką i jabłkiem Puszysty serek twarogowy 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Milkeffekt_Rumcajs_Serowy_warkoczyk_naturalny_50_g'];
$product->link_rewrite = [$default_lang => 'Milkeffek'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Milkeffekt Rumcajs Serowy warkoczyk naturalny 50 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Sierpc_Ser_gouda_150_g'];
$product->link_rewrite = [$default_lang => 'Sierpc_Se'];
$product->price = 4.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Sierpc Ser gouda 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Ceko_Antek_Ser_zoty'];
$product->link_rewrite = [$default_lang => 'Ceko_Ante'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Ceko Antek Ser żółty.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Giorno_Serek_puszysty_z_zioami_150_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Gio'];
$product->price = 2.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Giorno Serek puszysty z ziołami 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Ser_topiony_do_smarowania_Gouda_150_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Ser'];
$product->price = 2.09;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Ser topiony do smarowania Gouda 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Sertop_Tychy_Ser_topiony_tylzycki_100_g'];
$product->link_rewrite = [$default_lang => 'Sertop_Ty'];
$product->price = 1.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Sertop Tychy Ser topiony tylżycki 100 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Ser_plesniowy_typu_Brie_penotusty_200_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Ser'];
$product->price = 5.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Ser pleśniowy typu Brie pełnotłusty 200 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tartare_Borowikowy_Las_Serek_twarogowy_150_g'];
$product->link_rewrite = [$default_lang => 'Tartare_B'];
$product->price = 4.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tartare Borowikowy Las Serek twarogowy 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekpol_Krolewski_z_Kolna_Ser_w_plastrach_150_g'];
$product->link_rewrite = [$default_lang => 'Mlekpol_K'];
$product->price = 4.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekpol Królewski z Kolna Ser w plastrach 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Giorno_Puszysty_serek_smietankowy_150_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Gio'];
$product->price = 2.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Giorno Puszysty serek śmietankowy 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Apetina_Serek_kremowy_pomidory_i_bazylia_125_g'];
$product->link_rewrite = [$default_lang => 'Apetina_S'];
$product->price = 3.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Apetina Serek kremowy pomidory i bazylia 125 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'NaTurek_Nasz_Kremowy_o_smaku_ososiowym_Serek_twarogowy_125_g'];
$product->link_rewrite = [$default_lang => 'NaTurek_N'];
$product->price = 3.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/NaTurek Nasz Kremowy o smaku łososiowym Serek twarogowy 125 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Finest_Parmigiano_Reggiano_DOP_Potusty_ser_twardy_170_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Fin'];
$product->price = 16.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Finest Parmigiano Reggiano DOP Półtłusty ser twardy 170 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tartare_ososiowa_Zatoka_Serek_twarogowy_150_g'];
$product->link_rewrite = [$default_lang => 'Tartare_o'];
$product->price = 4.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tartare Łososiowa Zatoka Serek twarogowy 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Lactima_Serdelek_z_szynka_Produkt_spozywczy_topiony_90_g'];
$product->link_rewrite = [$default_lang => 'Lactima_S'];
$product->price = 1.00;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Lactima Serdelek z szynką Produkt spożywczy topiony 90 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Hochland_ze_Szczypiorkiem_i_Cebula_Ser_topiony_kremowy_100_g'];
$product->link_rewrite = [$default_lang => 'Hochland_'];
$product->price = 2.09;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Hochland ze Szczypiorkiem i Cebulą Ser topiony kremowy 100 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'President_Brie_Naturalny_Ser_125_g'];
$product->link_rewrite = [$default_lang => 'President'];
$product->price = 4.85;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Président Brie Naturalny Ser 125 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Hochland_Ser_kremowy_w_trojkacikach_z_szynka_200_g'];
$product->link_rewrite = [$default_lang => 'Hochland_'];
$product->price = 4.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Hochland Ser kremowy w trójkącikach z szynką 200 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Ser_Morski_plastry_500_g'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 16.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Ser Morski plastry 500 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Ser_Ementaler_plastry_500_g'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 16.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Ser Ementaler plastry 500 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bieluch_Serek_z_czosnkiem_150_g'];
$product->link_rewrite = [$default_lang => 'Bieluch_S'];
$product->price = 2.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bieluch Serek z czosnkiem 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Hochland_Ser_kremowy_w_plastrach_Fit_Gouda_130_g'];
$product->link_rewrite = [$default_lang => 'Hochland_'];
$product->price = 3.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Hochland Ser kremowy w plastrach Fit Gouda 130 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Apetina_z_czosnkiem_i_pietruszka_Ser_w_kostkach_200_g'];
$product->link_rewrite = [$default_lang => 'Apetina_z'];
$product->price = 8.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Apetina z czosnkiem i pietruszką Ser w kostkach 200 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Mozzarella_w_zalewie_200_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Moz'];
$product->price = 5.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Mozzarella w zalewie 200 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'NaTurek_Nasz_Puszysty_z_zioami_Serek_twarogowy_140_g'];
$product->link_rewrite = [$default_lang => 'NaTurek_N'];
$product->price = 3.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/NaTurek Nasz Puszysty z ziołami Serek twarogowy 140 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Apetina_z_zielonymi_oliwkami_i_czosnkiem_Ser_typu_srodziemnomorskiego_w_zalewie_olejowej_100_g'];
$product->link_rewrite = [$default_lang => 'Apetina_z'];
$product->price = 5.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Apetina z zielonymi oliwkami i czosnkiem Ser typu śródziemnomorskiego w zalewie olejowej 100 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'President_Delikatny_Twarog_ze_szczypiorkiem_200_g'];
$product->link_rewrite = [$default_lang => 'President'];
$product->price = 3.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Président Delikatny Twaróg ze szczypiorkiem 200 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Apetina_z_suszonymi_pomidorami_Ser_typu_srodziemnomorskiego_w_zalewie_olejowej_100_g'];
$product->link_rewrite = [$default_lang => 'Apetina_z'];
$product->price = 5.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Apetina z suszonymi pomidorami Ser typu śródziemnomorskiego w zalewie olejowej 100 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Ser_topiony_do_smarowania_Emmentaler_150_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Ser'];
$product->price = 2.09;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Ser topiony do smarowania Emmentaler 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'OSM_Grodzisk_Mazowiecki_latteo_Mozzarella_naturalna_250_g'];
$product->link_rewrite = [$default_lang => 'OSM_Grodz'];
$product->price = 6.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/OSM Grodzisk Mazowiecki latteó Mozzarella naturalna 250 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Finest_Parmigiano_Reggiano_Potusty_ser_twardy_tarty_60_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Fin'];
$product->price = 6.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Finest Parmigiano Reggiano Półtłusty ser twardy tarty 60 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Hochland_Na_goraco!_Plastry_sera_z_salami_i_chili_144_g'];
$product->link_rewrite = [$default_lang => 'Hochland_'];
$product->price = 4.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Hochland Na gorąco! Plastry sera z salami i chili 144 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Ser_Krajan_w_posypce_pieprzowej'];
$product->link_rewrite = [$default_lang => 'Ser_Kraja'];
$product->price = 2.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Ser Krajan w posypce pieprzowej.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Sertop_Tychy_Nasz..._wysmienity_Mix_Ser_topiony_140_g_(8_porcji)'];
$product->link_rewrite = [$default_lang => 'Sertop_Ty'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Sertop Tychy Nasz... wyśmienity Mix Ser topiony 140 g (8 porcji).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Halloumi_Potusty_ser_250_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Hal'];
$product->price = 13.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Halloumi Półtłusty ser 250 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Apetina_Classic_Ser_biay_typu_srodziemnomorskiego_200_g'];
$product->link_rewrite = [$default_lang => 'Apetina_C'];
$product->price = 4.57;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Apetina Classic Ser biały typu śródziemnomorskiego 200 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Piatnica_Twoj_Smak_Puszysty_Serek_smietankowy_z_przyprawami_150_g'];
$product->link_rewrite = [$default_lang => 'Piatnica_'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Piątnica Twój Smak Puszysty Serek śmietankowy z przyprawami 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Ceko_Boryna_Ser_zoty'];
$product->link_rewrite = [$default_lang => 'Ceko_Bory'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Ceko Boryna Ser żółty.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'NaTurek_Nasz_Puszysty_lekki_Serek_twarogowy_140_g'];
$product->link_rewrite = [$default_lang => 'NaTurek_N'];
$product->price = 3.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/NaTurek Nasz Puszysty lekki Serek twarogowy 140 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Hochland_Ser_kremowy_Gouda_140_g'];
$product->link_rewrite = [$default_lang => 'Hochland_'];
$product->price = 3.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Hochland Ser kremowy Gouda 140 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekpol_Ser_Liliput_350_g'];
$product->link_rewrite = [$default_lang => 'Mlekpol_S'];
$product->price = 10.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekpol Ser Liliput 350 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Sertop_Tychy_Ser_topiony_ze_sonecznikiem_100_g'];
$product->link_rewrite = [$default_lang => 'Sertop_Ty'];
$product->price = 1.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Sertop Tychy Ser topiony ze słonecznikiem 100 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Ser_Edam_plastry_500_g'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 16.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Ser Edam plastry 500 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekpol_Edam_Ser_w_plastrach_150_g'];
$product->link_rewrite = [$default_lang => 'Mlekpol_E'];
$product->price = 4.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekpol Edam Ser w plastrach 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'NaTurek_Nasz_Puszysty_z_chrzanem_Serek_twarogowy_140_g'];
$product->link_rewrite = [$default_lang => 'NaTurek_N'];
$product->price = 3.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/NaTurek Nasz Puszysty z chrzanem Serek twarogowy 140 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Ser_miekki_Cambozola_Classic_150_g'];
$product->link_rewrite = [$default_lang => 'Ser_miekk'];
$product->price = 10.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Ser miękki Cambozola Classic 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tartare_Orzechowa_Aleja_Serek_twarogowy_150_g'];
$product->link_rewrite = [$default_lang => 'Tartare_O'];
$product->price = 4.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tartare Orzechowa Aleja Serek twarogowy 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Hochland_Kanapkowy_Krem_smietankowy_240_g'];
$product->link_rewrite = [$default_lang => 'Hochland_'];
$product->price = 3.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Hochland Kanapkowy Krem śmietankowy 240 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Grecki_kanapkowy_seropodobny'];
$product->link_rewrite = [$default_lang => 'Grecki_ka'];
$product->price = 1.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Grecki kanapkowy seropodobny.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Piatnica_Milandia_Ogrod_Smakow_Ser_twarogowy_z_mascarpone_cebulka_szalotka_i_zioa_150_g'];
$product->link_rewrite = [$default_lang => 'Piatnica_'];
$product->price = 3.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Piątnica Milandia Ogród Smaków Ser twarogowy z mascarpone cebulka szalotka i zioła 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'NaTurek_Nasz_Camembert_lekki_Ser_120_g'];
$product->link_rewrite = [$default_lang => 'NaTurek_N'];
$product->price = 4.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/NaTurek Nasz Camembert lekki Ser 120 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Hochland_Ser_kremowy_w_trojkacikach_z_zioami_200_g'];
$product->link_rewrite = [$default_lang => 'Hochland_'];
$product->price = 4.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Hochland Ser kremowy w trójkącikach z ziołami 200 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Zottarella_Classic_XXL_Ser_mozzarella_250_g'];
$product->link_rewrite = [$default_lang => 'Zott_Zott'];
$product->price = 8.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Zottarella Classic XXL Ser mozzarella 250 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'President_La_Brique_de_Chevre_Ser_plesniowy_z_mleka_koziego_150g'];
$product->link_rewrite = [$default_lang => 'President'];
$product->price = 14.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Président La Brique de Chèvre Ser pleśniowy z mleka koziego 150g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Old_Poland_Ser_Grand_Gouda_135_g'];
$product->link_rewrite = [$default_lang => 'Old_Polan'];
$product->price = 4.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Old Poland Ser Grand Gouda 135 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Serenada_Ser_Radamer_wedzony'];
$product->link_rewrite = [$default_lang => 'Serenada_'];
$product->price = 2.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Serenada Ser Radamer wędzony.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Apetina_z_oregano_i_sodka_bazylia_Ser_w_kostkach_200_g'];
$product->link_rewrite = [$default_lang => 'Apetina_z'];
$product->price = 8.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Apetina z oregano i słodką bazylią Ser w kostkach 200 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Piatnica_Twoj_Smak_Puszysty_Serek_smietankowy_z_pieprzem_150_g'];
$product->link_rewrite = [$default_lang => 'Piatnica_'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Piątnica Twój Smak Puszysty Serek śmietankowy z pieprzem 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Giorno_Serek_puszysty_chrzanowy_150_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Gio'];
$product->price = 2.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Giorno Serek puszysty chrzanowy 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Hochland_Camembert_z_zielonym_pieprzem_Ser_120_g'];
$product->link_rewrite = [$default_lang => 'Hochland_'];
$product->price = 4.84;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Hochland Camembert z zielonym pieprzem Ser 120 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Piatnica_Twoj_Smak_Puszysty_Serek_smietankowy_z_bazylia_150_g'];
$product->link_rewrite = [$default_lang => 'Piatnica_'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Piątnica Twój Smak Puszysty Serek śmietankowy z bazylią 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Ser_topiony_do_smarowania_z_szynka_150_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Ser'];
$product->price = 2.09;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Ser topiony do smarowania z szynką 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Hochland_Ser_kremowy_Gouda_z_pomidorami_i_szczypiorkiem_140_g'];
$product->link_rewrite = [$default_lang => 'Hochland_'];
$product->price = 3.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Hochland Ser kremowy Gouda z pomidorami i szczypiorkiem 140 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Apetina_z_chili_Ser_typu_srodziemnomorskiego_w_zalewie_olejowej_100_g'];
$product->link_rewrite = [$default_lang => 'Apetina_z'];
$product->price = 5.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Apetina z chili Ser typu śródziemnomorskiego w zalewie olejowej 100 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Finest_Grana_Padano_Riserva_Potusty_ser_twardy_170_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Fin'];
$product->price = 14.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Finest Grana Padano Riserva Półtłusty ser twardy 170 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Hochland_Ser_kremowy_w_plastrach_z_szynka_130_g'];
$product->link_rewrite = [$default_lang => 'Hochland_'];
$product->price = 3.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Hochland Ser kremowy w plastrach z szynką 130 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Ceko_Mimolle_a_la_Francaise_Ser_dojrzewajacy_w_plastrach_135_g'];
$product->link_rewrite = [$default_lang => 'Ceko_Mimo'];
$product->price = 4.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Ceko Mimolle à la Française Ser dojrzewający w plastrach 135 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Ser_Mozzarella_maxi_250_g'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 7.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Ser Mozzarella maxi 250 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Millakte_Ser_typu_szwajcarskiego_150_g'];
$product->link_rewrite = [$default_lang => 'Millakte_'];
$product->price = 6.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Millakte Ser typu szwajcarskiego 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Sertop_Tychy_Ser_topiony_z_pomidorami_100_g'];
$product->link_rewrite = [$default_lang => 'Sertop_Ty'];
$product->price = 1.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Sertop Tychy Ser topiony z pomidorami 100 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Sertop_Tychy_Moj..._jedyny_Mix_Ser_topiony_140_g_(8_porcji)'];
$product->link_rewrite = [$default_lang => 'Sertop_Ty'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Sertop Tychy Mój... jedyny Mix Ser topiony 140 g (8 porcji).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Hochland_Gouda_z_szynka_i_cebulka_Ser_topiony_140_g'];
$product->link_rewrite = [$default_lang => 'Hochland_'];
$product->price = 3.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Hochland Gouda z szynką i cebulką Ser topiony 140 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Lactima_Produkt_seropodobny_topiony_z_papryka_100_g'];
$product->link_rewrite = [$default_lang => 'Lactima_P'];
$product->price = 1.55;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Lactima Produkt seropodobny topiony z papryką 100 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Havarti_Ser_w_plastrach_150_g'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 4.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Havarti Ser w plastrach 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Apetina_Serek_kremowy_naturalny_125_g'];
$product->link_rewrite = [$default_lang => 'Apetina_S'];
$product->price = 3.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Apetina Serek kremowy naturalny 125 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Apetina_India_Serek_kremowy_papaja_i_curry_125_g'];
$product->link_rewrite = [$default_lang => 'Apetina_I'];
$product->price = 3.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Apetina India Serek kremowy papaja i curry 125 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Philadelphia_Original_Serek_smietankowy_z_zioami_125_g'];
$product->link_rewrite = [$default_lang => 'Philadelp'];
$product->price = 4.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Philadelphia Original Serek śmietankowy z ziołami 125 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Hochland_Ser_kremowy_w_plastrach_Emmentaler_130_g'];
$product->link_rewrite = [$default_lang => 'Hochland_'];
$product->price = 3.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Hochland Ser kremowy w plastrach Emmentaler 130 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Ser_Mozzarella'];
$product->link_rewrite = [$default_lang => 'Ser_Mozza'];
$product->price = 2.35;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Ser Mozzarella.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Ceko_Butterkase_Ser_maslany_w_plastrach_135_g'];
$product->link_rewrite = [$default_lang => 'Ceko_Butt'];
$product->price = 4.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Ceko Butterkäse Ser maślany w plastrach 135 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'President_Creme_de_Bleu_Ser_topiony_150_g'];
$product->link_rewrite = [$default_lang => 'President'];
$product->price = 4.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Président Crème de Bleu Ser topiony 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Ser_saatkowy_w_kostkach_typ_srodziemnomorski_200_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Ser'];
$product->price = 7.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Ser sałatkowy w kostkach typ śródziemnomorski 200 g.png'))
    {
    
        $image->delete();
    }
    
}
$subcategory = new Category();
        $subcategory->name = [$default_lang => 'jaja'];
$subcategory->id_parent=$category->id;
$subcategory->link_rewrite=[$default_lang => 'jaja'];
$subcategory->add();
        $product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Farmio_Jaja_z_wolnego_wybiegu_od_kur_karmionych_pasza_bez_GMO_L_10_sztuk'];
$product->link_rewrite = [$default_lang => 'Farmio_Ja'];
$product->price = 9.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Farmio Jaja z wolnego wybiegu od kur karmionych paszą bez GMO L 10 sztuk.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Jaja_swieze_kl._L_20_sztuk'];
$product->link_rewrite = [$default_lang => 'Tesco_Jaj'];
$product->price = 14.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Jaja świeże kl. L 20 sztuk.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Farmio_Jaja_swieze_od_kur_karmionych_pasza_bez_GMO_M_12_sztuk'];
$product->link_rewrite = [$default_lang => 'Farmio_Ja'];
$product->price = 7.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Farmio Jaja świeże od kur karmionych paszą bez GMO M 12 sztuk.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Farmio_Jaja_swieze_od_kur_karmionych_pasza_bez_GMO_L_10_sztuk'];
$product->link_rewrite = [$default_lang => 'Farmio_Ja'];
$product->price = 6.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Farmio Jaja świeże od kur karmionych paszą bez GMO L 10 sztuk.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Jaja_z_Sokoowa_M_30_sztuk'];
$product->link_rewrite = [$default_lang => 'Jaja_z_So'];
$product->price = 13.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Jaja z Sokołowa M 30 sztuk.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Jaja_swieze_z_chowu_klatkowego_kl._L_10_sztuk'];
$product->link_rewrite = [$default_lang => 'Tesco_Jaj'];
$product->price = 7.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Jaja świeże z chowu klatkowego kl. L 10 sztuk.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Kurka_Wolna_Jaja_z_wolnego_wybiegu_kl._L_6_sztuk'];
$product->link_rewrite = [$default_lang => 'Kurka_Wol'];
$product->price = 5.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Kurka Wolna Jaja z wolnego wybiegu kl. L 6 sztuk.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Jaja_swieze_M_10_sztuk'];
$product->link_rewrite = [$default_lang => 'Tesco_Jaj'];
$product->price = 6.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Jaja świeże M 10 sztuk.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Kotlina_Natury_Jaja_z_chowu_na_wolnym_wybiegu_L_10_sztuk'];
$product->link_rewrite = [$default_lang => 'Kotlina_N'];
$product->price = 8.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Kotlina Natury Jaja z chowu na wolnym wybiegu L 10 sztuk.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Kotlina_Natury_Jaja_z_chowu_sciokowego_M_10_sztuk'];
$product->link_rewrite = [$default_lang => 'Kotlina_N'];
$product->price = 7.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Kotlina Natury Jaja z chowu ściółkowego M 10 sztuk.png'))
    {
    
        $image->delete();
    }
    
}
$subcategory = new Category();
        $subcategory->name = [$default_lang => 'jogurty'];
$subcategory->id_parent=$category->id;
$subcategory->link_rewrite=[$default_lang => 'jogurty'];
$subcategory->add();
        $product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Primo_Jogurt_naturalny_180_g'];
$product->link_rewrite = [$default_lang => 'Zott_Prim'];
$product->price = 1.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Primo Jogurt naturalny 180 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bakoma_Jogurt_naturalny_gesty_150_g'];
$product->link_rewrite = [$default_lang => 'Bakoma_Jo'];
$product->price = 1.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bakoma Jogurt naturalny gęsty 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Primo_Jogurt_naturalny_370_g'];
$product->link_rewrite = [$default_lang => 'Zott_Prim'];
$product->price = 2.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Primo Jogurt naturalny 370 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bakoma_Jogurt_naturalny_agodny_smak_bez_dodatku_cukru_150_g'];
$product->link_rewrite = [$default_lang => 'Bakoma_Jo'];
$product->price = 1.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bakoma Jogurt naturalny łagodny smak bez dodatku cukru 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Jogobella_jagoda_Jogurt_150_g'];
$product->link_rewrite = [$default_lang => 'Zott_Jogo'];
$product->price = 1.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Jogobella jagoda Jogurt 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Jogobella_truskawka_i_poziomka_Jogurt_150_g'];
$product->link_rewrite = [$default_lang => 'Zott_Jogo'];
$product->price = 1.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Jogobella truskawka i poziomka Jogurt 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bakoma_Jogurt_naturalny_typ_grecki_440_g'];
$product->link_rewrite = [$default_lang => 'Bakoma_Jo'];
$product->price = 4.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bakoma Jogurt naturalny typ grecki 440 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Activia_Naturalna_Jogurt_180_g'];
$product->link_rewrite = [$default_lang => 'Danone_Ac'];
$product->price = 1.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Activia Naturalna Jogurt 180 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Piatnica_Piatus_Jogurt_typu_greckiego_truskawkowy_125_g'];
$product->link_rewrite = [$default_lang => 'Piatnica_'];
$product->price = 1.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Piątnica Piątuś Jogurt typu greckiego truskawkowy 125 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Jogobella_owoce_lesne_Jogurt_150_g'];
$product->link_rewrite = [$default_lang => 'Zott_Jogo'];
$product->price = 1.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Jogobella owoce leśne Jogurt 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bakoma_Jogurt_naturalny_gesty_390_g'];
$product->link_rewrite = [$default_lang => 'Bakoma_Jo'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bakoma Jogurt naturalny gęsty 390 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Fantasia_Jogurt_kremowy_z_czekolada_mleczna_110_g'];
$product->link_rewrite = [$default_lang => 'Danone_Fa'];
$product->price = 1.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Fantasia Jogurt kremowy z czekoladą mleczną 110 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Jogobella_Jogurt_kiwi_150_g'];
$product->link_rewrite = [$default_lang => 'Zott_Jogo'];
$product->price = 1.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Jogobella Jogurt kiwi 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Fantasia_Jogurt_kremowy_z_gwiazdkami_w_czekoladzie_106_g'];
$product->link_rewrite = [$default_lang => 'Danone_Fa'];
$product->price = 1.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Fantasia Jogurt kremowy z gwiazdkami w czekoladzie 106 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Jogurt_naturalny_agodny_165_g'];
$product->link_rewrite = [$default_lang => 'Danone_Jo'];
$product->price = 1.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Jogurt naturalny łagodny 165 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Actimel_Truskawka_Mleko_Fermentowane_800_g_(8_sztuk)'];
$product->link_rewrite = [$default_lang => 'Danone_Ac'];
$product->price = 7.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Actimel Truskawka Mleko Fermentowane 800 g (8 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Jogurt_naturalny_400_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Jog'];
$product->price = 1.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Jogurt naturalny 400 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Actimel_Klasyczny_Mleko_Fermentowane_800_g_(8_sztuk)'];
$product->link_rewrite = [$default_lang => 'Danone_Ac'];
$product->price = 7.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Actimel Klasyczny Mleko Fermentowane 800 g (8 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Fantasia_Jogurt_kremowy_z_kulkami_w_czekoladzie_100_g'];
$product->link_rewrite = [$default_lang => 'Danone_Fa'];
$product->price = 1.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Fantasia Jogurt kremowy z kulkami w czekoladzie 100 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Actimel_Malina_Mleko_Fermentowane_800_g_(8_sztuk)'];
$product->link_rewrite = [$default_lang => 'Danone_Ac'];
$product->price = 7.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Actimel Malina Mleko Fermentowane 800 g (8 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Fantasia_Jogurt_kremowy_z_jagodami_122_g'];
$product->link_rewrite = [$default_lang => 'Danone_Fa'];
$product->price = 1.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Fantasia Jogurt kremowy z jagodami 122 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Actimel_Wieloowocowy_Mleko_Fermentowane_800_g_(8_sztuk)'];
$product->link_rewrite = [$default_lang => 'Danone_Ac'];
$product->price = 7.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Actimel Wieloowocowy Mleko Fermentowane 800 g (8 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Jogobella_Jogurt_pieczone_jabko_400_g'];
$product->link_rewrite = [$default_lang => 'Zott_Jogo'];
$product->price = 3.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Jogobella Jogurt pieczone jabłko 400 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Piatnica_Jogurt_typu_greckiego_z_brzoskwinia_i_marakuja_150_g'];
$product->link_rewrite = [$default_lang => 'Piatnica_'];
$product->price = 1.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Piątnica Jogurt typu greckiego z brzoskwinią i marakują 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Gratka_o_smaku_truskawkowym_Deser_460_g_(4_sztuki)'];
$product->link_rewrite = [$default_lang => 'Danone_Gr'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Gratka o smaku truskawkowym Deser 460 g (4 sztuki).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Jogobella_American_Blueberry_Muffin_Jogurt_150_g'];
$product->link_rewrite = [$default_lang => 'Zott_Jogo'];
$product->price = 1.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Jogobella American Blueberry Muffin Jogurt 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Jogobella_owoce_lesne_Jogurt_400_g'];
$product->link_rewrite = [$default_lang => 'Zott_Jogo'];
$product->price = 3.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Jogobella owoce leśne Jogurt 400 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Jogobella_truskawka_i_poziomka_Jogurt_400_g'];
$product->link_rewrite = [$default_lang => 'Zott_Jogo'];
$product->price = 3.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Jogobella truskawka i poziomka Jogurt 400 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Maluta_Jogurt_typ_Bakanski_naturalny_340_g'];
$product->link_rewrite = [$default_lang => 'Maluta_Jo'];
$product->price = 2.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Maluta Jogurt typ Bałkański naturalny 340 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Krasnystaw_Calpro_Jogurt_naturalny_175_g'];
$product->link_rewrite = [$default_lang => 'Krasnysta'];
$product->price = 1.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Krasnystaw Calpro Jogurt naturalny 175 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bakoma_Twist_Jogurt_truskawkowy_400_g'];
$product->link_rewrite = [$default_lang => 'Bakoma_Tw'];
$product->price = 2.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bakoma Twist Jogurt truskawkowy 400 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Danonki_Jogurt_truskawka_400_g_(4_sztuki)'];
$product->link_rewrite = [$default_lang => 'Danone_Da'];
$product->price = 4.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Danonki Jogurt truskawka 400 g (4 sztuki).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bakoma_Jogurt_naturalny_0%_350_g'];
$product->link_rewrite = [$default_lang => 'Bakoma_Jo'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bakoma Jogurt naturalny 0% 350 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Biszkoptowy_Jogurt_480_g_(4_sztuki)'];
$product->link_rewrite = [$default_lang => 'Danone_Bi'];
$product->price = 5.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Biszkoptowy Jogurt 480 g (4 sztuki).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bakoma_7_zboz_men_Jogurt_z_brzoskwinia_gruszka_i_zbozami_300_g'];
$product->link_rewrite = [$default_lang => 'Bakoma_7_'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bakoma 7 zbóż men Jogurt z brzoskwinią gruszką i zbożami 300 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Primo_Jogurt_typ_grecki_220_g'];
$product->link_rewrite = [$default_lang => 'Zott_Prim'];
$product->price = 2.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Primo Jogurt typ grecki 220 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Fantasia_Jogurt_kremowy_z_kulkami_w_czekoladzie_200_g_(2_sztuki)'];
$product->link_rewrite = [$default_lang => 'Danone_Fa'];
$product->price = 3.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Fantasia Jogurt kremowy z kulkami w czekoladzie 200 g (2 sztuki).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bakoma_7_zboz_men_Jogurt_z_jagoda_czarna_porzeczka_i_zbozami_300_g'];
$product->link_rewrite = [$default_lang => 'Bakoma_7_'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bakoma 7 zbóż men Jogurt z jagodą czarną porzeczką i zbożami 300 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Fantasia_White_Jogurt_kremowy_z_kulkami_kokosowymi_98_g'];
$product->link_rewrite = [$default_lang => 'Danone_Fa'];
$product->price = 1.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Fantasia White Jogurt kremowy z kulkami kokosowymi 98 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Fantasia_Jogurt_kremowy_z_wisniami_122_g'];
$product->link_rewrite = [$default_lang => 'Danone_Fa'];
$product->price = 1.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Fantasia Jogurt kremowy z wiśniami 122 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Activia_Letnia_Kolekcja_Malina_granat_Jogurt_300_g'];
$product->link_rewrite = [$default_lang => 'Danone_Ac'];
$product->price = 3.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Activia Letnia Kolekcja Malina granat Jogurt 300 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Jogobella_8_zboz_ananas-banan_Jogurt_200_g'];
$product->link_rewrite = [$default_lang => 'Zott_Jogo'];
$product->price = 2.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Jogobella 8 zbóż ananas-banan Jogurt 200 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Fantasia_Jogurt_kremowy_z_truskawkami_122_g'];
$product->link_rewrite = [$default_lang => 'Danone_Fa'];
$product->price = 1.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Fantasia Jogurt kremowy z truskawkami 122 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bakoma_7_zboz_Jogurt_z_truskawkami_i_ziarnami_zboz_150_g'];
$product->link_rewrite = [$default_lang => 'Bakoma_7_'];
$product->price = 1.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bakoma 7 zbóż Jogurt z truskawkami i ziarnami zbóż 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Fantasia_Jogurt_kremowy_z_truskawkami_244_g_(2_sztuki)'];
$product->link_rewrite = [$default_lang => 'Danone_Fa'];
$product->price = 3.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Fantasia Jogurt kremowy z truskawkami 244 g (2 sztuki).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Jogobella_Jogurt_truskawka_400_g'];
$product->link_rewrite = [$default_lang => 'Zott_Jogo'];
$product->price = 3.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Jogobella Jogurt truskawka 400 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bakoma_Twist_Jogurt_z_owocami_lesnymi_400_g'];
$product->link_rewrite = [$default_lang => 'Bakoma_Tw'];
$product->price = 2.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bakoma Twist Jogurt z owocami leśnymi 400 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Fantasia_Jogurt_kremowy_z_patkami_w_czekoladzie_106_g'];
$product->link_rewrite = [$default_lang => 'Danone_Fa'];
$product->price = 1.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Fantasia Jogurt kremowy z płatkami w czekoladzie 106 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Jogobella_jabko-gruszka_Jogurt_150_g'];
$product->link_rewrite = [$default_lang => 'Zott_Jogo'];
$product->price = 1.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Jogobella jabłko-gruszka Jogurt 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bakoma_Kremowy_Jogurt_kawowy_150_g'];
$product->link_rewrite = [$default_lang => 'Bakoma_Kr'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bakoma Kremowy Jogurt kawowy 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Activia_Letnia_Kolekcja_Truskawka_kiwi_Jogurt_195_g'];
$product->link_rewrite = [$default_lang => 'Danone_Ac'];
$product->price = 1.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Activia Letnia Kolekcja Truskawka kiwi Jogurt 195 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Activia_Letnia_Kolekcja_Jagoda_borowka_amerykanska_Jogurt_195_g'];
$product->link_rewrite = [$default_lang => 'Danone_Ac'];
$product->price = 1.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Activia Letnia Kolekcja Jagoda borówka amerykańska Jogurt 195 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Activia_Letnia_Kolekcja_Jagoda_borowka_amerykanska_Jogurt_300_g'];
$product->link_rewrite = [$default_lang => 'Danone_Ac'];
$product->price = 3.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Activia Letnia Kolekcja Jagoda borówka amerykańska Jogurt 300 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bakoma_7_zboz_men_Jogurt_z_jabkiem_pomarancza_i_zbozami_300_g'];
$product->link_rewrite = [$default_lang => 'Bakoma_7_'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bakoma 7 zbóż men Jogurt z jabłkiem pomarańczą i zbożami 300 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Activia_Letnia_Kolekcja_Brzoskwinia_mango_Jogurt_300_g'];
$product->link_rewrite = [$default_lang => 'Danone_Ac'];
$product->price = 3.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Activia Letnia Kolekcja Brzoskwinia mango Jogurt 300 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Jogobella_Light_brzoskwinia_Jogurt_150_g'];
$product->link_rewrite = [$default_lang => 'Zott_Jogo'];
$product->price = 1.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Jogobella Light brzoskwinia Jogurt 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Jogobella_Light_wisnia_Jogurt_150_g'];
$product->link_rewrite = [$default_lang => 'Zott_Jogo'];
$product->price = 1.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Jogobella Light wiśnia Jogurt 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Jogobella_0%_Jogurt_truskawka_150_g'];
$product->link_rewrite = [$default_lang => 'Zott_Jogo'];
$product->price = 1.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Jogobella 0% Jogurt truskawka 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Activia_Letnia_Kolekcja_Truskawka_poziomka_Jogurt_195_g'];
$product->link_rewrite = [$default_lang => 'Danone_Ac'];
$product->price = 1.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Activia Letnia Kolekcja Truskawka poziomka Jogurt 195 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Primo_Jogurt_typ_grecki_330_g'];
$product->link_rewrite = [$default_lang => 'Zott_Prim'];
$product->price = 3.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Primo Jogurt typ grecki 330 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Value_Jogurt_z_ziarnami_zboz_rodzynki_winogrono_figa_180_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Val'];
$product->price = 0.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Value Jogurt z ziarnami zbóż rodzynki winogrono figa 180 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Zakrecony_Mix_Jogurt_o_smaku_waniliowym_125_g'];
$product->link_rewrite = [$default_lang => 'Danone_Za'];
$product->price = 1.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Zakręcony Mix Jogurt o smaku waniliowym 125 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_ale_Pitny_Brzoskwinia_marakuja_Napoj_jogurtowy_290_g'];
$product->link_rewrite = [$default_lang => 'Danone_al'];
$product->price = 2.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone ale Pitny Brzoskwinia marakuja Napój jogurtowy 290 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bakoma_Men_Pro_Jogurt_truskawkowy_z_wysoka_zawartoscia_biaka_230_g'];
$product->link_rewrite = [$default_lang => 'Bakoma_Me'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bakoma Men Pro Jogurt truskawkowy z wysoką zawartością białka 230 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Fantasia_Jogurt_kremowy_z_patkami_w_czekoladzie_210_g_(2_sztuki)'];
$product->link_rewrite = [$default_lang => 'Danone_Fa'];
$product->price = 3.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Fantasia Jogurt kremowy z płatkami w czekoladzie 210 g (2 sztuki).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_ale_Pitny_Truskawka_banan_Napoj_jogurtowy_290_g'];
$product->link_rewrite = [$default_lang => 'Danone_al'];
$product->price = 2.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone ale Pitny Truskawka banan Napój jogurtowy 290 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Activia_Letnia_Kolekcja_Truskawka_kiwi_Jogurt_300_g'];
$product->link_rewrite = [$default_lang => 'Danone_Ac'];
$product->price = 3.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Activia Letnia Kolekcja Truskawka kiwi Jogurt 300 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Biszkoptowy_Jogurt_120_g'];
$product->link_rewrite = [$default_lang => 'Danone_Bi'];
$product->price = 1.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Biszkoptowy Jogurt 120 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Muller_Mix_Jogurt_smietankowy_z_wafelkami_w_czekoladzie_150_g'];
$product->link_rewrite = [$default_lang => 'Muller_Mi'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Müller Mix Jogurt śmietankowy z wafelkami w czekoladzie 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Jogobella_Musli_sliwka-daktyle_Jogurt_150_g'];
$product->link_rewrite = [$default_lang => 'Zott_Jogo'];
$product->price = 1.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Jogobella Musli śliwka-daktyle Jogurt 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_ale_Pitny_Truskawka_poziomka_Napoj_jogurtowy_290_g'];
$product->link_rewrite = [$default_lang => 'Danone_al'];
$product->price = 2.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone ale Pitny Truskawka poziomka Napój jogurtowy 290 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bakoma_Men_Pro_Jogurt_mango_z_wysoka_zawartoscia_biaka_230_g'];
$product->link_rewrite = [$default_lang => 'Bakoma_Me'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bakoma Men Pro Jogurt mango z wysoką zawartością białka 230 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Activia_Letnia_Kolekcja_Malina_Jogurt_300_g'];
$product->link_rewrite = [$default_lang => 'Danone_Ac'];
$product->price = 3.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Activia Letnia Kolekcja Malina Jogurt 300 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bakoma_Twist_Jogurt_kawowy_400_g'];
$product->link_rewrite = [$default_lang => 'Bakoma_Tw'];
$product->price = 2.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bakoma Twist Jogurt kawowy 400 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Piatnica_Jogurt_naturalny_330_g'];
$product->link_rewrite = [$default_lang => 'Piatnica_'];
$product->price = 2.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Piątnica Jogurt naturalny 330 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Activia_Letnia_Kolekcja_Truskawka_owoce_lesne_Jogurt_300_g'];
$product->link_rewrite = [$default_lang => 'Danone_Ac'];
$product->price = 3.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Activia Letnia Kolekcja Truskawka owoce leśne Jogurt 300 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Gratka_o_smaku_truskawkowym_Deser_115_g'];
$product->link_rewrite = [$default_lang => 'Danone_Gr'];
$product->price = 0.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Gratka o smaku truskawkowym Deser 115 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bakoma_Men_Pro_Jogurt_owoce_lesne_z_wysoka_zawartoscia_biaka_230_g'];
$product->link_rewrite = [$default_lang => 'Bakoma_Me'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bakoma Men Pro Jogurt owoce leśne z wysoką zawartością białka 230 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Actimel_Malina_Mleko_Fermentowane_400_g_(4_sztuki)'];
$product->link_rewrite = [$default_lang => 'Danone_Ac'];
$product->price = 5.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Actimel Malina Mleko Fermentowane 400 g (4 sztuki).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Gratka_Napoj_mleczny_o_smaku_truskawkowym_170_g'];
$product->link_rewrite = [$default_lang => 'Danone_Gr'];
$product->price = 1.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Gratka Napój mleczny o smaku truskawkowym 170 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Natur_Jogurt_gesty_naturalny_150_g'];
$product->link_rewrite = [$default_lang => 'Zott_Natu'];
$product->price = 1.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Natur Jogurt gęsty naturalny 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Jogurt_do_picia_jagodowy_350_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Jog'];
$product->price = 1.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Jogurt do picia jagodowy 350 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Activia_Truskawka_Jogurt_480_g_(4_sztuki)'];
$product->link_rewrite = [$default_lang => 'Danone_Ac'];
$product->price = 5.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Activia Truskawka Jogurt 480 g (4 sztuki).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bakoma_Men_Pro_Jogurt_truskawkowy_z_wysoka_zawartoscia_biaka_200_g'];
$product->link_rewrite = [$default_lang => 'Bakoma_Me'];
$product->price = 2.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bakoma Men Pro Jogurt truskawkowy z wysoką zawartością białka 200 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_ale_Pitny_Owoce_lesne_Napoj_jogurtowy_290_g'];
$product->link_rewrite = [$default_lang => 'Danone_al'];
$product->price = 2.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone ale Pitny Owoce leśne Napój jogurtowy 290 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Activia_Letnia_Kolekcja_Jogurt_naturalny_300_g'];
$product->link_rewrite = [$default_lang => 'Danone_Ac'];
$product->price = 3.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Activia Letnia Kolekcja Jogurt naturalny 300 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bakoma_7_zboz_Jogurt_z_truskawkami_i_ziarnami_zboz_300_g'];
$product->link_rewrite = [$default_lang => 'Bakoma_7_'];
$product->price = 2.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bakoma 7 zbóż Jogurt z truskawkami i ziarnami zbóż 300 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bakoma_Men_Pro_Jogurt_morelowy_z_wysoka_zawartoscia_biaka_200_g'];
$product->link_rewrite = [$default_lang => 'Bakoma_Me'];
$product->price = 2.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bakoma Men Pro Jogurt morelowy z wysoką zawartością białka 200 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Danonki_Jogurt_banan_400_g_(4_sztuki)'];
$product->link_rewrite = [$default_lang => 'Danone_Da'];
$product->price = 4.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Danonki Jogurt banan 400 g (4 sztuki).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bakoma_Jogurt_naturalny_0%_170_g'];
$product->link_rewrite = [$default_lang => 'Bakoma_Jo'];
$product->price = 1.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bakoma Jogurt naturalny 0% 170 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bakoma_Twist_Jogurt_malinowy_400_g'];
$product->link_rewrite = [$default_lang => 'Bakoma_Tw'];
$product->price = 2.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bakoma Twist Jogurt malinowy 400 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Activia_Jagoda_Jogurt_240_g_(2_sztuki)'];
$product->link_rewrite = [$default_lang => 'Danone_Ac'];
$product->price = 3.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Activia Jagoda Jogurt 240 g (2 sztuki).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Muller_Froop_Smoothie_Brzoskwinia-Marakuja_Produkt_mleczny_150_g'];
$product->link_rewrite = [$default_lang => 'Muller_Fr'];
$product->price = 1.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Müller Froop Smoothie Brzoskwinia-Marakuja Produkt mleczny 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bakoma_Men_Pro_Jogurt_gruszkowy_z_wysoka_zawartoscia_biaka_200_g'];
$product->link_rewrite = [$default_lang => 'Bakoma_Me'];
$product->price = 2.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bakoma Men Pro Jogurt gruszkowy z wysoką zawartością białka 200 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Actimel_Truskawka_Mleko_Fermentowane_400_g_(4_sztuki)'];
$product->link_rewrite = [$default_lang => 'Danone_Ac'];
$product->price = 5.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Actimel Truskawka Mleko Fermentowane 400 g (4 sztuki).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Activia_Letnia_Kolekcja_Suszona_sliwka_Jogurt_195_g'];
$product->link_rewrite = [$default_lang => 'Danone_Ac'];
$product->price = 1.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Activia Letnia Kolekcja Suszona śliwka Jogurt 195 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Jogurt_z_owsianka_truskawkowy_180_g'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 1.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Jogurt z owsianką truskawkowy 180 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bakoma_7_zboz_Jogurt_ze_sliwkami_i_ziarnami_zboz_300_g'];
$product->link_rewrite = [$default_lang => 'Bakoma_7_'];
$product->price = 2.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bakoma 7 zbóż Jogurt ze śliwkami i ziarnami zbóż 300 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Actimel_Owoce_lesne_z_truskawkami_Mleko_Fermentowane_400_g_(4_sztuki)'];
$product->link_rewrite = [$default_lang => 'Danone_Ac'];
$product->price = 5.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Actimel Owoce leśne z truskawkami Mleko Fermentowane 400 g (4 sztuki).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Activia_Jogurt_naturalny_i_brzoskwinie_240_g_(2_sztuki)'];
$product->link_rewrite = [$default_lang => 'Danone_Ac'];
$product->price = 3.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Activia Jogurt naturalny i brzoskwinie 240 g (2 sztuki).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Napoj_jogurtowy_malinowy_350_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Nap'];
$product->price = 1.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Napój jogurtowy malinowy 350 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Muller_Froop_Tropical_Ananas-marakuja-wisnia_z_Barbados_Jogurt_z_wsadem_owocowym_150_g'];
$product->link_rewrite = [$default_lang => 'Muller_Fr'];
$product->price = 1.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Müller Froop Tropical Ananas-marakuja-wiśnia z Barbados Jogurt z wsadem owocowym 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Jogurt_polski_pitny_Pomarancza_z_melisa_250_g'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 1.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Jogurt polski pitny Pomarańcza z melisą 250 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Activia_Letnia_Kolekcja_Owoce_tropikalne_Jogurt_300_g'];
$product->link_rewrite = [$default_lang => 'Danone_Ac'];
$product->price = 3.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Activia Letnia Kolekcja Owoce tropikalne Jogurt 300 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Monte_Drink_Napoj_mleczny_200_ml'];
$product->link_rewrite = [$default_lang => 'Zott_Mont'];
$product->price = 2.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Monte Drink Napój mleczny 200 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Muller_Froop_Smoothie_Owoce_lesne_Produkt_mleczny__150_g'];
$product->link_rewrite = [$default_lang => 'Muller_Fr'];
$product->price = 1.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Müller Froop Smoothie Owoce leśne Produkt mleczny  150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Muller_Froop_Smoothie_Kiwi_Produkt_mleczny_150_g'];
$product->link_rewrite = [$default_lang => 'Muller_Fr'];
$product->price = 1.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Müller Froop Smoothie Kiwi Produkt mleczny 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Muller_Froop_Smoothie_Truskawka_Produkt_mleczny_150_g'];
$product->link_rewrite = [$default_lang => 'Muller_Fr'];
$product->price = 1.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Müller Froop Smoothie Truskawka Produkt mleczny 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Piatnica_Jogurt_typu_greckiego_naturalny_150_g'];
$product->link_rewrite = [$default_lang => 'Piatnica_'];
$product->price = 1.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Piątnica Jogurt typu greckiego naturalny 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Monte_Drink_Napoj_mleczny_380_ml_(4_sztuki)'];
$product->link_rewrite = [$default_lang => 'Zott_Mont'];
$product->price = 6.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Monte Drink Napój mleczny 380 ml (4 sztuki).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Ehrmann_Almighurt_Jogurt_o_smaku_waniliowym_z_wsadem_malinowym_500_g'];
$product->link_rewrite = [$default_lang => 'Ehrmann_A'];
$product->price = 6.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Ehrmann Almighurt Jogurt o smaku waniliowym z wsadem malinowym 500 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Muller_Mix_New_York_Jogurt_o_smaku_waniliowym_z_porcja_ciasteczek_kakaowych_130_g'];
$product->link_rewrite = [$default_lang => 'Muller_Mi'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Müller Mix New York Jogurt o smaku waniliowym z porcją ciasteczek kakaowych 130 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Jogurt_do_picia_owoce_lesne_350_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Jog'];
$product->price = 1.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Jogurt do picia owoce leśne 350 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Activia_Letnia_Kolekcja_Malina_jagoda_ziarna_Jogurt_280_g'];
$product->link_rewrite = [$default_lang => 'Danone_Ac'];
$product->price = 3.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Activia Letnia Kolekcja Malina jagoda ziarna Jogurt 280 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Serduszko_Pyszny_Jogurt_truskawka_125_g'];
$product->link_rewrite = [$default_lang => 'Zott_Serd'];
$product->price = 1.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Serduszko Pyszny Jogurt truskawka 125 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Activia_Suszona_sliwka_Jogurt_480_g_(4_sztuki)'];
$product->link_rewrite = [$default_lang => 'Danone_Ac'];
$product->price = 5.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Activia Suszona śliwka Jogurt 480 g (4 sztuki).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Jogobella_Jogurt_do_picia_malina_300_g'];
$product->link_rewrite = [$default_lang => 'Zott_Jogo'];
$product->price = 2.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Jogobella Jogurt do picia malina 300 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_ale_Pitny_Wisnia_wanilia_Napoj_jogurtowy_290_g'];
$product->link_rewrite = [$default_lang => 'Danone_al'];
$product->price = 2.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone ale Pitny Wiśnia wanilia Napój jogurtowy 290 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Muller_Crema_Jogurt_banan_125_g'];
$product->link_rewrite = [$default_lang => 'Muller_Cr'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Müller Crema Jogurt banan 125 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Activia_Letnia_Kolekcja_Suszona_sliwka_Jogurt_300_g'];
$product->link_rewrite = [$default_lang => 'Danone_Ac'];
$product->price = 3.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Activia Letnia Kolekcja Suszona śliwka Jogurt 300 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Actimel_Klasyczny_Mleko_Fermentowane_400_g_(4_sztuki)'];
$product->link_rewrite = [$default_lang => 'Danone_Ac'];
$product->price = 5.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Actimel Klasyczny Mleko Fermentowane 400 g (4 sztuki).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Gratka_o_smaku_truskawkowym_Deser_290_g'];
$product->link_rewrite = [$default_lang => 'Danone_Gr'];
$product->price = 1.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Gratka o smaku truskawkowym Deser 290 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Jogurt_do_picia_truskawkowy_350_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Jog'];
$product->price = 1.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Jogurt do picia truskawkowy 350 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Muller_Mix_Jogurt_o_smaku_pistacjowym_z_ciasteczkami_amarettini_130_g'];
$product->link_rewrite = [$default_lang => 'Muller_Mi'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Müller Mix Jogurt o smaku pistacjowym z ciasteczkami amarettini 130 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Actimel_Wieloowocowy_Mleko_Fermentowane_400_g_(4_sztuki)'];
$product->link_rewrite = [$default_lang => 'Danone_Ac'];
$product->price = 5.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Actimel Wieloowocowy Mleko Fermentowane 400 g (4 sztuki).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Activia_Truskawka_Jogurt_240_g_(2_sztuki)'];
$product->link_rewrite = [$default_lang => 'Danone_Ac'];
$product->price = 3.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Activia Truskawka Jogurt 240 g (2 sztuki).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Jogobella_Jogurt_do_picia_owoce_egzotyczne-truskawka_300_g'];
$product->link_rewrite = [$default_lang => 'Zott_Jogo'];
$product->price = 2.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Jogobella Jogurt do picia owoce egzotyczne-truskawka 300 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Actimel_Granat_Mleko_Fermentowane_400_g_(4_sztuki)'];
$product->link_rewrite = [$default_lang => 'Danone_Ac'];
$product->price = 5.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Actimel Granat Mleko Fermentowane 400 g (4 sztuki).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Jogo_Vita_Jogurt_naturalny_150_g'];
$product->link_rewrite = [$default_lang => 'Zott_Jogo'];
$product->price = 1.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Jogo Vita Jogurt naturalny 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Danonki_Kakao_250_ml'];
$product->link_rewrite = [$default_lang => 'Danone_Da'];
$product->price = 2.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Danonki Kakao 250 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Napoj_jogurtowy_czarna_porzeczka_350_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Nap'];
$product->price = 1.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Napój jogurtowy czarna porzeczka 350 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Jogobella_Jogurt_do_picia_truskawka_300_g'];
$product->link_rewrite = [$default_lang => 'Zott_Jogo'];
$product->price = 2.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Jogobella Jogurt do picia truskawka 300 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Jogobella_Owocowa_Wyspa_pieczone_jabko_Deser_jogurtowy_150_g'];
$product->link_rewrite = [$default_lang => 'Zott_Jogo'];
$product->price = 2.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Jogobella Owocowa Wyspa pieczone jabłko Deser jogurtowy 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Actimel_Mix_2_Smakow_Truskawka_Malina_Mleko_Fermentowane_1,2_kg_(12_sztuk)'];
$product->link_rewrite = [$default_lang => 'Danone_Ac'];
$product->price = 15.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Actimel Mix 2 Smaków Truskawka Malina Mleko Fermentowane 1,2 kg (12 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Actimel_Mix_3_Smakow_Klasyczny_Truskawka_Wieloowocowy_Mleko_Fermentowane_1,2_kg_(12_sztuk)'];
$product->link_rewrite = [$default_lang => 'Danone_Ac'];
$product->price = 15.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Actimel Mix 3 Smaków Klasyczny Truskawka Wieloowocowy Mleko Fermentowane 1,2 kg (12 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Activia_Jogurt_naturalny_i_maliny_240_g_(2_sztuki)'];
$product->link_rewrite = [$default_lang => 'Danone_Ac'];
$product->price = 3.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Activia Jogurt naturalny i maliny 240 g (2 sztuki).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Activia_Jogurt_naturalny_i_truskawki_240_g_(2_sztuki)'];
$product->link_rewrite = [$default_lang => 'Danone_Ac'];
$product->price = 3.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Activia Jogurt naturalny i truskawki 240 g (2 sztuki).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Jovi_Duet_Napoj_jogurtowy_o_smaku_jagoda-wisnia_350_g'];
$product->link_rewrite = [$default_lang => 'Jovi_Duet'];
$product->price = 2.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Jovi Duet Napój jogurtowy o smaku jagoda-wiśnia 350 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Jogobella_Owocowa_Wyspa_wisnia_Deser_jogurtowy_150_g'];
$product->link_rewrite = [$default_lang => 'Zott_Jogo'];
$product->price = 2.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Jogobella Owocowa Wyspa wiśnia Deser jogurtowy 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Activia_z_ziarnami_Jogurt_240_g_(2_sztuki)'];
$product->link_rewrite = [$default_lang => 'Danone_Ac'];
$product->price = 3.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Activia z ziarnami Jogurt 240 g (2 sztuki).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Jovi_Duet_Napoj_jogurtowy_o_smaku_kokos-migda_350_g'];
$product->link_rewrite = [$default_lang => 'Jovi_Duet'];
$product->price = 2.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Jovi Duet Napój jogurtowy o smaku kokos-migdał 350 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Muller_Mix_Jogurt_o_smaku_orzechow_makadamia_z_gwiazdkami_zbozowymi_w_czekoladzie_150_g'];
$product->link_rewrite = [$default_lang => 'Muller_Mi'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Müller Mix Jogurt o smaku orzechów makadamia z gwiazdkami zbożowymi w czekoladzie 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Primo_Jogurt_do_picia_naturalny_200_g'];
$product->link_rewrite = [$default_lang => 'Zott_Prim'];
$product->price = 2.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Primo Jogurt do picia naturalny 200 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Activia_Brzoskwinia_musli_Jogurt_240_g_(2_sztuki)'];
$product->link_rewrite = [$default_lang => 'Danone_Ac'];
$product->price = 3.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Activia Brzoskwinia musli Jogurt 240 g (2 sztuki).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Maluta_Jogurt_typ_Bakanski_naturalny_lekki_340_g'];
$product->link_rewrite = [$default_lang => 'Maluta_Jo'];
$product->price = 2.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Maluta Jogurt typ Bałkański naturalny lekki 340 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Maluta_Ayran_Doskonay_napoj_turecki_320_g'];
$product->link_rewrite = [$default_lang => 'Maluta_Ay'];
$product->price = 2.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Maluta Ayran Doskonały napój turecki 320 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Natur_Jogurt_naturalny_&_owoce_Soneczna_truskawka_115_g'];
$product->link_rewrite = [$default_lang => 'Zott_Natu'];
$product->price = 2.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Natur Jogurt naturalny &amp; owoce Słoneczna truskawka 115 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Muller_Mix_Jogurt_o_smaku_waniliowym_z_kulkami_ryzowymi_w_mlecznej_i_biaej_czekoladzie_150_g'];
$product->link_rewrite = [$default_lang => 'Muller_Mi'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Müller Mix Jogurt o smaku waniliowym z kulkami ryżowymi w mlecznej i białej czekoladzie 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Ehrmann_Almighurt_Jogurt_z_makiem_i_marcepanem_500_g'];
$product->link_rewrite = [$default_lang => 'Ehrmann_A'];
$product->price = 6.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Ehrmann Almighurt Jogurt z makiem i marcepanem 500 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bakoma_Bakus_Shake_o_smaku_waniliowym_230_g'];
$product->link_rewrite = [$default_lang => 'Bakoma_Ba'];
$product->price = 2.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bakoma Bakuś Shake o smaku waniliowym 230 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bakoma_Men_Pro_Jogurt_o_smaku_naturalnym_z_wysoka_zawartoscia_biaka_230_g'];
$product->link_rewrite = [$default_lang => 'Bakoma_Me'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bakoma Men Pro Jogurt o smaku naturalnym z wysoką zawartością białka 230 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Natur_Tzatziki_Sos_200_g'];
$product->link_rewrite = [$default_lang => 'Zott_Natu'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Natur Tzatziki Sos 200 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Activia_Jogurt_naturalny_i_suszone_sliwki_240_g_(2_sztuki)'];
$product->link_rewrite = [$default_lang => 'Danone_Ac'];
$product->price = 1.11;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Activia Jogurt naturalny i suszone śliwki 240 g (2 sztuki).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Activia_Suszona_sliwka_Jogurt_240_g_(2_sztuki)'];
$product->link_rewrite = [$default_lang => 'Danone_Ac'];
$product->price = 3.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Activia Suszona śliwka Jogurt 240 g (2 sztuki).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Jogurt_naturalny_agodny_290_g'];
$product->link_rewrite = [$default_lang => 'Danone_Jo'];
$product->price = 2.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Jogurt naturalny łagodny 290 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Jogobella_Jogurt_do_picia_brzoskwinia-marakuja_300_g'];
$product->link_rewrite = [$default_lang => 'Zott_Jogo'];
$product->price = 2.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Jogobella Jogurt do picia brzoskwinia-marakuja 300 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Activia_Wisnia_Jogurt_240_g_(2_sztuki)'];
$product->link_rewrite = [$default_lang => 'Danone_Ac'];
$product->price = 3.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Activia Wiśnia Jogurt 240 g (2 sztuki).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Jogurt_Polski_pitny_jabko-mieta_250_g'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 1.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Jogurt Polski pitny jabłko-mięta 250 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Jogurt_Polski_pitny_kawa_z_guarana_250_g'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 1.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Jogurt Polski pitny kawa z guaraną 250 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bakoma_Bakus_Shake_o_smaku_czekoladowym_230_g'];
$product->link_rewrite = [$default_lang => 'Bakoma_Ba'];
$product->price = 2.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bakoma Bakuś Shake o smaku czekoladowym 230 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mlekovita_Jogurt_Polski_pitny_rozowy_grejpfrut_z_zielona_herbata_250_g'];
$product->link_rewrite = [$default_lang => 'Mlekovita'];
$product->price = 1.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mlekovita Jogurt Polski pitny różowy grejpfrut z zieloną herbatą 250 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Jogurt_naturalny_agodny_370_g'];
$product->link_rewrite = [$default_lang => 'Danone_Jo'];
$product->price = 2.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Jogurt naturalny łagodny 370 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Muller_Mix_Jogurt_bananowy_z_patkami_kukurydzianymi_w_mlecznej_czekoladzie_150_g'];
$product->link_rewrite = [$default_lang => 'Muller_Mi'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Müller Mix Jogurt bananowy z płatkami kukurydzianymi w mlecznej czekoladzie 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bakoma_Satino_Coffee_Espresso_Napoj_mleczny_kawowy_240_g'];
$product->link_rewrite = [$default_lang => 'Bakoma_Sa'];
$product->price = 3.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bakoma Satino Coffee Espresso Napój mleczny kawowy 240 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Activia_Brzoskwinia_musli_Jogurt_480_g_(4_sztuki)'];
$product->link_rewrite = [$default_lang => 'Danone_Ac'];
$product->price = 5.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Activia Brzoskwinia musli Jogurt 480 g (4 sztuki).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Serduszko_Pyszny_Jogurt_truskawka_315_g'];
$product->link_rewrite = [$default_lang => 'Zott_Serd'];
$product->price = 2.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Serduszko Pyszny Jogurt truskawka 315 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bakoma_Satino_Coffee_Latte_Macchiato_Napoj_mleczny_kawowy_240_g'];
$product->link_rewrite = [$default_lang => 'Bakoma_Sa'];
$product->price = 3.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bakoma Satino Coffee Latte Macchiato Napój mleczny kawowy 240 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Krasnystaw_Jogurt_naturalny_350_g'];
$product->link_rewrite = [$default_lang => 'Krasnysta'];
$product->price = 2.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Krasnystaw Jogurt naturalny 350 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_ale_Pitny_Truskawkowy_Napoj_jogurtowy_300_g'];
$product->link_rewrite = [$default_lang => 'Danone_al'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone ale Pitny Truskawkowy Napój jogurtowy 300 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Muller_Mix_Columbia_Jogurt_o_smaku_waniliowym_z_oddzielna_porcja_ciasteczek_kawowych_130_g'];
$product->link_rewrite = [$default_lang => 'Muller_Mi'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Müller Mix Columbia Jogurt o smaku waniliowym z oddzielną porcją ciasteczek kawowych 130 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Activia_Gruszka_Jogurt_480_g_(4_sztuki)'];
$product->link_rewrite = [$default_lang => 'Danone_Ac'];
$product->price = 5.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Activia Gruszka Jogurt 480 g (4 sztuki).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Muller_Mix_Hawaii_Jogurt_o_smaku_kokosowym_z_ananasem_130_g'];
$product->link_rewrite = [$default_lang => 'Muller_Mi'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Müller Mix Hawaii Jogurt o smaku kokosowym z ananasem 130 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Activia_Wisnia_Jogurt_480_g_(4_sztuki)'];
$product->link_rewrite = [$default_lang => 'Danone_Ac'];
$product->price = 5.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Activia Wiśnia Jogurt 480 g (4 sztuki).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Jogurt_z_ziarnami_zboz_agodny_175_g'];
$product->link_rewrite = [$default_lang => 'Danone_Jo'];
$product->price = 1.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Jogurt z ziarnami zbóż łagodny 175 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Muller_Mix_Maroko_Sodzony_produkt_mleczny_z_dodatkiem_chrupek_migdaowych_113_g'];
$product->link_rewrite = [$default_lang => 'Muller_Mi'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Müller Mix Maroko Słodzony produkt mleczny z dodatkiem chrupek migdałowych 113 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Natur_Crunchy_Choco_Banana_Jogurt_naturalny_&_musli_115_g'];
$product->link_rewrite = [$default_lang => 'Zott_Natu'];
$product->price = 2.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Natur Crunchy Choco Banana Jogurt naturalny &amp; musli 115 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_ale_Pitny_Brzoskwinia_marakuja_Napoj_jogurtowy_300_g'];
$product->link_rewrite = [$default_lang => 'Danone_al'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone ale Pitny Brzoskwinia marakuja Napój jogurtowy 300 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Activia_Malina_Jogurt_480_g_(4_sztuki)'];
$product->link_rewrite = [$default_lang => 'Danone_Ac'];
$product->price = 5.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Activia Malina Jogurt 480 g (4 sztuki).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Napoj_mleczny_o_smaku_truskawkowym_4_x_100_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Nap'];
$product->price = 3.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Napój mleczny o smaku truskawkowym 4 x 100 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Bifido_Jogurt_pitny_truskawka_i_kiwi_300_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Bif'];
$product->price = 2.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Bifido Jogurt pitny truskawka i kiwi 300 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Muller_Mix_California_Sodzony_produkt_mleczny_z_orzeszkami_i_chrupkami_w_czekoladzie_102_g'];
$product->link_rewrite = [$default_lang => 'Muller_Mi'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Müller Mix California Słodzony produkt mleczny z orzeszkami i chrupkami w czekoladzie 102 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Activia_Naturalna_Jogurt_120_g'];
$product->link_rewrite = [$default_lang => 'Danone_Ac'];
$product->price = 1.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Activia Naturalna Jogurt 120 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Bifido_Jogurt_pitny_jagodowy_300_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Bif'];
$product->price = 2.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Bifido Jogurt pitny jagodowy 300 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Bifido_Jogurt_pitny_brzoskwinia_i_mango_300_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Bif'];
$product->price = 2.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Bifido Jogurt pitny brzoskwinia i mango 300 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Napoj_mleczny_o_smaku_owocow_lesnych_4_x_100_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Nap'];
$product->price = 3.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Napój mleczny o smaku owoców leśnych 4 x 100 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Napoj_mleczny_naturalny_4_x_100_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Nap'];
$product->price = 3.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Napój mleczny naturalny 4 x 100 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Jogurt_o_smaku_czekoladowo-bananowym_z_biszkoptami_100_g_+_7_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Jog'];
$product->price = 1.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Jogurt o smaku czekoladowo-bananowym z biszkoptami 100 g + 7 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_ale_Pitny_Truskawka_banan_Napoj_jogurtowy_300_g'];
$product->link_rewrite = [$default_lang => 'Danone_al'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone ale Pitny Truskawka banan Napój jogurtowy 300 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Jogurt_waniliowy_z_kulkami_czekoladowo-zbozowymi_100_g_+_7_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Jog'];
$product->price = 1.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Jogurt waniliowy z kulkami czekoladowo-zbożowymi 100 g + 7 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Muller_Mullermilch_Napoj_mleczny_o_smaku_mango_377_ml'];
$product->link_rewrite = [$default_lang => 'Muller_Mu'];
$product->price = 3.09;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Müller Müllermilch Napój mleczny o smaku mango 377 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Jogurt_pieczone_jabko_150_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Jog'];
$product->price = 0.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Jogurt pieczone jabłko 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Jogurt_gruszka-dziki_bez_150_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Jog'];
$product->price = 0.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Jogurt gruszka-dziki bez 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'JOG_MILK_TIGER_WAN_Z_DRAZ_76_g'];
$product->link_rewrite = [$default_lang => 'JOG_MILK_'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/JOG MILK TIGER WAN Z DRAZ 76 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'JOGURT_WYSOKOBIALKOWY_0%_180_g'];
$product->link_rewrite = [$default_lang => 'JOGURT_WY'];
$product->price = 2.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/JOGURT WYSOKOBIALKOWY 0% 180 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'JOGURT_CREAMF_BRZOSKWIN_330_g'];
$product->link_rewrite = [$default_lang => 'JOGURT_CR'];
$product->price = 1.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/JOGURT CREAMF BRZOSKWIN 330 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Danone_Fantasia_Love_Jogurt_kremowy_ze_zbozowymi_serduszkami_z_biaa_czekolada_98_g'];
$product->link_rewrite = [$default_lang => 'Danone_Fa'];
$product->price = 1.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Danone Fantasia Love Jogurt kremowy ze zbożowymi serduszkami z białą czekoladą 98 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'MONTE_CHOC_BAL&CAC_MIX_125_g'];
$product->link_rewrite = [$default_lang => 'MONTE_CHO'];
$product->price = 2.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/MONTE CHOC BAL&amp;CAC MIX 125 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'JOG_MILK_TIGER_TRU_Z_DRAZ_76_g'];
$product->link_rewrite = [$default_lang => 'JOG_MILK_'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/JOG MILK TIGER TRU Z DRAZ 76 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'JOGURT_CREAMF_OW._LESNE_150_g'];
$product->link_rewrite = [$default_lang => 'JOGURT_CR'];
$product->price = 0.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/JOGURT CREAMF OW. LESNE 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Jogurt_z_owocami_lesnymi_150_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Jog'];
$product->price = 0.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Jogurt z owocami leśnymi 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Bifido_Jogurt_naturalny_130_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Bif'];
$product->price = 0.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Bifido Jogurt naturalny 130 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zott_Caffreze_Cappuccino_Napoj_mleczny_kawowy_200_ml'];
$product->link_rewrite = [$default_lang => 'Zott_Caff'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zott Caffreze Cappuccino Napój mleczny kawowy 200 ml.png'))
    {
    
        $image->delete();
    }
    
}
$category = new Category();
        $category->name = [$default_lang => 'Napoje'];
$category->id_parent=Configuration::get('PS_HOME_CATEGORY');
$category->link_rewrite=[$default_lang => 'Napoje'];
$category->add();
        $subcategory = new Category();
        $subcategory->name = [$default_lang => 'soki'];
$subcategory->id_parent=$category->id;
$subcategory->link_rewrite=[$default_lang => 'soki'];
$subcategory->add();
        $subcategory = new Category();
        $subcategory->name = [$default_lang => 'napoje_niegazowane'];
$subcategory->id_parent=$category->id;
$subcategory->link_rewrite=[$default_lang => 'napoje_niegazowane'];
$subcategory->add();
        $subcategory = new Category();
        $subcategory->name = [$default_lang => 'woda'];
$subcategory->id_parent=$category->id;
$subcategory->link_rewrite=[$default_lang => 'woda'];
$subcategory->add();
        $product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zywiec_Zdroj_Niegazowany_Woda_zrodlana_1,5_l'];
$product->link_rewrite = [$default_lang => 'Zywiec_Zd'];
$product->price = 1.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Żywiec Zdrój Niegazowany Woda źródlana 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Cisowianka_Naturalna_woda_mineralna_niegazowana_niskosodowa_1,5_l'];
$product->link_rewrite = [$default_lang => 'Cisowiank'];
$product->price = 1.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Cisowianka Naturalna woda mineralna niegazowana niskosodowa 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Naeczowianka_Naturalna_woda_mineralna_niegazowana_1,5_l'];
$product->link_rewrite = [$default_lang => 'Naeczowia'];
$product->price = 1.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Nałęczowianka Naturalna woda mineralna niegazowana 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Dobrowianka_Naturalna_woda_mineralna_niegazowana_1,5_l'];
$product->link_rewrite = [$default_lang => 'Dobrowian'];
$product->price = 1.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Dobrowianka Naturalna woda mineralna niegazowana 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Muszynianka_plus_Naturalna_woda_mineralna_wysokozmineralizowana_1,5_l'];
$product->link_rewrite = [$default_lang => 'Muszynian'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Muszynianka plus Naturalna woda mineralna wysokozmineralizowana 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Nestle_Pure_Life_Niegazowana_woda_zrodlana_1,5_l'];
$product->link_rewrite = [$default_lang => 'Nestle_Pu'];
$product->price = 1.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Nestlé Pure Life Niegazowana woda źródlana 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Cisowianka_Naturalna_woda_mineralna_lekko_gazowana_niskosodowa_1,5_l'];
$product->link_rewrite = [$default_lang => 'Cisowiank'];
$product->price = 1.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Cisowianka Naturalna woda mineralna lekko gazowana niskosodowa 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Cisowianka_Naturalna_woda_mineralna_niegazowana_niskosodowa_0,5_l'];
$product->link_rewrite = [$default_lang => 'Cisowiank'];
$product->price = 1.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Cisowianka Naturalna woda mineralna niegazowana niskosodowa 0,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Primavera_Woda_zrodlana_niegazowana_6_l'];
$product->link_rewrite = [$default_lang => 'Primavera'];
$product->price = 3.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Primavera Woda źródlana niegazowana 6 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Kinga_Pieninska_Naturalna_Woda_Mineralna_bez_gazu_1,5_l'];
$product->link_rewrite = [$default_lang => 'Kinga_Pie'];
$product->price = 1.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Kinga Pienińska Naturalna Woda Mineralna bez gazu 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Value_Woda_zrodlana_niegazowana_1,5_l'];
$product->link_rewrite = [$default_lang => 'Tesco_Val'];
$product->price = 0.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Value Woda źródlana niegazowana 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Kinga_Pieninska_Naturalna_Woda_Mineralna_naturalna_1,5_l'];
$product->link_rewrite = [$default_lang => 'Kinga_Pie'];
$product->price = 1.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Kinga Pienińska Naturalna Woda Mineralna naturalna 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zywio_od_Zywiec_Zdroj_SA_Woda_zrodlana_gazowana_1,5_l'];
$product->link_rewrite = [$default_lang => 'Zywio_od_'];
$product->price = 1.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Żywioł od Żywiec Zdrój SA Woda źródlana gazowana 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Muszyna_Skarb_Zycia_Naturalna_woda_mineralna_wysokozmineralizowana_lekko_gazowana_1,5_l'];
$product->link_rewrite = [$default_lang => 'Muszyna_S'];
$product->price = 1.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Muszyna Skarb Życia Naturalna woda mineralna wysokozmineralizowana lekko gazowana 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Naeczowianka_Naturalna_woda_mineralna_delikatnie_gazowana_1,5_l'];
$product->link_rewrite = [$default_lang => 'Naeczowia'];
$product->price = 1.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Nałęczowianka Naturalna woda mineralna delikatnie gazowana 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mama_i_ja_Woda_zrodlana_niegazowana_1,5_l'];
$product->link_rewrite = [$default_lang => 'Mama_i_ja'];
$product->price = 1.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mama i ja Woda źródlana niegazowana 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Kropla_Beskidu_Naturalna_woda_mineralna_niegazowana_1,5_l'];
$product->link_rewrite = [$default_lang => 'Kropla_Be'];
$product->price = 1.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Kropla Beskidu Naturalna woda mineralna niegazowana 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zywiec_Zdroj_Woda_niegazowana_5_l'];
$product->link_rewrite = [$default_lang => 'Zywiec_Zd'];
$product->price = 4.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Żywiec Zdrój Woda niegazowana 5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Cisowianka_Naturalna_woda_mineralna_gazowana_niskosodowa_1,5_l'];
$product->link_rewrite = [$default_lang => 'Cisowiank'];
$product->price = 1.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Cisowianka Naturalna woda mineralna gazowana niskosodowa 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Clearview_Woda_zrodlana_niegazowana_2_l'];
$product->link_rewrite = [$default_lang => 'Clearview'];
$product->price = 0.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Clearview Woda źródlana niegazowana 2 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Value_Woda_zrodlana_niegazowana_5_l'];
$product->link_rewrite = [$default_lang => 'Tesco_Val'];
$product->price = 1.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Value Woda źródlana niegazowana 5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Value_Woda_zrodlana_gazowana_1,5_l'];
$product->link_rewrite = [$default_lang => 'Tesco_Val'];
$product->price = 0.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Value Woda źródlana gazowana 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zywiec_Zdroj_Niegazowany_Woda_zrodlana_700_ml'];
$product->link_rewrite = [$default_lang => 'Zywiec_Zd'];
$product->price = 1.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Żywiec Zdrój Niegazowany Woda źródlana 700 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Polanicka_Zdroj_Naturalna_woda_mineralna_niegazowana_1,5_l'];
$product->link_rewrite = [$default_lang => 'Tesco_Pol'];
$product->price = 0.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Polanicka Zdrój Naturalna woda mineralna niegazowana 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Kinga_Pieninska_Naturalna_Woda_Mineralna_gazowana_1,5_l'];
$product->link_rewrite = [$default_lang => 'Kinga_Pie'];
$product->price = 1.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Kinga Pienińska Naturalna Woda Mineralna gazowana 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Cisowianka_Naturalna_woda_mineralna_gazowana_niskosodowa_0,5_l'];
$product->link_rewrite = [$default_lang => 'Cisowiank'];
$product->price = 1.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Cisowianka Naturalna woda mineralna gazowana niskosodowa 0,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Staropolanka_2000_Naturalna_woda_mineralna_wysokozmineralizowana_lekko_gazowana_1,5_l'];
$product->link_rewrite = [$default_lang => 'Staropola'];
$product->price = 1.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Staropolanka 2000 Naturalna woda mineralna wysokozmineralizowana lekko gazowana 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Muszyna_Cechini_Naturalna_woda_mineralna_gazowana_srednionasycona_2_l'];
$product->link_rewrite = [$default_lang => 'Muszyna_C'];
$product->price = 1.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Muszyna Cechini Naturalna woda mineralna gazowana średnionasycona 2 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zywiec_Zdroj_Niegazowany_Woda_zrodlana_500_ml'];
$product->link_rewrite = [$default_lang => 'Zywiec_Zd'];
$product->price = 1.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Żywiec Zdrój Niegazowany Woda źródlana 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Cisowianka_Perlage_Naturalna_woda_mineralna_musujaca_niskosodowa_0,7_l'];
$product->link_rewrite = [$default_lang => 'Cisowiank'];
$product->price = 1.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Cisowianka Perlage Naturalna woda mineralna musująca niskosodowa 0,7 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Naeczowianka_Naturalna_woda_mineralna_gazowana_1,5_l'];
$product->link_rewrite = [$default_lang => 'Naeczowia'];
$product->price = 1.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Nałęczowianka Naturalna woda mineralna gazowana 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Pera_Mazowsza_Woda_zrodlana_niegazowana_5_l'];
$product->link_rewrite = [$default_lang => 'Tesco_Per'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Perła Mazowsza Woda źródlana niegazowana 5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Polanicka_Naturalna_woda_mineralna_Sudety_gazowana_sredniozmineralizowana_1,5_l'];
$product->link_rewrite = [$default_lang => 'Tesco_Pol'];
$product->price = 0.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Polanicka Naturalna woda mineralna Sudety gazowana średniozmineralizowana 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Clearview_Woda_zrodlana_gazowana_2_l'];
$product->link_rewrite = [$default_lang => 'Clearview'];
$product->price = 0.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Clearview Woda źródlana gazowana 2 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Kryniczanka_Naturalna_woda_mineralna_niskonasycona_CO2_1,5_l'];
$product->link_rewrite = [$default_lang => 'Kryniczan'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Kryniczanka Naturalna woda mineralna niskonasycona CO2 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Naeczowianka_Naturalna_woda_mineralna_niegazowana_0,5_l'];
$product->link_rewrite = [$default_lang => 'Naeczowia'];
$product->price = 1.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Nałęczowianka Naturalna woda mineralna niegazowana 0,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Muszyna_Skarb_Zycia_Naturalna_woda_mineralna_wysokozmineralizowana_gazowana_1,5_l'];
$product->link_rewrite = [$default_lang => 'Muszyna_S'];
$product->price = 1.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Muszyna Skarb Życia Naturalna woda mineralna wysokozmineralizowana gazowana 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Cisowianka_Naturalna_woda_mineralna_niegazowana_niskosodowa_0,7_l'];
$product->link_rewrite = [$default_lang => 'Cisowiank'];
$product->price = 1.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Cisowianka Naturalna woda mineralna niegazowana niskosodowa 0,7 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Kropla_Beskidu_Naturalna_woda_mineralna_gazowana_1,5_l'];
$product->link_rewrite = [$default_lang => 'Kropla_Be'];
$product->price = 1.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Kropla Beskidu Naturalna woda mineralna gazowana 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Nestle_Pure_Life_Niegazowana_woda_zrodlana_0,5_l'];
$product->link_rewrite = [$default_lang => 'Nestle_Pu'];
$product->price = 1.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Nestlé Pure Life Niegazowana woda źródlana 0,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zywiec_Zdroj_ze_smakiem_cytryny_Napoj_niegazowany_1,5_l'];
$product->link_rewrite = [$default_lang => 'Zywiec_Zd'];
$product->price = 2.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Żywiec Zdrój ze smakiem cytryny Napój niegazowany 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Primavera_Woda_zrodlana_niegazowana_500_ml'];
$product->link_rewrite = [$default_lang => 'Primavera'];
$product->price = 1.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Primavera Woda źródlana niegazowana 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zywio_od_Zywiec_Zdroj_SA_Woda_zrodlana_lekko_gazowana_1,5_l'];
$product->link_rewrite = [$default_lang => 'Zywio_od_'];
$product->price = 1.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Żywioł od Żywiec Zdrój SA Woda źródlana lekko gazowana 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Cisowianka_Naturalna_woda_mineralna_lekko_gazowana_niskosodowa_0,5_l'];
$product->link_rewrite = [$default_lang => 'Cisowiank'];
$product->price = 1.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Cisowianka Naturalna woda mineralna lekko gazowana niskosodowa 0,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Nestle_Pure_Life_Gazowana_woda_zrodlana_1,5_l'];
$product->link_rewrite = [$default_lang => 'Nestle_Pu'];
$product->price = 1.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Nestlé Pure Life Gazowana woda źródlana 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zywiec_Zdroj_ze_smakiem_jabka_Napoj_niegazowany_1,5_l'];
$product->link_rewrite = [$default_lang => 'Zywiec_Zd'];
$product->price = 2.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Żywiec Zdrój ze smakiem jabłka Napój niegazowany 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Magnesia_Naturalna_woda_mineralna_niegazowana_1,5_l'];
$product->link_rewrite = [$default_lang => 'Magnesia_'];
$product->price = 2.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Magnesia Naturalna woda mineralna niegazowana 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mama_i_ja_Woda_zrodlana_niegazowana_500_ml'];
$product->link_rewrite = [$default_lang => 'Mama_i_ja'];
$product->price = 1.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mama i ja Woda źródlana niegazowana 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zywiec_Zdroj_Smako-yk_o_smaku_brzoskwini_1,5_l'];
$product->link_rewrite = [$default_lang => 'Zywiec_Zd'];
$product->price = 2.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Żywiec Zdrój Smako-Łyk o smaku brzoskwini 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zywiec_Zdroj_ze_smakiem_truskawki_Napoj_niegazowany_1,5_l'];
$product->link_rewrite = [$default_lang => 'Zywiec_Zd'];
$product->price = 2.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Żywiec Zdrój ze smakiem truskawki Napój niegazowany 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Nestle_Pure_Life_Lekko_gazowana_woda_zrodlana_1,5_l'];
$product->link_rewrite = [$default_lang => 'Nestle_Pu'];
$product->price = 1.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Nestlé Pure Life Lekko gazowana woda źródlana 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Staropolanka_Kids_Woda_zrodlana_niegazowana_330_ml'];
$product->link_rewrite = [$default_lang => 'Staropola'];
$product->price = 1.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Staropolanka Kids Woda źródlana niegazowana 330 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zywio_od_Zywiec_Zdroj_SA_Woda_zrodlana_mocno_gazowana_500_ml'];
$product->link_rewrite = [$default_lang => 'Zywio_od_'];
$product->price = 1.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Żywioł od Żywiec Zdrój SA Woda źródlana mocno gazowana 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Cisowianka_Naturalna_woda_mineralna_niegazowana_niskosodowa_0,7_l'];
$product->link_rewrite = [$default_lang => 'Cisowiank'];
$product->price = 1.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Cisowianka Naturalna woda mineralna niegazowana niskosodowa 0,7 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Staropolanka_Zdroj_Woda_zrodlana_lekko_gazowana_5_l'];
$product->link_rewrite = [$default_lang => 'Staropola'];
$product->price = 4.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Staropolanka Zdrój Woda źródlana lekko gazowana 5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Kinga_Pieninska_Naturalna_woda_mineralna_niegazowana_0,7_l'];
$product->link_rewrite = [$default_lang => 'Kinga_Pie'];
$product->price = 2.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Kinga Pienińska Naturalna woda mineralna niegazowana 0,7 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Staropolanka_2000_Naturalna_woda_mineralna_wysokozmineralizowana_gazowana_1,5_l'];
$product->link_rewrite = [$default_lang => 'Staropola'];
$product->price = 1.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Staropolanka 2000 Naturalna woda mineralna wysokozmineralizowana gazowana 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zywiec_Zdroj_Soczysty_Cytryna_Napoj_niegazowany_1,5_l'];
$product->link_rewrite = [$default_lang => 'Zywiec_Zd'];
$product->price = 3.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Żywiec Zdrój Soczysty Cytryna Napój niegazowany 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Kropla_Beskidu_Naturalna_woda_mineralna_niegazowana_500_ml'];
$product->link_rewrite = [$default_lang => 'Kropla_Be'];
$product->price = 1.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Kropla Beskidu Naturalna woda mineralna niegazowana 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Dobrowianka_Naturalna_woda_mineralna_niegazowana_500_ml'];
$product->link_rewrite = [$default_lang => 'Dobrowian'];
$product->price = 1.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Dobrowianka Naturalna woda mineralna niegazowana 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Kinga_Pieninska_Naturalna_Woda_Mineralna_gazowana_0,33_l'];
$product->link_rewrite = [$default_lang => 'Kinga_Pie'];
$product->price = 1.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Kinga Pienińska Naturalna Woda Mineralna gazowana 0,33 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zywiec_Zdroj_Soczysty_Wisnia_Napoj_niegazowany_1,5_l'];
$product->link_rewrite = [$default_lang => 'Zywiec_Zd'];
$product->price = 3.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Żywiec Zdrój Soczysty Wiśnia Napój niegazowany 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zywiec_Zdroj_Soczysty_Jabko_Napoj_niegazowany_1,5_l'];
$product->link_rewrite = [$default_lang => 'Zywiec_Zd'];
$product->price = 3.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Żywiec Zdrój Soczysty Jabłko Napój niegazowany 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Magnesia_Naturalna_woda_mineralna_lekko_gazowana_1,5_l'];
$product->link_rewrite = [$default_lang => 'Magnesia_'];
$product->price = 2.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Magnesia Naturalna woda mineralna lekko gazowana 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Kinga_Pieninska_Naturalna_Woda_Mineralna_niegazowana_0,33_l'];
$product->link_rewrite = [$default_lang => 'Kinga_Pie'];
$product->price = 1.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Kinga Pienińska Naturalna Woda Mineralna niegazowana 0,33 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zywiec_Zdroj_Smako-yk_o_smaku_wisni_1,5_l'];
$product->link_rewrite = [$default_lang => 'Zywiec_Zd'];
$product->price = 2.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Żywiec Zdrój Smako-Łyk o smaku wiśni 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Kryniczanka_Naturalna_woda_mineralna_wysokonasycona_CO2_1,5_l'];
$product->link_rewrite = [$default_lang => 'Kryniczan'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Kryniczanka Naturalna woda mineralna wysokonasycona CO2 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zywiec_Zdroj_ze_smakiem_truskawki_Napoj_niegazowany_500_ml'];
$product->link_rewrite = [$default_lang => 'Zywiec_Zd'];
$product->price = 1.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Żywiec Zdrój ze smakiem truskawki Napój niegazowany 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Wielka_Pieniawa_Woda_1,5_l'];
$product->link_rewrite = [$default_lang => 'Wielka_Pi'];
$product->price = 3.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Wielka Pieniawa Woda 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Naeczowianka_Naturalna_woda_mineralna_gazowana_0,5_l'];
$product->link_rewrite = [$default_lang => 'Naeczowia'];
$product->price = 1.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Nałęczowianka Naturalna woda mineralna gazowana 0,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Kropla_Beskidu_Naturalna_woda_mineralna_niegazowana_750_ml'];
$product->link_rewrite = [$default_lang => 'Kropla_Be'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Kropla Beskidu Naturalna woda mineralna niegazowana 750 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Kinga_Pieninska_Naturalna_Woda_Mineralna_naturalna_0,5_l'];
$product->link_rewrite = [$default_lang => 'Kinga_Pie'];
$product->price = 1.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Kinga Pienińska Naturalna Woda Mineralna naturalna 0,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Magnesia_Naturalna_woda_mineralna_gazowana_1,5_l'];
$product->link_rewrite = [$default_lang => 'Magnesia_'];
$product->price = 2.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Magnesia Naturalna woda mineralna gazowana 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zywiec_Zdroj_ze_smakiem_cytryny_Napoj_niegazowany_500_ml'];
$product->link_rewrite = [$default_lang => 'Zywiec_Zd'];
$product->price = 1.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Żywiec Zdrój ze smakiem cytryny Napój niegazowany 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Polanicka_Zdroj_Naturalna_woda_mineralna_niegazowana_500_ml'];
$product->link_rewrite = [$default_lang => 'Tesco_Pol'];
$product->price = 0.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Polanicka Zdrój Naturalna woda mineralna niegazowana 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Dobrowianka_Naturalna_woda_mineralna_lekko_gazowana_500_ml'];
$product->link_rewrite = [$default_lang => 'Dobrowian'];
$product->price = 1.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Dobrowianka Naturalna woda mineralna lekko gazowana 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Grodziska_Woda_mineralna_niegazowana_sredniozmineralizowana_1,5_l'];
$product->link_rewrite = [$default_lang => 'Tesco_Gro'];
$product->price = 1.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Grodziska Woda mineralna niegazowana średniozmineralizowana 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Jan_Mineralna_woda_lecznicza_0,5_l'];
$product->link_rewrite = [$default_lang => 'Jan_Miner'];
$product->price = 2.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Jan Mineralna woda lecznicza 0,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Staropolanka_2000_Naturalna_woda_mineralna_wysokozmineralizowana_lekko_gazowana_500_ml'];
$product->link_rewrite = [$default_lang => 'Staropola'];
$product->price = 1.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Staropolanka 2000 Naturalna woda mineralna wysokozmineralizowana lekko gazowana 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Kropla_Beskidu_Naturalna_woda_mineralna_gazowana_500_ml'];
$product->link_rewrite = [$default_lang => 'Kropla_Be'];
$product->price = 1.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Kropla Beskidu Naturalna woda mineralna gazowana 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Aquila_Woda_niegazowana_dla_niemowlat_1,5_l'];
$product->link_rewrite = [$default_lang => 'Aquila_Wo'];
$product->price = 2.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Aquila Woda niegazowana dla niemowląt 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zywiec_Zdroj_Zwariowana_poziomka_Napoj_niegazowany_500_ml'];
$product->link_rewrite = [$default_lang => 'Zywiec_Zd'];
$product->price = 2.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Żywiec Zdrój Zwariowana poziomka Napój niegazowany 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Nestle_Pure_Life_Gazowana_woda_zrodlana_0,5_l'];
$product->link_rewrite = [$default_lang => 'Nestle_Pu'];
$product->price = 1.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Nestlé Pure Life Gazowana woda źródlana 0,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Jan_Mineralna_woda_lecznicza_z_Krynicy_Zdroju_5_l'];
$product->link_rewrite = [$default_lang => 'Jan_Miner'];
$product->price = 19.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Jan Mineralna woda lecznicza z Krynicy Zdroju 5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Primavera_Woda_zrodlana_gazowana_500_ml'];
$product->link_rewrite = [$default_lang => 'Primavera'];
$product->price = 1.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Primavera Woda źródlana gazowana 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Oshee_Vitamin_Water_Magnez_+_B6_Napoj_niegazowany_o_smaku_cytryny-pomaranczy_555_ml'];
$product->link_rewrite = [$default_lang => 'Oshee_Vit'];
$product->price = 3.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Oshee Vitamin Water Magnez + B6 Napój niegazowany o smaku cytryny-pomarańczy 555 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Wielka_Pieniawa_Woda_330_ml'];
$product->link_rewrite = [$default_lang => 'Wielka_Pi'];
$product->price = 1.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Wielka Pieniawa Woda 330 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zywiec_Zdroj_Gaz_z_sokiem_z_pomaranczy_Napoj_gazowany_1_l'];
$product->link_rewrite = [$default_lang => 'Zywiec_Zd'];
$product->price = 3.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Żywiec Zdrój Gaz z sokiem z pomarańczy Napój gazowany 1 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zywiec_Zdroj_gaz_z_sokiem_z_cytryn_Napoj_gazowany_1_l'];
$product->link_rewrite = [$default_lang => 'Zywiec_Zd'];
$product->price = 3.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Żywiec Zdrój gaz z sokiem z cytryn Napój gazowany 1 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Oshee_Naturalna_woda_mineralna_niegazowana_0,75_l'];
$product->link_rewrite = [$default_lang => 'Oshee_Nat'];
$product->price = 1.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Oshee Naturalna woda mineralna niegazowana 0,75 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Evian_Naturalna_woda_mineralna_niegazowana_1_l'];
$product->link_rewrite = [$default_lang => 'Evian_Nat'];
$product->price = 6.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Evian Naturalna woda mineralna niegazowana 1 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Sotwinka_Mineralna_woda_lecznicza_0,5_l'];
$product->link_rewrite = [$default_lang => 'Sotwinka_'];
$product->price = 2.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Słotwinka Mineralna woda lecznicza 0,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Oshee_Vitamin_Water_Napoj_niegazowany_o_smaku_czerwonych_winogron_i_dragonfruit_555_ml'];
$product->link_rewrite = [$default_lang => 'Oshee_Vit'];
$product->price = 3.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Oshee Vitamin Water Napój niegazowany o smaku czerwonych winogron i dragonfruit 555 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Polanicka_Zdroj_Naturalna_woda_mineralna_gazowana_500_ml'];
$product->link_rewrite = [$default_lang => 'Tesco_Pol'];
$product->price = 0.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Polanicka Zdrój Naturalna woda mineralna gazowana 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Muszyna_Cechini_Napoj_gazowany_na_bazie_naturalnej_wody_mineralnej_cytrynowy_0,33_l'];
$product->link_rewrite = [$default_lang => 'Muszyna_C'];
$product->price = 1.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Muszyna Cechini Napój gazowany na bazie naturalnej wody mineralnej cytrynowy 0,33 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Kinga_Pieninska_Naturalna_Woda_Mineralna_gazowana_0,5_l'];
$product->link_rewrite = [$default_lang => 'Kinga_Pie'];
$product->price = 1.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Kinga Pienińska Naturalna Woda Mineralna gazowana 0,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zuber_Mineralna_woda_lecznicza_0,5_l'];
$product->link_rewrite = [$default_lang => 'Zuber_Min'];
$product->price = 2.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zuber Mineralna woda lecznicza 0,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Oshee_Vitamin_Water_Zero_Niegazowany_napoj_o_smaku_cytryny-limonki_555_ml'];
$product->link_rewrite = [$default_lang => 'Oshee_Vit'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Oshee Vitamin Water Zero Niegazowany napój o smaku cytryny-limonki 555 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Grodziska_Woda_mineralna_gazowana_sredniozmineralizowana_1,5_l'];
$product->link_rewrite = [$default_lang => 'Tesco_Gro'];
$product->price = 1.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Grodziska Woda mineralna gazowana średniozmineralizowana 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Staropolanka_800_Naturalna_woda_mineralna_sredniozmineralizowana_niegazowana_500_ml'];
$product->link_rewrite = [$default_lang => 'Staropola'];
$product->price = 1.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Staropolanka 800 Naturalna woda mineralna średniozmineralizowana niegazowana 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Evian_Naturalna_woda_mineralna_niegazowana_500_ml'];
$product->link_rewrite = [$default_lang => 'Evian_Nat'];
$product->price = 4.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Evian Naturalna woda mineralna niegazowana 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Kryniczanka_Naturalna_woda_mineralna_niskonasycona_CO2_0,5_l'];
$product->link_rewrite = [$default_lang => 'Kryniczan'];
$product->price = 1.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Kryniczanka Naturalna woda mineralna niskonasycona CO2 0,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zuber_Mineralna_woda_lecznicza_z_Krynicy_Zdroju_5_l'];
$product->link_rewrite = [$default_lang => 'Zuber_Min'];
$product->price = 22.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zuber Mineralna woda lecznicza z Krynicy Zdroju 5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Pera_Mazowsza_Woda_zrodlana_niegazowana_1,5_l'];
$product->link_rewrite = [$default_lang => 'Tesco_Per'];
$product->price = 1.43;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Perła Mazowsza Woda źródlana niegazowana 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Polanicka_Napoj_gazowany_smak_cytryny_1,5_l'];
$product->link_rewrite = [$default_lang => 'Tesco_Pol'];
$product->price = 1.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Polanicka Napój gazowany smak cytryny 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Sotwinka_Mineralna_woda_lecznicza_z_Krynicy_Zdroju_5_l'];
$product->link_rewrite = [$default_lang => 'Sotwinka_'];
$product->price = 19.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Słotwinka Mineralna woda lecznicza z Krynicy Zdroju 5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Staropolanka_Plus_Niegazowana_naturalna_woda_mineralna_sredniozmineralizowana_0,7_l'];
$product->link_rewrite = [$default_lang => 'Staropola'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Staropolanka Plus Niegazowana naturalna woda mineralna średniozmineralizowana 0,7 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Polanicka_Napoj_gazowany_smak_truskawki_1,5_l'];
$product->link_rewrite = [$default_lang => 'Tesco_Pol'];
$product->price = 1.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Polanicka Napój gazowany smak truskawki 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Aquila_Woda_niegazowana_dla_niemowlat_0,5_l'];
$product->link_rewrite = [$default_lang => 'Aquila_Wo'];
$product->price = 1.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Aquila Woda niegazowana dla niemowląt 0,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Staropolanka_2000_Naturalna_woda_mineralna_wysokozmineralizowana_gazowana_500_ml'];
$product->link_rewrite = [$default_lang => 'Staropola'];
$product->price = 1.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Staropolanka 2000 Naturalna woda mineralna wysokozmineralizowana gazowana 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Wielka_Pieniawa_Woda_5_l'];
$product->link_rewrite = [$default_lang => 'Wielka_Pi'];
$product->price = 14.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Wielka Pieniawa Woda 5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zywiec_Zdroj_gaz_z_sokiem_z_cytryn_Napoj_gazowany_500_ml'];
$product->link_rewrite = [$default_lang => 'Zywiec_Zd'];
$product->price = 2.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Żywiec Zdrój gaz z sokiem z cytryn Napój gazowany 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Kryniczanka_Naturalna_woda_mineralna_wysokonasycona_CO2_0,5_l'];
$product->link_rewrite = [$default_lang => 'Kryniczan'];
$product->price = 1.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Kryniczanka Naturalna woda mineralna wysokonasycona CO2 0,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zywiec_Zdroj_Gaz_z_sokiem_z_pomaranczy_Napoj_gazowany_500_ml'];
$product->link_rewrite = [$default_lang => 'Zywiec_Zd'];
$product->price = 2.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Żywiec Zdrój Gaz z sokiem z pomarańczy Napój gazowany 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Pera_Mazowsza_Woda_zrodlana_lekko_gazowana_1,5_l'];
$product->link_rewrite = [$default_lang => 'Tesco_Per'];
$product->price = 1.43;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Perła Mazowsza Woda źródlana lekko gazowana 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Polanicka_Napoj_gazowany_smak_truskawki_500_ml'];
$product->link_rewrite = [$default_lang => 'Tesco_Pol'];
$product->price = 1.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Polanicka Napój gazowany smak truskawki 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Pera_Mazowsza_Woda_zrodlana_niegazowana_500_ml'];
$product->link_rewrite = [$default_lang => 'Tesco_Per'];
$product->price = 1.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Perła Mazowsza Woda źródlana niegazowana 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Pera_Mazowsza_Woda_zrodlana_lekko_gazowana_500_ml'];
$product->link_rewrite = [$default_lang => 'Tesco_Per'];
$product->price = 1.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Perła Mazowsza Woda źródlana lekko gazowana 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Polanicka_Napoj_gazowany_o_smaku_cytrynowym_500_ml'];
$product->link_rewrite = [$default_lang => 'Tesco_Pol'];
$product->price = 1.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Polanicka Napój gazowany o smaku cytrynowym 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Staropolanka_Naturalna_woda_mineralna_sredniozmineralizowana_lekko_gazowana_500_ml'];
$product->link_rewrite = [$default_lang => 'Staropola'];
$product->price = 1.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Staropolanka Naturalna woda mineralna średniozmineralizowana lekko gazowana 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Uzdrowisko_Zegiestow_Zdroj_Zofia_Naturalna_woda_lecznicza_5_l'];
$product->link_rewrite = [$default_lang => 'Uzdrowisk'];
$product->price = 19.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Uzdrowisko Żegiestów Zdrój Zofia Naturalna woda lecznicza 5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Staropolanka_Naturalna_woda_mineralna_sredniozmineralizowana_gazowana_500_ml'];
$product->link_rewrite = [$default_lang => 'Staropola'];
$product->price = 1.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Staropolanka Naturalna woda mineralna średniozmineralizowana gazowana 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Pera_Mazowsza_Woda_zrodlana_gazowana_1,5_l'];
$product->link_rewrite = [$default_lang => 'Tesco_Per'];
$product->price = 1.43;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Perła Mazowsza Woda źródlana gazowana 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Vitamin_Water_Multi_Wit_Napoj_niegazowany_o_smaku_owocowym_500_ml'];
$product->link_rewrite = [$default_lang => 'Vitamin_W'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Vitamin Water Multi Wit Napój niegazowany o smaku owocowym 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Muszyna_Cechini_Naturalna_woda_mineralna_wysokozmineralizowana_czesciowo_odgazowana_0,7_l'];
$product->link_rewrite = [$default_lang => 'Muszyna_C'];
$product->price = 2.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Muszyna Cechini Naturalna woda mineralna wysokozmineralizowana częściowo odgazowana 0,7 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Muszyna_Cechini_Naturalna_woda_mineralna_wysokozmineralizowana_czesciowo_odgazowana_6_x_0,3_l'];
$product->link_rewrite = [$default_lang => 'Muszyna_C'];
$product->price = 10.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Muszyna Cechini Naturalna woda mineralna wysokozmineralizowana częściowo odgazowana 6 x 0,3 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Pera_Mazowsza_Woda_zrodlana_gazowana_500_ml'];
$product->link_rewrite = [$default_lang => 'Tesco_Per'];
$product->price = 1.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Perła Mazowsza Woda źródlana gazowana 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Ustronianka_Biaa_Aqua_Junior_Naturalna_woda_mineralna_niegazowana_0,33_l'];
$product->link_rewrite = [$default_lang => 'Ustronian'];
$product->price = 1.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Ustronianka Biała Aqua Junior Naturalna woda mineralna niegazowana 0,33 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Kubus_Waterrr_Sport_o_smaku_Citrus_Mix_Napoj_500_ml'];
$product->link_rewrite = [$default_lang => 'Kubus_Wat'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Kubuś Waterrr Sport o smaku Citrus Mix Napój 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Kubus_Waterrr_Woda_zrodlana_niegazowana_500_ml'];
$product->link_rewrite = [$default_lang => 'Kubus_Wat'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Kubuś Waterrr Woda źródlana niegazowana 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Primavera_Woda_zrodlana_niegazowana_1,5_l'];
$product->link_rewrite = [$default_lang => 'Primavera'];
$product->price = 1.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Primavera Woda źródlana niegazowana 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zywiec_Zdroj_ze_smakiem_jabka_Napoj_niegazowany_500_ml'];
$product->link_rewrite = [$default_lang => 'Zywiec_Zd'];
$product->price = 1.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Żywiec Zdrój ze smakiem jabłka Napój niegazowany 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Naeczow_Zdroj_Naturalna_woda_mineralna_niegazowana_1,5_l'];
$product->link_rewrite = [$default_lang => 'Naeczow_Z'];
$product->price = 1.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Nałęczów Zdrój Naturalna woda mineralna niegazowana 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Dobrowianka_Naturalna_woda_mineralna_lekko_gazowana_1,5_l'];
$product->link_rewrite = [$default_lang => 'Dobrowian'];
$product->price = 1.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Dobrowianka Naturalna woda mineralna lekko gazowana 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Muszyna_Cechini_Naturalna_woda_mineralna_wysokozmineralizowana_niskonasycona_2_l'];
$product->link_rewrite = [$default_lang => 'Muszyna_C'];
$product->price = 1.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Muszyna Cechini Naturalna woda mineralna wysokozmineralizowana niskonasycona 2 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Muszyna_Sport_Naturalna_woda_mineralna_wysokozmineralizowana_750_ml'];
$product->link_rewrite = [$default_lang => 'Tesco_Mus'];
$product->price = 1.43;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Muszyna Sport Naturalna woda mineralna wysokozmineralizowana 750 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mattoni_Musujaca_cytryna_na_wodzie_mineralnej_Napoj_gazowany_1,5_l'];
$product->link_rewrite = [$default_lang => 'Mattoni_M'];
$product->price = 2.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mattoni Musująca cytryna na wodzie mineralnej Napój gazowany 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Staropolanka_Naturalna_woda_mineralna_sredniozmineralizowana_gazowana_1,5_l'];
$product->link_rewrite = [$default_lang => 'Staropola'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Staropolanka Naturalna woda mineralna średniozmineralizowana gazowana 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Muszyna_Naturalna_woda_mineralna_wysokozmineralizowana_lekko_gazowana_6_x_330_ml'];
$product->link_rewrite = [$default_lang => 'Tesco_Mus'];
$product->price = 3.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Muszyna Naturalna woda mineralna wysokozmineralizowana lekko gazowana 6 x 330 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Cisowianka_Naturalna_woda_mineralna_niegazowana_niskosodowa_330_ml'];
$product->link_rewrite = [$default_lang => 'Cisowiank'];
$product->price = 1.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Cisowianka Naturalna woda mineralna niegazowana niskosodowa 330 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Primavera_Woda_zrodlana_gazowana_1,5_l'];
$product->link_rewrite = [$default_lang => 'Primavera'];
$product->price = 1.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Primavera Woda źródlana gazowana 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Borjomi_Naturalna_woda_mineralna_0,5_l'];
$product->link_rewrite = [$default_lang => 'Borjomi_N'];
$product->price = 5.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Borjomi Naturalna woda mineralna 0,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Staropolanka_Naturalna_woda_mineralna_sredniozmineralizowana_lekko_gazowana_1,5_l'];
$product->link_rewrite = [$default_lang => 'Staropola'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Staropolanka Naturalna woda mineralna średniozmineralizowana lekko gazowana 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Primavera_Woda_zrodlana_niegazowana_1_l'];
$product->link_rewrite = [$default_lang => 'Primavera'];
$product->price = 1.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Primavera Woda źródlana niegazowana 1 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mattoni_Musujace_jabko_na_wodzie_mineralnej_Napoj_gazowany_1,5_l'];
$product->link_rewrite = [$default_lang => 'Mattoni_M'];
$product->price = 2.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mattoni Musujące jabłko na wodzie mineralnej Napój gazowany 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Kropla_Delice_Naturalna_woda_mineralna_gazowana_1_l'];
$product->link_rewrite = [$default_lang => 'Kropla_De'];
$product->price = 2.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Kropla Delice Naturalna woda mineralna gazowana 1 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Borjomi_Naturalna_woda_mineralna_1_l'];
$product->link_rewrite = [$default_lang => 'Borjomi_N'];
$product->price = 5.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Borjomi Naturalna woda mineralna 1 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Muszyna_Naturalna_woda_mineralna_wysokozmineralizowana_lekko_gazowana_1,5_l'];
$product->link_rewrite = [$default_lang => 'Tesco_Mus'];
$product->price = 1.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Muszyna Naturalna woda mineralna wysokozmineralizowana lekko gazowana 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Staropolanka_Naturalna_woda_mineralna_sredniozmineralizowana_niegazowana_1,5_l'];
$product->link_rewrite = [$default_lang => 'Staropola'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Staropolanka Naturalna woda mineralna średniozmineralizowana niegazowana 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Kubus_Waterrr_Sport_o_smaku_jagoda_Napoj_500_ml'];
$product->link_rewrite = [$default_lang => 'Kubus_Wat'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Kubuś Waterrr Sport o smaku jagoda Napój 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Kubus_Waterrr_Woda_niegazowana_1,5_l'];
$product->link_rewrite = [$default_lang => 'Kubus_Wat'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Kubuś Waterrr Woda niegazowana 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mattoni_Musujaca_malina_na_wodzie_mineralnej_Napoj_gazowany_1,5_l'];
$product->link_rewrite = [$default_lang => 'Mattoni_M'];
$product->price = 2.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mattoni Musująca malina na wodzie mineralnej Napój gazowany 1,5 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Muszyna_Naturalna_woda_mineralna_wysokozmineralizowana_gazowana_500_ml'];
$product->link_rewrite = [$default_lang => 'Tesco_Mus'];
$product->price = 1.16;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Muszyna Naturalna woda mineralna wysokozmineralizowana gazowana 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Kubus_Waterrr_Sport_o_smaku_malina_granat_Napoj_500_ml'];
$product->link_rewrite = [$default_lang => 'Kubus_Wat'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Kubuś Waterrr Sport o smaku malina granat Napój 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Jurajska_Junior_niegazowana_Naturalna_woda_mineralna_330_ml'];
$product->link_rewrite = [$default_lang => 'Jurajska_'];
$product->price = 1.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Jurajska Junior niegazowana Naturalna woda mineralna 330 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Muszyna_Naturalna_woda_mineralna_wysokozmineralizowana_lekko_gazowana_500_ml'];
$product->link_rewrite = [$default_lang => 'Tesco_Mus'];
$product->price = 1.16;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Muszyna Naturalna woda mineralna wysokozmineralizowana lekko gazowana 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$subcategory = new Category();
        $subcategory->name = [$default_lang => 'napoje_gazowane'];
$subcategory->id_parent=$category->id;
$subcategory->link_rewrite=[$default_lang => 'napoje_gazowane'];
$subcategory->add();
        $category = new Category();
        $category->name = [$default_lang => 'Mrozonki'];
$category->id_parent=Configuration::get('PS_HOME_CATEGORY');
$category->link_rewrite=[$default_lang => 'Mrozonki'];
$category->add();
        $subcategory = new Category();
        $subcategory->name = [$default_lang => 'warzywa_i_owoce'];
$subcategory->id_parent=$category->id;
$subcategory->link_rewrite=[$default_lang => 'warzywa_i_owoce'];
$subcategory->add();
        $subcategory = new Category();
        $subcategory->name = [$default_lang => 'dania_mrozone'];
$subcategory->id_parent=$category->id;
$subcategory->link_rewrite=[$default_lang => 'dania_mrozone'];
$subcategory->add();
        $subcategory = new Category();
        $subcategory->name = [$default_lang => 'pizza_i_frytki'];
$subcategory->id_parent=$category->id;
$subcategory->link_rewrite=[$default_lang => 'pizza_i_frytki'];
$subcategory->add();
        $subcategory = new Category();
        $subcategory->name = [$default_lang => 'lody'];
$subcategory->id_parent=$category->id;
$subcategory->link_rewrite=[$default_lang => 'lody'];
$subcategory->add();
        $product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Kaktus_Lody_wodne_o_smaku_cytrynowym_i_truskawkowe_405_ml_(9_sztuk)'];
$product->link_rewrite = [$default_lang => 'Kaktus_Lo'];
$product->price = 9.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Kaktus Lody wodne o smaku cytrynowym i truskawkowe 405 ml (9 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Grycan_Lody_czekoladowe_1100_ml'];
$product->link_rewrite = [$default_lang => 'Grycan_Lo'];
$product->price = 15.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Grycan Lody czekoladowe 1100 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Grycan_Lody_czekoladowe_500_ml'];
$product->link_rewrite = [$default_lang => 'Grycan_Lo'];
$product->price = 8.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Grycan Lody czekoladowe 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Grycan_Lody_waniliowe_1100_ml'];
$product->link_rewrite = [$default_lang => 'Grycan_Lo'];
$product->price = 15.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Grycan Lody waniliowe 1100 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bracia_Koral_Lody_jak_dawniej_Smietankowe_z_ciasteczkami_900_ml'];
$product->link_rewrite = [$default_lang => 'Bracia_Ko'];
$product->price = 14.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bracia Koral Lody jak dawniej Śmietankowe z ciasteczkami 900 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Koral_Kostka_sniezna_Lody_smietankowe_w_waflu_1080_ml_(6_sztuk)'];
$product->link_rewrite = [$default_lang => 'Koral_Kos'];
$product->price = 9.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Koral Kostka śnieżna Lody śmietankowe w waflu 1080 ml (6 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Kaktus_Lody_wodne_o_smaku_cytrynowym_i_truskawkowe_45_ml'];
$product->link_rewrite = [$default_lang => 'Kaktus_Lo'];
$product->price = 1.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Kaktus Lody wodne o smaku cytrynowym i truskawkowe 45 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Grycan_Lody_waniliowe_500_ml'];
$product->link_rewrite = [$default_lang => 'Grycan_Lo'];
$product->price = 8.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Grycan Lody waniliowe 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Magnum_Almond_Lody_120_ml'];
$product->link_rewrite = [$default_lang => 'Magnum_Al'];
$product->price = 4.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Magnum Almond Lody 120 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Haagen-Dazs_Lody_o_smaku_waniliowym_z_sosem_karmelowym_i_karmelizowanymi_orzechami_pekan_500_ml'];
$product->link_rewrite = [$default_lang => 'Haagen-Da'];
$product->price = 23.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Häagen-Dazs Lody o smaku waniliowym z sosem karmelowym i karmelizowanymi orzechami pekan 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Grycan_Lody_bakaliowe_1100_ml'];
$product->link_rewrite = [$default_lang => 'Grycan_Lo'];
$product->price = 15.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Grycan Lody bakaliowe 1100 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bracia_Koral_Lody_jak_dawniej_Smietankowe_z_wisniami_i_sosem_wisniowym_900_ml'];
$product->link_rewrite = [$default_lang => 'Bracia_Ko'];
$product->price = 14.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bracia Koral Lody jak dawniej Śmietankowe z wiśniami i sosem wiśniowym 900 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Grycan_Lody_smietankowe_1100_ml'];
$product->link_rewrite = [$default_lang => 'Grycan_Lo'];
$product->price = 15.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Grycan Lody śmietankowe 1100 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Magnum_Mini_Classic_Almond_White_Lody_360_ml_(6_sztuk)'];
$product->link_rewrite = [$default_lang => 'Magnum_Mi'];
$product->price = 15.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Magnum Mini Classic Almond White Lody 360 ml (6 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Grycan_Sorbet_z_mango_500_ml'];
$product->link_rewrite = [$default_lang => 'Grycan_So'];
$product->price = 9.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Grycan Sorbet z mango 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Grycan_Lody_bakaliowe_500_ml'];
$product->link_rewrite = [$default_lang => 'Grycan_Lo'];
$product->price = 8.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Grycan Lody bakaliowe 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Grycan_Lody_pistacjowe_500_ml'];
$product->link_rewrite = [$default_lang => 'Grycan_Lo'];
$product->price = 8.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Grycan Lody pistacjowe 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Sorbet_malinowy_500_ml'];
$product->link_rewrite = [$default_lang => 'Tesco_Sor'];
$product->price = 5.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Sorbet malinowy 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Grycan_Sorbet_z_malin_500_ml'];
$product->link_rewrite = [$default_lang => 'Grycan_So'];
$product->price = 9.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Grycan Sorbet z malin 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Haagen-Dazs_Lody_o_smaku_waniliowym_z_polewa_z_orzechow_makadamia_500_ml'];
$product->link_rewrite = [$default_lang => 'Haagen-Da'];
$product->price = 23.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Häagen-Dazs Lody o smaku waniliowym z polewą z orzechów makadamia 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Rozek_o_smaku_waniliowym_120_ml'];
$product->link_rewrite = [$default_lang => 'Tesco_Roz'];
$product->price = 0.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Rożek o smaku waniliowym 120 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Lody_o_smaku_waniliowym_oblane_mleczna_czekolada_z_kawakami_prazonych_migdaow_120_ml'];
$product->link_rewrite = [$default_lang => 'Tesco_Lod'];
$product->price = 1.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Lody o smaku waniliowym oblane mleczną czekoladą z kawałkami prażonych migdałów 120 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bracia_Koral_Lody_jak_dawniej_Bakaliowe_900_ml'];
$product->link_rewrite = [$default_lang => 'Bracia_Ko'];
$product->price = 14.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bracia Koral Lody jak dawniej Bakaliowe 900 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Snickers_Lody_orzeszki_ziemne_i_miekki_karmel_w_polewie_kakaowej_318_ml_(6_sztuk)'];
$product->link_rewrite = [$default_lang => 'Snickers_'];
$product->price = 15.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Snickers Lody orzeszki ziemne i miękki karmel w polewie kakaowej 318 ml (6 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Koral_Kolorowe_Lato_Lody_bakaliowe_1,2_l'];
$product->link_rewrite = [$default_lang => 'Koral_Kol'];
$product->price = 6.50;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Koral Kolorowe Lato Lody bakaliowe 1,2 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Magnum_Mini_White_White_Almond_Lody_360_ml_(6_sztuk)'];
$product->link_rewrite = [$default_lang => 'Magnum_Mi'];
$product->price = 15.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Magnum Mini White White Almond Lody 360 ml (6 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Grycan_Lody_owoce_lesne_1100_ml'];
$product->link_rewrite = [$default_lang => 'Grycan_Lo'];
$product->price = 15.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Grycan Lody owoce leśne 1100 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Lody_o_smaku_waniliowym_czekoladowym_i_truskawkowym_w_waflu_180_ml'];
$product->link_rewrite = [$default_lang => 'Tesco_Lod'];
$product->price = 1.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Lody o smaku waniliowym czekoladowym i truskawkowym w waflu 180 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Value_Lody_o_smaku_waniliowym_2_l'];
$product->link_rewrite = [$default_lang => 'Tesco_Val'];
$product->price = 8.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Value Lody o smaku waniliowym 2 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Haagen-Dazs_Lody_sernikowe_z_sosem_truskawkowym_i_ciasteczkami_500_ml'];
$product->link_rewrite = [$default_lang => 'Haagen-Da'];
$product->price = 23.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Häagen-Dazs Lody sernikowe z sosem truskawkowym i ciasteczkami 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Grycan_Lody_tiramisu_900_ml'];
$product->link_rewrite = [$default_lang => 'Grycan_Lo'];
$product->price = 15.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Grycan Lody tiramisu 900 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Grycan_Lody_o_smaku_mieta_z_czekolada_1100_ml'];
$product->link_rewrite = [$default_lang => 'Grycan_Lo'];
$product->price = 15.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Grycan Lody o smaku mięta z czekoladą 1100 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Mini_Cone_Mix_Lody_250_ml_(10_sztuk)'];
$product->link_rewrite = [$default_lang => 'Tesco_Min'];
$product->price = 7.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Mini Cone Mix Lody 250 ml (10 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Grycan_Lody_Caffe_Latte_1100_ml'];
$product->link_rewrite = [$default_lang => 'Grycan_Lo'];
$product->price = 15.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Grycan Lody Caffè Latte 1100 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Koral_Lody_koktajlowe_o_smaku_biszkoptowo-kawowo-mascarpone_400_ml'];
$product->link_rewrite = [$default_lang => 'Koral_Lod'];
$product->price = 4.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Koral Lody koktajlowe o smaku biszkoptowo-kawowo-mascarpone 400 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Oreo_Lody_o_smaku_smietankowym_z_ciastkami_kakaowymi_110_ml'];
$product->link_rewrite = [$default_lang => 'Oreo_Lody'];
$product->price = 4.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Oreo Lody o smaku śmietankowym z ciastkami kakaowymi 110 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Magnum_Classic_Lody_120_ml'];
$product->link_rewrite = [$default_lang => 'Magnum_Cl'];
$product->price = 4.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Magnum Classic Lody 120 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bracia_Koral_Lody_jak_dawniej_Caffe_Latte_900_ml'];
$product->link_rewrite = [$default_lang => 'Bracia_Ko'];
$product->price = 14.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bracia Koral Lody jak dawniej Caffe Latte 900 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Koral_Super_Mix_Lody_680_ml'];
$product->link_rewrite = [$default_lang => 'Koral_Sup'];
$product->price = 8.00;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Koral Super Mix Lody 680 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Koral_Lody_koktajlowe_krowka-kukuka_400_ml'];
$product->link_rewrite = [$default_lang => 'Koral_Lod'];
$product->price = 4.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Koral Lody koktajlowe krówka-kukułka 400 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bracia_Koral_Lody_jak_dawniej_Smietankowe_900_ml'];
$product->link_rewrite = [$default_lang => 'Bracia_Ko'];
$product->price = 14.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bracia Koral Lody jak dawniej Śmietankowe 900 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Baroque_Lody_o_smaku_waniliowym_adwokatowym_i_czekoladowym_z_sosem_120_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Bar'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Baroque Lody o smaku waniliowym adwokatowym i czekoladowym z sosem 120 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Grycan_Lody_malaga_1100_ml'];
$product->link_rewrite = [$default_lang => 'Grycan_Lo'];
$product->price = 15.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Grycan Lody malaga 1100 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Grycan_Lody_stracciatella_1100_ml'];
$product->link_rewrite = [$default_lang => 'Grycan_Lo'];
$product->price = 15.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Grycan Lody stracciatella 1100 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Grycan_Lody_truskawkowe_125_ml'];
$product->link_rewrite = [$default_lang => 'Grycan_Lo'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Grycan Lody truskawkowe 125 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Kit_Kat_Cocoa_Lody_kakaowe_z_sosem_o_smaku_czekoladowym_110_ml'];
$product->link_rewrite = [$default_lang => 'Kit_Kat_C'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Kit Kat Cocoa Lody kakaowe z sosem o smaku czekoladowym 110 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Kaktus_Lody_wodne_o_smaku_cytrynowym_i_jabkowym_450_ml_(10_sztuk)'];
$product->link_rewrite = [$default_lang => 'Kaktus_Lo'];
$product->price = 11.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Kaktus Lody wodne o smaku cytrynowym i jabłkowym 450 ml (10 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Mango_Kremowe_lody_na_smietance_500_ml'];
$product->link_rewrite = [$default_lang => 'Tesco_Man'];
$product->price = 6.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Mango Kremowe lody na śmietance 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Algida_Max_Twister_Green_Lody_80_ml'];
$product->link_rewrite = [$default_lang => 'Algida_Ma'];
$product->price = 1.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Algida Max Twister Green Lody 80 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Rozek_o_smaku_waniliowym_6_x_120_ml'];
$product->link_rewrite = [$default_lang => 'Tesco_Roz'];
$product->price = 6.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Rożek o smaku waniliowym 6 x 120 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zielona_Budka_Sorbet_mango-marakuja_500_ml'];
$product->link_rewrite = [$default_lang => 'Zielona_B'];
$product->price = 8.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zielona Budka Sorbet mango-marakuja 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Lody_o_smaku_tiramisu_z_sosem_kawowym_i_biszkoptami_90_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Lod'];
$product->price = 1.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Lody o smaku tiramisu z sosem kawowym i biszkoptami 90 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Koral_Kolorowe_Lato_Lody_smietankowo-waniliowe_1,2_l'];
$product->link_rewrite = [$default_lang => 'Koral_Kol'];
$product->price = 6.50;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Koral Kolorowe Lato Lody śmietankowo-waniliowe 1,2 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Value_Lody_o_smaku_waniliowym_czekoladowym_i_truskawkowym_2_l'];
$product->link_rewrite = [$default_lang => 'Tesco_Val'];
$product->price = 8.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Value Lody o smaku waniliowym czekoladowym i truskawkowym 2 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Manhattan_Classic_Lody_waniliowo-czekoladowe_1,4_l'];
$product->link_rewrite = [$default_lang => 'Manhattan'];
$product->price = 14.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Manhattan Classic Lody waniliowo-czekoladowe 1,4 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Koral_Top_Milker_Lody_smietankowo-waniliowe_132_ml'];
$product->link_rewrite = [$default_lang => 'Koral_Top'];
$product->price = 1.00;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Koral Top Milker Lody śmietankowo-waniliowe 132 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Koral_Kolorowe_Lato_Lody_smietankowo-waniliowe_z_sorbetem_limonkowym_1,2_l'];
$product->link_rewrite = [$default_lang => 'Koral_Kol'];
$product->price = 6.50;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Koral Kolorowe Lato Lody śmietankowo-waniliowe z sorbetem limonkowym 1,2 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Koral_Kolorowe_Lato_Lody_smietankowo-truskawkowe_1,2_l'];
$product->link_rewrite = [$default_lang => 'Koral_Kol'];
$product->price = 6.50;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Koral Kolorowe Lato Lody śmietankowo-truskawkowe 1,2 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Grycan_Sorbet_z_truskawek_500_ml'];
$product->link_rewrite = [$default_lang => 'Grycan_So'];
$product->price = 9.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Grycan Sorbet z truskawek 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zielona_Budka_Sorbet_gruszkowy_500_ml'];
$product->link_rewrite = [$default_lang => 'Zielona_B'];
$product->price = 8.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zielona Budka Sorbet gruszkowy 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Pistacja_Kremowe_lody_na_smietance_500_ml'];
$product->link_rewrite = [$default_lang => 'Tesco_Pis'];
$product->price = 6.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Pistacja Kremowe lody na śmietance 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Lody_o_smaku_waniliowym_w_polewie_kakaowej_560_g_(16_sztuk)'];
$product->link_rewrite = [$default_lang => 'Tesco_Lod'];
$product->price = 9.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Lody o smaku waniliowym w polewie kakaowej 560 g (16 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Kaktus_duuuga_polewka_Lody_wodne_o_smaku_pomaranczowo-cytrynowym_40_ml'];
$product->link_rewrite = [$default_lang => 'Kaktus_du'];
$product->price = 1.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Kaktus dłuuuga polewka Lody wodne o smaku pomarańczowo-cytrynowym 40 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Grycan_Lody_pistacjowe_1100_ml'];
$product->link_rewrite = [$default_lang => 'Grycan_Lo'];
$product->price = 15.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Grycan Lody pistacjowe 1100 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Finest_Lizaki_z_mrozonego_soku_pomaranczowego_292_ml_(4_sztuki)'];
$product->link_rewrite = [$default_lang => 'Tesco_Fin'];
$product->price = 11.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Finest Lizaki z mrożonego soku pomarańczowego 292 ml (4 sztuki).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Grycan_Lody_waniliowe_125_ml'];
$product->link_rewrite = [$default_lang => 'Grycan_Lo'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Grycan Lody waniliowe 125 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Snickers_Lody_orzeszki_ziemne_i_miekki_karmel_w_polewie_kakaowej_53_ml'];
$product->link_rewrite = [$default_lang => 'Snickers_'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Snickers Lody orzeszki ziemne i miękki karmel w polewie kakaowej 53 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Milka_Mini_Lody_waniliowe_z_kawakami_czekolady_mlecznej_w_polewie_200_ml_(8_sztuk)'];
$product->link_rewrite = [$default_lang => 'Milka_Min'];
$product->price = 11.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Milka Mini Lody waniliowe z kawałkami czekolady mlecznej w polewie 200 ml (8 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Algida_Twister_Rox_Lody_80_ml'];
$product->link_rewrite = [$default_lang => 'Algida_Tw'];
$product->price = 1.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Algida Twister Rox Lody 80 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bracia_Koral_Lody_jak_dawniej_Chawowe_900_ml'];
$product->link_rewrite = [$default_lang => 'Bracia_Ko'];
$product->price = 14.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bracia Koral Lody jak dawniej Chałwowe 900 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Grycan_Lody_kokosowe_500_ml'];
$product->link_rewrite = [$default_lang => 'Grycan_Lo'];
$product->price = 10.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Grycan Lody kokosowe 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Oreo_Lody_smietankowe_z_ciastkami_kakaowymi_z_nadzieniem_o_smaku_waniliowym_480_ml'];
$product->link_rewrite = [$default_lang => 'Oreo_Lody'];
$product->price = 16.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Oreo Lody śmietankowe z ciastkami kakaowymi z nadzieniem o smaku waniliowym 480 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Finest_Lody_smietankowe_o_smaku_creme_brulee_z_sosem_karmelowym_i_kawakami_cukru_460_ml'];
$product->link_rewrite = [$default_lang => 'Tesco_Fin'];
$product->price = 14.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Finest Lody śmietankowe o smaku crème brûlée z sosem karmelowym i kawałkami cukru 460 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Koral_Kolorowe_Lato_Lody_smietankowo-truskawkowo-czekoladowe_1,2_l'];
$product->link_rewrite = [$default_lang => 'Koral_Kol'];
$product->price = 6.50;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Koral Kolorowe Lato Lody śmietankowo-truskawkowo-czekoladowe 1,2 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Nesquik_Lody_kakaowe_i_lody_o_smaku_waniliowym_344_ml_(8_sztuk)'];
$product->link_rewrite = [$default_lang => 'Nesquik_L'];
$product->price = 9.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Nesquik Lody kakaowe i lody o smaku waniliowym 344 ml (8 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Magnum_White_Lody_120_ml'];
$product->link_rewrite = [$default_lang => 'Magnum_Wh'];
$product->price = 4.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Magnum White Lody 120 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Grycan_Lody_truskawkowe_1100_ml'];
$product->link_rewrite = [$default_lang => 'Grycan_Lo'];
$product->price = 15.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Grycan Lody truskawkowe 1100 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Mieta_z_czekolada_Kremowe_lody_na_smietance_500_ml'];
$product->link_rewrite = [$default_lang => 'Tesco_Mie'];
$product->price = 6.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Mięta z czekoladą Kremowe lody na śmietance 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Koral_Top_Milker_Lody_smietankowo-waniliowe_w_mlecznej_polewie_z_dodatkiem_czekolady_132_ml'];
$product->link_rewrite = [$default_lang => 'Koral_Top'];
$product->price = 1.50;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Koral Top Milker Lody śmietankowo-waniliowe w mlecznej polewie z dodatkiem czekolady 132 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Lody_o_smaku_czekoladowym_w_rozku_waflowym_65_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Lod'];
$product->price = 0.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Lody o smaku czekoladowym w rożku waflowym 65 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Grycan_Lody_truskawkowe_500_ml'];
$product->link_rewrite = [$default_lang => 'Grycan_Lo'];
$product->price = 8.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Grycan Lody truskawkowe 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Magnum_Double_Peanut_Butter_Lody_88_ml'];
$product->link_rewrite = [$default_lang => 'Magnum_Do'];
$product->price = 4.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Magnum Double Peanut Butter Lody 88 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Manhattan_Classic_Lody_z_serkiem_twarogowym_i_lody_pomaranczowe_1,4_l'];
$product->link_rewrite = [$default_lang => 'Manhattan'];
$product->price = 14.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Manhattan Classic Lody z serkiem twarogowym i lody pomarańczowe 1,4 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Manhattan_Classic_Lody_czekoladowo-karmelowe_z_siekanymi_prazonymi_orzechami_ziemnymi_1,4_l'];
$product->link_rewrite = [$default_lang => 'Manhattan'];
$product->price = 14.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Manhattan Classic Lody czekoladowo-karmelowe z siekanymi prażonymi orzechami ziemnymi 1,4 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Grycan_Lody_czekoladowe_125_ml'];
$product->link_rewrite = [$default_lang => 'Grycan_Lo'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Grycan Lody czekoladowe 125 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Haagen-Dazs_Honey_Walnut_&_Cream_Lody_500_ml'];
$product->link_rewrite = [$default_lang => 'Haagen-Da'];
$product->price = 23.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Häagen-Dazs Honey Walnut &amp; Cream Lody 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Twix_Lody_karmel_i_ciasteczko_w_polewie_kakaowej_50_ml'];
$product->link_rewrite = [$default_lang => 'Twix_Lody'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Twix Lody karmel i ciasteczko w polewie kakaowej 50 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Caffe_Latte_Kremowe_lody_na_smietance_500_ml'];
$product->link_rewrite = [$default_lang => 'Tesco_Caf'];
$product->price = 6.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Caffe Latte Kremowe lody na śmietance 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Finest_Lody_o_smaku_waniliowym_z_sosem_karmelowym_i_z_ciasteczkami_o_smaku_czekoladowym_460_ml'];
$product->link_rewrite = [$default_lang => 'Tesco_Fin'];
$product->price = 14.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Finest Lody o smaku waniliowym z sosem karmelowym i z ciasteczkami o smaku czekoladowym 460 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Magnum_Double_Chocolate_Lody_88_ml'];
$product->link_rewrite = [$default_lang => 'Magnum_Do'];
$product->price = 4.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Magnum Double Chocolate Lody 88 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Fruits_N`Roll_Lody_wodne_o_smaku_limonki_i_truskawki_oraz_lody_o_smaku_ananasa__7_x_75_ml'];
$product->link_rewrite = [$default_lang => 'Tesco_Fru'];
$product->price = 9.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Fruits N`Roll Lody wodne o smaku limonki i truskawki oraz lody o smaku ananasa  7 x 75 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Cornetto_Classico_Vanilla_Lody_125_ml'];
$product->link_rewrite = [$default_lang => 'Cornetto_'];
$product->price = 3.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Cornetto Classico Vanilla Lody 125 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Magnum_Double_Caramel_Lody_88_ml'];
$product->link_rewrite = [$default_lang => 'Magnum_Do'];
$product->price = 4.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Magnum Double Caramel Lody 88 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Manhattan_Ice_Dream_Lody_smietankowo-jagodowe_1400_ml'];
$product->link_rewrite = [$default_lang => 'Manhattan'];
$product->price = 14.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Manhattan Ice Dream Lody śmietankowo-jagodowe 1400 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zielona_Budka_Sorbet_malinowy_500_ml'];
$product->link_rewrite = [$default_lang => 'Zielona_B'];
$product->price = 8.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zielona Budka Sorbet malinowy 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Magnum_Strawberry_&_White_Lody_110_ml'];
$product->link_rewrite = [$default_lang => 'Magnum_St'];
$product->price = 4.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Magnum Strawberry &amp; White Lody 110 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Lody_o_smaku_waniliowym_w_waflu_180_ml'];
$product->link_rewrite = [$default_lang => 'Tesco_Lod'];
$product->price = 1.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Lody o smaku waniliowym w waflu 180 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Value_Lody_o_smaku_czekoladowym_2_l'];
$product->link_rewrite = [$default_lang => 'Tesco_Val'];
$product->price = 8.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Value Lody o smaku czekoladowym 2 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Finest_Lody_o_smaku_kawowym_z_sosem_karmelowym_i_kawakami_czekolady_460_ml'];
$product->link_rewrite = [$default_lang => 'Tesco_Fin'];
$product->price = 14.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Finest Lody o smaku kawowym z sosem karmelowym i kawałkami czekolady 460 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Algida_Big_Milk_Yogurt_Strawberry_Lody_1000_ml'];
$product->link_rewrite = [$default_lang => 'Algida_Bi'];
$product->price = 9.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Algida Big Milk Yogurt Strawberry Lody 1000 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Lody_waniliowe_z_sosem_mango_i_posypka_z_biaej_czekolady_90_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Lod'];
$product->price = 1.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Lody waniliowe z sosem mango i posypką z białej czekolady 90 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Oreo_Lody_smietankowe_z_ciastkami_kakaowymi_185_ml'];
$product->link_rewrite = [$default_lang => 'Oreo_Lody'];
$product->price = 4.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Oreo Lody śmietankowe z ciastkami kakaowymi 185 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Lion_Lody_karmelowe_i_o_smaku_toffi_i_ciasteczek_110_ml'];
$product->link_rewrite = [$default_lang => 'Lion_Lody'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Lion Lody karmelowe i o smaku toffi i ciasteczek 110 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Milka_Cashew_&_Caramel_Lody_czekoladowe_i_lody_o_smaku_waniliowym_z_sosem_karmelowym_480_ml'];
$product->link_rewrite = [$default_lang => 'Milka_Cas'];
$product->price = 16.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Milka Cashew &amp; Caramel Lody czekoladowe i lody o smaku waniliowym z sosem karmelowym 480 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bounty_Lody_kokosowe_w_polewie_kakaowej_300,6_ml_(6_sztuk)'];
$product->link_rewrite = [$default_lang => 'Bounty_Lo'];
$product->price = 15.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bounty Lody kokosowe w polewie kakaowej 300,6 ml (6 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Free_From_Lody_o_smaku_waniliowym_z_polewa_o_smaku_czekoladowym_300_ml_(3_sztuki)'];
$product->link_rewrite = [$default_lang => 'Tesco_Fre'];
$product->price = 9.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Free From Lody o smaku waniliowym z polewą o smaku czekoladowym 300 ml (3 sztuki).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Free_From_Lody_o_smaku_waniliowym_z_lodami_truskawkowymi_i_sosem_w_rozku_480_ml_(4_sztuki)'];
$product->link_rewrite = [$default_lang => 'Tesco_Fre'];
$product->price = 11.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Free From Lody o smaku waniliowym z lodami truskawkowymi i sosem w rożku 480 ml (4 sztuki).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Free_From_Lody_o_smaku_czekoladowym_z_kawakami_czekolady_500_ml'];
$product->link_rewrite = [$default_lang => 'Tesco_Fre'];
$product->price = 9.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Free From Lody o smaku czekoladowym z kawałkami czekolady 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Magical_Truskawka_Kremowe_lody_na_smietance_1_l'];
$product->link_rewrite = [$default_lang => 'Tesco_Mag'];
$product->price = 8.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Magical Truskawka Kremowe lody na śmietance 1 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Lody_o_smaku_waniliowym_przekadane_warstwami_polewy_kakaowej_750_ml'];
$product->link_rewrite = [$default_lang => 'Tesco_Lod'];
$product->price = 6.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Lody o smaku waniliowym przekładane warstwami polewy kakaowej 750 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Haagen-Dazs_Blueberries_&_Cream_Lody_500_ml'];
$product->link_rewrite = [$default_lang => 'Haagen-Da'];
$product->price = 23.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Häagen-Dazs Blueberries &amp; Cream Lody 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Finest_Lody_o_smaku_czekoladowym_z_sosem_o_smaku_czekoladowym_i_kawakami_czekolady_460_ml'];
$product->link_rewrite = [$default_lang => 'Tesco_Fin'];
$product->price = 14.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Finest Lody o smaku czekoladowym z sosem o smaku czekoladowym i kawałkami czekolady 460 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zielona_Budka_Lody_smak_mieta_z_kawakami_czekolady_1000_ml'];
$product->link_rewrite = [$default_lang => 'Zielona_B'];
$product->price = 11.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zielona Budka Lody smak mięta z kawałkami czekolady 1000 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Koral_Rolada_Koktajlowa_Lody_waniliowe_i_o_smaku_ajerkoniaku_cukierkow_kukuka_i_krowka_1_l'];
$product->link_rewrite = [$default_lang => 'Koral_Rol'];
$product->price = 8.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Koral Rolada Koktajlowa Lody waniliowe i o smaku ajerkoniaku cukierków kukułka i krówka 1 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Finest_Lody_o_smaku_waniliowo-karmelowym_z_ciastkami_w_polewie_o_smaku_czekoladowym_1_l'];
$product->link_rewrite = [$default_lang => 'Tesco_Fin'];
$product->price = 17.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Finest Lody o smaku waniliowo-karmelowym z ciastkami w polewie o smaku czekoladowym 1 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zielona_Budka_Lody_bakaliowe_z_kawakami_bakalii_1000_ml'];
$product->link_rewrite = [$default_lang => 'Zielona_B'];
$product->price = 11.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zielona Budka Lody bakaliowe z kawałkami bakalii 1000 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Algida_Mini_Twister_Lody_400_ml_(8_sztuk)'];
$product->link_rewrite = [$default_lang => 'Algida_Mi'];
$product->price = 11.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Algida Mini Twister Lody 400 ml (8 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Algida_Big_Milk_Yogurt_Caramel_Lody_1000_ml'];
$product->link_rewrite = [$default_lang => 'Algida_Bi'];
$product->price = 9.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Algida Big Milk Yogurt Caramel Lody 1000 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Haagen-Dazs_Lody_truskawkowe_z_truskawkami_500_ml'];
$product->link_rewrite = [$default_lang => 'Haagen-Da'];
$product->price = 23.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Häagen-Dazs Lody truskawkowe z truskawkami 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mars_Lody_z_karmelem_w_polewie_kakaowej_306_ml_(6_sztuk)'];
$product->link_rewrite = [$default_lang => 'Mars_Lody'];
$product->price = 15.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mars Lody z karmelem w polewie kakaowej 306 ml (6 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Manhattan_Classic_Lody_waniliowe_i_lody_wodne_truskawkowe_1,4_l'];
$product->link_rewrite = [$default_lang => 'Manhattan'];
$product->price = 14.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Manhattan Classic Lody waniliowe i lody wodne truskawkowe 1,4 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zielona_Budka_Lody_owoce_lesne_z_kawakami_owocow_1000_ml'];
$product->link_rewrite = [$default_lang => 'Zielona_B'];
$product->price = 11.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zielona Budka Lody owoce leśne z kawałkami owoców 1000 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Grycan_Sorbet_z_czarnych_porzeczek_500_ml'];
$product->link_rewrite = [$default_lang => 'Grycan_So'];
$product->price = 9.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Grycan Sorbet z czarnych porzeczek 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Milka_Lody_czekoladowe_i_waniliowe_z_kawakami_czekolady_mlecznej_185_ml'];
$product->link_rewrite = [$default_lang => 'Milka_Lod'];
$product->price = 4.19;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Milka Lody czekoladowe i waniliowe z kawałkami czekolady mlecznej 185 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Twist_Lemon_Lody_o_smaku_smietankowym_i_lody_wodne_o_smaku_cytrynowym_100_ml'];
$product->link_rewrite = [$default_lang => 'Tesco_Twi'];
$product->price = 0.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Twist Lemon Lody o smaku śmietankowym i lody wodne o smaku cytrynowym 100 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Lody_o_smaku_waniliowym_w_polewie_kakaowej_35_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Lod'];
$product->price = 0.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Lody o smaku waniliowym w polewie kakaowej 35 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Haagen-Dazs_Lody_swiderki_o_smaku_mango_i_malinowym_500_ml'];
$product->link_rewrite = [$default_lang => 'Haagen-Da'];
$product->price = 23.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Häagen-Dazs Lody świderki o smaku mango i malinowym 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mars_Lody_z_karmelem_w_polewie_kakaowej_51_ml'];
$product->link_rewrite = [$default_lang => 'Mars_Lody'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mars Lody z karmelem w polewie kakaowej 51 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Manhattan_Classic_Lody_smietankowo-waniliowe_1,4_l'];
$product->link_rewrite = [$default_lang => 'Manhattan'];
$product->price = 14.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Manhattan Classic Lody śmietankowo-waniliowe 1,4 l.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Grycan_Sorbet_z_wisni_500_ml'];
$product->link_rewrite = [$default_lang => 'Grycan_So'];
$product->price = 9.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Grycan Sorbet z wiśni 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Free_From_Lody_o_smaku_waniliowym_z_sosem_truskawkowym_500_ml'];
$product->link_rewrite = [$default_lang => 'Tesco_Fre'];
$product->price = 9.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Free From Lody o smaku waniliowym z sosem truskawkowym 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bounty_Lody_kokosowe_w_polewie_kakaowej_50,1_ml'];
$product->link_rewrite = [$default_lang => 'Bounty_Lo'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bounty Lody kokosowe w polewie kakaowej 50,1 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zielona_Budka_Lody_smak_malaga_z_rodzynkami_1000_ml'];
$product->link_rewrite = [$default_lang => 'Zielona_B'];
$product->price = 11.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zielona Budka Lody smak malaga z rodzynkami 1000 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Grycan_Sorbet_z_cytryn_500_ml'];
$product->link_rewrite = [$default_lang => 'Grycan_So'];
$product->price = 9.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Grycan Sorbet z cytryn 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zielona_Budka_Familiada_Lody_owoce_lesne_1000_ml'];
$product->link_rewrite = [$default_lang => 'Zielona_B'];
$product->price = 8.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zielona Budka Familiada Lody owoce leśne 1000 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Lody_o_smaku_truskawkowym_w_rozku_waflowym_75_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Lod'];
$product->price = 0.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Lody o smaku truskawkowym w rożku waflowym 75 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Nestea_Lemon_Lody_wodne_o_smaku_herbaty_cytrynowej_99_ml'];
$product->link_rewrite = [$default_lang => 'Nestea_Le'];
$product->price = 2.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Nestea Lemon Lody wodne o smaku herbaty cytrynowej 99 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Koral_Lody_koktajlowe_orzech_karmel_220_ml'];
$product->link_rewrite = [$default_lang => 'Koral_Lod'];
$product->price = 2.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Koral Lody koktajlowe orzech karmel 220 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Manhattan_Specialities_Lody_z_pasta_z_orzechow_ziemnych_i_sone_lody_karmelowe_946_ml'];
$product->link_rewrite = [$default_lang => 'Manhattan'];
$product->price = 14.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Manhattan Specialities Lody z pastą z orzechów ziemnych i słone lody karmelowe 946 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Grycan_Lody_tiramisu_480_ml'];
$product->link_rewrite = [$default_lang => 'Grycan_Lo'];
$product->price = 8.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Grycan Lody tiramisu 480 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Oreo_Ciastka_kakaowe_z_lodami_o_smaku_smietankowym_z_ciastkami_kakaowymi_135_ml'];
$product->link_rewrite = [$default_lang => 'Oreo_Cias'];
$product->price = 4.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Oreo Ciastka kakaowe z lodami o smaku śmietankowym z ciastkami kakaowymi 135 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Sorbet_marakuja_i_mango_500_ml'];
$product->link_rewrite = [$default_lang => 'Tesco_Sor'];
$product->price = 5.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Sorbet marakuja i mango 500 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Value_Lody_o_smaku_czekoladowym_w_polewie_o_smaku_kakaowym_60_ml'];
$product->link_rewrite = [$default_lang => 'Tesco_Val'];
$product->price = 0.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Value Lody o smaku czekoladowym w polewie o smaku kakaowym 60 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Algida_Big_Milk_Ciasteczko_Lody_1000_ml'];
$product->link_rewrite = [$default_lang => 'Algida_Bi'];
$product->price = 9.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Algida Big Milk Ciasteczko Lody 1000 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Sorbet_truskawkowy_90_ml'];
$product->link_rewrite = [$default_lang => 'Tesco_Sor'];
$product->price = 1.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Sorbet truskawkowy 90 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Magnum_Almond_Lody_440_ml'];
$product->link_rewrite = [$default_lang => 'Magnum_Al'];
$product->price = 15.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Magnum Almond Lody 440 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Lody_z_biaa_czekolada_kokosem_i_sosem_mango_w_biaej_czekoladzie_z_wiorkami_kokosowymi_120_ml'];
$product->link_rewrite = [$default_lang => 'Tesco_Lod'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Lody z białą czekoladą kokosem i sosem mango w białej czekoladzie z wiórkami kokosowymi 120 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Lemon_Sensation_Lody_wodne_420_ml_(7_sztuk)'];
$product->link_rewrite = [$default_lang => 'Tesco_Lem'];
$product->price = 9.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Lemon Sensation Lody wodne 420 ml (7 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Algida_Big_Milk_Bakalia_Lody_1000_ml'];
$product->link_rewrite = [$default_lang => 'Algida_Bi'];
$product->price = 9.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Algida Big Milk Bakalia Lody 1000 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Algida_Big_Milk_Smietankowe_Lody_1000_ml'];
$product->link_rewrite = [$default_lang => 'Algida_Bi'];
$product->price = 9.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Algida Big Milk Śmietankowe Lody 1000 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Value_Lody_o_smaku_czekoladowym_960_ml_(16_sztuk)'];
$product->link_rewrite = [$default_lang => 'Tesco_Val'];
$product->price = 9.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Value Lody o smaku czekoladowym 960 ml (16 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Free_From_Waniliowy_deser_lodowy_w_polewie_z_lodow_wodnych_mix_smakow_330_g_(6_sztuk)'];
$product->link_rewrite = [$default_lang => 'Tesco_Fre'];
$product->price = 6.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Free From Waniliowy deser lodowy w polewie z lodów wodnych mix smaków 330 g (6 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Ice_Cream_Lody_o_smaku_waniliowym_w_biaej_czekoladzie_120_ml'];
$product->link_rewrite = [$default_lang => 'Tesco_Ice'];
$product->price = 1.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Ice Cream Lody o smaku waniliowym w białej czekoladzie 120 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Algida_Big_Milk_o_smaku_czekolada_Lody_1000_ml'];
$product->link_rewrite = [$default_lang => 'Algida_Bi'];
$product->price = 9.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Algida Big Milk o smaku czekolada Lody 1000 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Algida_Big_Milk_o_smaku_karmel_Lody_1000_ml'];
$product->link_rewrite = [$default_lang => 'Algida_Bi'];
$product->price = 9.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Algida Big Milk o smaku karmel Lody 1000 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Lody_mini_400_ml_(8_sztuk)'];
$product->link_rewrite = [$default_lang => 'Tesco_Lod'];
$product->price = 8.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Lody mini 400 ml (8 sztuk).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Sorbet_mango-marakuja_90_ml'];
$product->link_rewrite = [$default_lang => 'Tesco_Sor'];
$product->price = 1.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Sorbet mango-marakuja 90 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Koral_Grand_Gold_z_migdaami_Lody_waniliowe_w_mlecznej_czekoladzie_z_migdaami_120_ml'];
$product->link_rewrite = [$default_lang => 'Koral_Gra'];
$product->price = 3.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Koral Grand Gold z migdałami Lody waniliowe w mlecznej czekoladzie z migdałami 120 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Lody_waniliowe_z_sosem_karmelowym_z_kawakami_kolorowych_czekoladowych_drazy_110_ml'];
$product->link_rewrite = [$default_lang => 'Tesco_Lod'];
$product->price = 1.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Lody waniliowe z sosem karmelowym z kawałkami kolorowych czekoladowych draży 110 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Lody_jogurtowe_mix_smakow_520_ml_(4_sztuki)'];
$product->link_rewrite = [$default_lang => 'Tesco_Lod'];
$product->price = 8.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Lody jogurtowe mix smaków 520 ml (4 sztuki).png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Lody_jogurtowe_z_sosem_z_owocow_lesnych_i_kawakami_kandyzowanych_owocow_lesnych_900_ml'];
$product->link_rewrite = [$default_lang => 'Tesco_Lod'];
$product->price = 7.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Lody jogurtowe z sosem z owoców leśnych i kawałkami kandyzowanych owoców leśnych 900 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bracia_Koral_Lody_jak_dawniej_o_smaku_mietowym_z_czekolada_450_ml'];
$product->link_rewrite = [$default_lang => 'Bracia_Ko'];
$product->price = 7.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bracia Koral Lody jak dawniej o smaku miętowym z czekoladą 450 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Lody_o_smaku_mascarpone_z_sosem_malinowym_900_ml'];
$product->link_rewrite = [$default_lang => 'Tesco_Lod'];
$product->price = 7.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Lody o smaku mascarpone z sosem malinowym 900 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Lody_waniliowe_z_sosem_wisniowym_posypane_patkami_czekoladowymi_90_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Lod'];
$product->price = 1.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Lody waniliowe z sosem wiśniowym posypane płatkami czekoladowymi 90 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Algida_Big_Milk_Stracciatella_Lody_1000_ml'];
$product->link_rewrite = [$default_lang => 'Algida_Bi'];
$product->price = 9.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Algida Big Milk Stracciatella Lody 1000 ml.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Zielona_Budka_Lody_karmel_z_sola_1000_ml'];
$product->link_rewrite = [$default_lang => 'Zielona_B'];
$product->price = 11.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Zielona Budka Lody karmel z solą 1000 ml.png'))
    {
    
        $image->delete();
    }
    
}
$category = new Category();
        $category->name = [$default_lang => 'Owoce_i_warzywa'];
$category->id_parent=Configuration::get('PS_HOME_CATEGORY');
$category->link_rewrite=[$default_lang => 'Owoce_i_warzywa'];
$category->add();
        $subcategory = new Category();
        $subcategory->name = [$default_lang => 'orzechy_i_ziarniste'];
$subcategory->id_parent=$category->id;
$subcategory->link_rewrite=[$default_lang => 'orzechy_i_ziarniste'];
$subcategory->add();
        $subcategory = new Category();
        $subcategory->name = [$default_lang => 'warzywa'];
$subcategory->id_parent=$category->id;
$subcategory->link_rewrite=[$default_lang => 'warzywa'];
$subcategory->add();
        $product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Pomidor'];
$product->link_rewrite = [$default_lang => 'Pomidor'];
$product->price = 1.18;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Pomidor.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Pomidor'];
$product->link_rewrite = [$default_lang => 'Pomidor'];
$product->price = 1.18;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Pomidor.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Papryka_czerwona'];
$product->link_rewrite = [$default_lang => 'Papryka_c'];
$product->price = 1.92;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Papryka czerwona.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Ogorek_dugi'];
$product->link_rewrite = [$default_lang => 'Ogorek_du'];
$product->price = 2.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Ogórek długi.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Marchew'];
$product->link_rewrite = [$default_lang => 'Marchew'];
$product->price = 0.08;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Marchew.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Marchew'];
$product->link_rewrite = [$default_lang => 'Marchew'];
$product->price = 0.08;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Marchew.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Cebula'];
$product->link_rewrite = [$default_lang => 'Cebula'];
$product->price = 0.71;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Cebula.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Marchew'];
$product->link_rewrite = [$default_lang => 'Marchew'];
$product->price = 0.08;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Marchew.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Cebula'];
$product->link_rewrite = [$default_lang => 'Cebula'];
$product->price = 0.71;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Cebula.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Buraki'];
$product->link_rewrite = [$default_lang => 'Buraki'];
$product->price = 0.47;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Buraki.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Pietruszka_korzen'];
$product->link_rewrite = [$default_lang => 'Pietruszk'];
$product->price = 0.59;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Pietruszka korzeń.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Ziemniaki_obiadowe_2,5_kg'];
$product->link_rewrite = [$default_lang => 'Tesco_Zie'];
$product->price = 3.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Ziemniaki obiadowe 2,5 kg.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Seler_korzen'];
$product->link_rewrite = [$default_lang => 'Seler_kor'];
$product->price = 0.72;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Seler korzeń.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Rzodkiewka_peczek'];
$product->link_rewrite = [$default_lang => 'Rzodkiewk'];
$product->price = 1.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Rzodkiewka pęczek.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Rzodkiewka_peczek'];
$product->link_rewrite = [$default_lang => 'Rzodkiewk'];
$product->price = 1.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Rzodkiewka pęczek.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Czosnek'];
$product->link_rewrite = [$default_lang => 'Czosnek'];
$product->price = 1.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Czosnek.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Cebula_czerwona'];
$product->link_rewrite = [$default_lang => 'Cebula_cz'];
$product->price = 0.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Cebula czerwona.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Cebula_czerwona'];
$product->link_rewrite = [$default_lang => 'Cebula_cz'];
$product->price = 0.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Cebula czerwona.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Por'];
$product->link_rewrite = [$default_lang => 'Por'];
$product->price = 1.62;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Por.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Pomidory_sliwkowe_500_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Pom'];
$product->price = 4.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Pomidory śliwkowe 500 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Ziemniaki_sodkie_bataty'];
$product->link_rewrite = [$default_lang => 'Ziemniaki'];
$product->price = 3.88;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Ziemniaki słodkie bataty.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Kapusta_pekinska'];
$product->link_rewrite = [$default_lang => 'Kapusta_p'];
$product->price = 2.37;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Kapusta pekińska.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Marchew_1_kg'];
$product->link_rewrite = [$default_lang => 'Tesco_Mar'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Marchew 1 kg.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Papryka_zielona'];
$product->link_rewrite = [$default_lang => 'Papryka_z'];
$product->price = 1.68;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Papryka zielona.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Kieki_rzodkiewki_50_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Kie'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Kiełki rzodkiewki 50 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Kieki_rzodkiewki_50_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Kie'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Kiełki rzodkiewki 50 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Broku'];
$product->link_rewrite = [$default_lang => 'Broku'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Brokuł.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Saata_lodowa'];
$product->link_rewrite = [$default_lang => 'Tesco_Saa'];
$product->price = 3.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Sałata lodowa.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Seler_naciowy_400_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Sel'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Seler naciowy 400 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Saata_gowiasta'];
$product->link_rewrite = [$default_lang => 'Saata_gow'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Sałata głowiasta.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Ogorki_kwaszone'];
$product->link_rewrite = [$default_lang => 'Ogorki_kw'];
$product->price = 0.87;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Ogórki kwaszone.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Koperek_peczek_XL'];
$product->link_rewrite = [$default_lang => 'Tesco_Kop'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Koperek pęczek XL.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Polska_cebula_dymka'];
$product->link_rewrite = [$default_lang => 'Tesco_Pol'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Polska cebula dymka.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Pomidorki_cherry_250_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Pom'];
$product->price = 3.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Pomidorki cherry 250 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Saata_Little_Gem_200_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Saa'];
$product->price = 3.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Sałata Little Gem 200 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Pomidory_malinowe'];
$product->link_rewrite = [$default_lang => 'Pomidory_'];
$product->price = 1.10;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Pomidory malinowe.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Pomidory_malinowe'];
$product->link_rewrite = [$default_lang => 'Pomidory_'];
$product->price = 1.10;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Pomidory malinowe.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Kalafior'];
$product->link_rewrite = [$default_lang => 'Kalafior'];
$product->price = 3.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Kalafior.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Kapusta_biaa'];
$product->link_rewrite = [$default_lang => 'Kapusta_b'];
$product->price = 2.57;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Kapusta biała.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Papryka_zota'];
$product->link_rewrite = [$default_lang => 'Papryka_z'];
$product->price = 2.47;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Papryka żółta.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Pomidorki_koktajlowe_na_gaazce_500_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Pom'];
$product->price = 6.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Pomidorki koktajlowe na gałązce 500 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Papryka_mix_500_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Pap'];
$product->price = 6.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Papryka mix 500 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Ziemniaki_odmiana_Gala_2_kg'];
$product->link_rewrite = [$default_lang => 'Tesco_Zie'];
$product->price = 4.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Ziemniaki odmiana Gala 2 kg.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Rzodkiew_biaa'];
$product->link_rewrite = [$default_lang => 'Rzodkiew_'];
$product->price = 2.43;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Rzodkiew biała.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Rzodkiew_biaa'];
$product->link_rewrite = [$default_lang => 'Rzodkiew_'];
$product->price = 2.43;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Rzodkiew biała.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Kalarepa'];
$product->link_rewrite = [$default_lang => 'Kalarepa'];
$product->price = 2.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Kalarepa.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Por_400_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Por'];
$product->price = 5.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Por 400 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Kapusta_biaa_kwaszona'];
$product->link_rewrite = [$default_lang => 'Kapusta_b'];
$product->price = 0.35;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Kapusta biała kwaszona.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Kieki_brokuu_50_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Kie'];
$product->price = 3.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Kiełki brokułu 50 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Kapusta_kwaszona_z_zioami'];
$product->link_rewrite = [$default_lang => 'Kapusta_k'];
$product->price = 0.40;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Kapusta kwaszona z ziołami.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Cykoria_500_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Cyk'];
$product->price = 4.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Cykoria 500 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Ziemniaki_odmiana_Red_Lady_2_kg'];
$product->link_rewrite = [$default_lang => 'Tesco_Zie'];
$product->price = 4.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Ziemniaki odmiana Red Lady 2 kg.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Pomidorki_koktajlowe_sliwkowe_250_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Pom'];
$product->price = 3.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Pomidorki koktajlowe śliwkowe 250 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Saata_z_korzeniem_mix'];
$product->link_rewrite = [$default_lang => 'Saata_z_k'];
$product->price = 3.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Sałata z korzeniem mix.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Kieki_fasoli_Mung_150_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Kie'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Kiełki fasoli Mung 150 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Uniflora_Kieki_Duo_Kieki_brokuu_i_rzodkiewki_70_g'];
$product->link_rewrite = [$default_lang => 'Uniflora_'];
$product->price = 3.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Uniflora Kiełki Duo Kiełki brokułu i rzodkiewki 70 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Kapusta_czerwona'];
$product->link_rewrite = [$default_lang => 'Kapusta_c'];
$product->price = 4.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Kapusta czerwona.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Ziemniaki_odmiana_Lord_2_kg'];
$product->link_rewrite = [$default_lang => 'Tesco_Zie'];
$product->price = 4.89;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Ziemniaki odmiana Lord 2 kg.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Cebula_szalotka_250_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Ceb'];
$product->price = 3.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Cebula szalotka 250 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Kapusta_woska'];
$product->link_rewrite = [$default_lang => 'Kapusta_w'];
$product->price = 3.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Kapusta włoska.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Chrzan_korzen'];
$product->link_rewrite = [$default_lang => 'Chrzan_ko'];
$product->price = 0.92;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Chrzan korzeń.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Broku_roze_300_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Bro'];
$product->price = 4.39;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Brokuł róże 300 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Koper_woski'];
$product->link_rewrite = [$default_lang => 'Koper_wos'];
$product->price = 1.00;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Koper włoski.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Dynia_makaronowa'];
$product->link_rewrite = [$default_lang => 'Dynia_mak'];
$product->price = 4.15;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Dynia makaronowa.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Polskie_pomidory_malinowe_500_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Pol'];
$product->price = 3.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Polskie pomidory malinowe 500 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Finest_Cebula_cukrowa'];
$product->link_rewrite = [$default_lang => 'Tesco_Fin'];
$product->price = 1.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Finest Cebula cukrowa.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Polskie_pieczarki_biae_i_brazowe_500_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Pol'];
$product->price = 5.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Polskie pieczarki białe i brązowe 500 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Cebula_czosnkowa'];
$product->link_rewrite = [$default_lang => 'Tesco_Ceb'];
$product->price = 1.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Cebula czosnkowa.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Dynia_pizmowa'];
$product->link_rewrite = [$default_lang => 'Dynia_piz'];
$product->price = 3.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Dynia piżmowa.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'MARCHEW_KOLOROWA_750_g'];
$product->link_rewrite = [$default_lang => 'MARCHEW_K'];
$product->price = 3.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/MARCHEW KOLOROWA 750 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Eisberg_Impression_Flamenco_Mix_Mieszanka_swiezych_warzyw_120_g'];
$product->link_rewrite = [$default_lang => 'Eisberg_I'];
$product->price = 3.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Eisberg Impression Flamenco Mix Mieszanka świeżych warzyw 120 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Pomidory_cherry'];
$product->link_rewrite = [$default_lang => 'Pomidory_'];
$product->price = 1.30;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Pomidory cherry.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Cebula_trio_tuba_3_sztuki'];
$product->link_rewrite = [$default_lang => 'Tesco_Ceb'];
$product->price = 3.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Cebula trio tuba 3 sztuki.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Polskie_pieczarki_XXL_4_sztuki'];
$product->link_rewrite = [$default_lang => 'Tesco_Pol'];
$product->price = 4.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Polskie pieczarki XXL 4 sztuki.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Czosnek_200_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Czo'];
$product->price = 4.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Czosnek 200 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Woszczyzna_600_g'];
$product->link_rewrite = [$default_lang => 'Woszczyzn'];
$product->price = 3.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Włoszczyzna 600 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'ZIEMNIAKI_DO_MIKROFALI_500_g'];
$product->link_rewrite = [$default_lang => 'ZIEMNIAKI'];
$product->price = 3.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/ZIEMNIAKI DO MIKROFALI 500 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Papryka_kapia'];
$product->link_rewrite = [$default_lang => 'Papryka_k'];
$product->price = 1.30;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Papryka kapia.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Dynia_Hokkaido'];
$product->link_rewrite = [$default_lang => 'Tesco_Dyn'];
$product->price = 3.27;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Dynia Hokkaido.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Czarna_rzepa'];
$product->link_rewrite = [$default_lang => 'Czarna_rz'];
$product->price = 1.09;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Czarna rzepa.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'TF_ZIEMNIAKI_FIOLETOWE_750_g'];
$product->link_rewrite = [$default_lang => 'TF_ZIEMNI'];
$product->price = 5.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/TF ZIEMNIAKI FIOLETOWE 750 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bakazan'];
$product->link_rewrite = [$default_lang => 'Bakazan'];
$product->price = 2.01;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bakłażan.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Bakazan'];
$product->link_rewrite = [$default_lang => 'Bakazan'];
$product->price = 2.01;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Bakłażan.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Papryka_pomaranczowa'];
$product->link_rewrite = [$default_lang => 'Papryka_p'];
$product->price = 3.10;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Papryka pomarańczowa.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Dynia_Muscat'];
$product->link_rewrite = [$default_lang => 'Tesco_Dyn'];
$product->price = 0.40;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Dynia Muscat.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'ZIEMNIAKI_JAZZY_750_g'];
$product->link_rewrite = [$default_lang => 'ZIEMNIAKI'];
$product->price = 3.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/ZIEMNIAKI JAZZY 750 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Pomidorki_cherry_300_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Pom'];
$product->price = 5.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Pomidorki cherry 300 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Finest_Pomidorki_truskawkowe_na_gaazce_300_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Fin'];
$product->price = 6.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Finest Pomidorki truskawkowe na gałązce 300 g.png'))
    {
    
        $image->delete();
    }
    
}
$subcategory = new Category();
        $subcategory->name = [$default_lang => 'grzyby'];
$subcategory->id_parent=$category->id;
$subcategory->link_rewrite=[$default_lang => 'grzyby'];
$subcategory->add();
        $product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Pieczarki'];
$product->link_rewrite = [$default_lang => 'Pieczarki'];
$product->price = 0.80;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Pieczarki.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Pieczarki'];
$product->link_rewrite = [$default_lang => 'Pieczarki'];
$product->price = 0.80;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Pieczarki.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Polskie_pieczarki_500_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Pol'];
$product->price = 4.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Polskie pieczarki 500 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Polskie_pieczarki_250_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Pol'];
$product->price = 2.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Polskie pieczarki 250 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Polski_boczniak_250_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Pol'];
$product->price = 3.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Polski boczniak 250 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Polskie_pieczarki_brazowe_250_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Pol'];
$product->price = 3.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Polskie pieczarki brązowe 250 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Runopol_Borowik_szlachetny_suszony_20_g'];
$product->link_rewrite = [$default_lang => 'Runopol_B'];
$product->price = 5.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Runopol Borowik szlachetny suszony 20 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Runopol_Podgrzybek_brunatny_suszony_20_g'];
$product->link_rewrite = [$default_lang => 'Runopol_P'];
$product->price = 5.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Runopol Podgrzybek brunatny suszony 20 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Runopol_Podgrzybek_brunatny_suszony_40_g'];
$product->link_rewrite = [$default_lang => 'Runopol_P'];
$product->price = 10.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Runopol Podgrzybek brunatny suszony 40 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Runopol_Borowik_szlachetny_suszony_40_g'];
$product->link_rewrite = [$default_lang => 'Runopol_B'];
$product->price = 12.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Runopol Borowik szlachetny suszony 40 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Mieszanka_grzybow_suszonych_40_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Mie'];
$product->price = 13.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Mieszanka grzybów suszonych 40 g.png'))
    {
    
        $image->delete();
    }
    
}
$subcategory = new Category();
        $subcategory->name = [$default_lang => 'owoce'];
$subcategory->id_parent=$category->id;
$subcategory->link_rewrite=[$default_lang => 'owoce'];
$subcategory->add();
        $product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Banany'];
$product->link_rewrite = [$default_lang => 'Banany'];
$product->price = 0.75;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Banany.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Banany'];
$product->link_rewrite = [$default_lang => 'Banany'];
$product->price = 0.75;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Banany.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Cytryna'];
$product->link_rewrite = [$default_lang => 'Cytryna'];
$product->price = 0.78;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Cytryna.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Banany'];
$product->link_rewrite = [$default_lang => 'Banany'];
$product->price = 0.75;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Banany.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Cytryna'];
$product->link_rewrite = [$default_lang => 'Cytryna'];
$product->price = 0.78;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Cytryna.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Pomarancze'];
$product->link_rewrite = [$default_lang => 'Pomarancz'];
$product->price = 0.60;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Pomarańcze.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Banany'];
$product->link_rewrite = [$default_lang => 'Banany'];
$product->price = 0.75;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Banany.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Cytryna'];
$product->link_rewrite = [$default_lang => 'Cytryna'];
$product->price = 0.78;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Cytryna.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Pomarancze'];
$product->link_rewrite = [$default_lang => 'Pomarancz'];
$product->price = 0.60;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Pomarańcze.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Jabka_polskie_Jonagold_sodkie_twarde'];
$product->link_rewrite = [$default_lang => 'Tesco_Jab'];
$product->price = 0.40;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Jabłka polskie Jonagold słodkie twarde.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Awokado'];
$product->link_rewrite = [$default_lang => 'Tesco_Awo'];
$product->price = 4.69;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Awokado.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mandarynki'];
$product->link_rewrite = [$default_lang => 'Mandarynk'];
$product->price = 0.20;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mandarynki.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Mandarynki'];
$product->link_rewrite = [$default_lang => 'Mandarynk'];
$product->price = 0.20;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Mandarynki.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Jabka_polskie_Szampion_sodkie_lekko_twarde'];
$product->link_rewrite = [$default_lang => 'Tesco_Jab'];
$product->price = 0.35;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Jabłka polskie Szampion słodkie lekko twarde.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Gruszka_zielona_Konferencja'];
$product->link_rewrite = [$default_lang => 'Tesco_Gru'];
$product->price = 1.29;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Gruszka zielona Konferencja.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Mango'];
$product->link_rewrite = [$default_lang => 'Tesco_Man'];
$product->price = 4.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Mango.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Kiwi'];
$product->link_rewrite = [$default_lang => 'Kiwi'];
$product->price = 0.95;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Kiwi.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Kiwi'];
$product->link_rewrite = [$default_lang => 'Kiwi'];
$product->price = 0.95;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Kiwi.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Grejpfrut_czerwony'];
$product->link_rewrite = [$default_lang => 'Grejpfrut'];
$product->price = 3.15;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Grejpfrut czerwony.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Sun_Grown_Kiwi_koszyk_1_kg'];
$product->link_rewrite = [$default_lang => 'Sun_Grown'];
$product->price = 5.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Sun Grown Kiwi koszyk 1 kg.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Jabka_Gala'];
$product->link_rewrite = [$default_lang => 'Jabka_Gal'];
$product->price = 0.40;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Jabłka Gala.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Pyszne_borowki_amerykanskie_125_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Pys'];
$product->price = 7.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Pyszne borówki amerykańskie 125 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Winogrona_biae'];
$product->link_rewrite = [$default_lang => 'Winogrona'];
$product->price = 0.80;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Winogrona białe.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Winogrona_rozowe'];
$product->link_rewrite = [$default_lang => 'Winogrona'];
$product->price = 0.90;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Winogrona różowe.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Jabka_polskie_Golden_Delicious_sodkie_twarde'];
$product->link_rewrite = [$default_lang => 'Jabka_pol'];
$product->price = 0.40;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Jabłka polskie Golden Delicious słodkie twarde.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Jabka_polskie_Golden_Delicious_sodkie_twarde'];
$product->link_rewrite = [$default_lang => 'Jabka_pol'];
$product->price = 0.40;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Jabłka polskie Golden Delicious słodkie twarde.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Limonka'];
$product->link_rewrite = [$default_lang => 'Limonka'];
$product->price = 1.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Limonka.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Imbir_swiezy'];
$product->link_rewrite = [$default_lang => 'Imbir_swi'];
$product->price = 3.00;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Imbir świeży.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Jabka_zielone_Granny'];
$product->link_rewrite = [$default_lang => 'Jabka_zie'];
$product->price = 1.53;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Jabłka zielone Granny.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Mango'];
$product->link_rewrite = [$default_lang => 'Tesco_Man'];
$product->price = 9.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Mango.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Mango'];
$product->link_rewrite = [$default_lang => 'Tesco_Man'];
$product->price = 9.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Mango.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Ananas'];
$product->link_rewrite = [$default_lang => 'Ananas'];
$product->price = 10.71;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Ananas.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Mango'];
$product->link_rewrite = [$default_lang => 'Tesco_Man'];
$product->price = 9.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Mango.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Ananas'];
$product->link_rewrite = [$default_lang => 'Ananas'];
$product->price = 10.71;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Ananas.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Granat'];
$product->link_rewrite = [$default_lang => 'Granat'];
$product->price = 2.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Granat.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Winogrono_biae_500_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Win'];
$product->price = 6.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Winogrono białe 500 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Melon_zoty'];
$product->link_rewrite = [$default_lang => 'Melon_zot'];
$product->price = 4.79;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Melon żółty.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Soczyste_maliny_125_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Soc'];
$product->price = 6.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Soczyste maliny 125 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Truskawki_250_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Tru'];
$product->price = 7.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Truskawki 250 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Gruszka_Abate'];
$product->link_rewrite = [$default_lang => 'Gruszka_A'];
$product->price = 2.40;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Gruszka Abate.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Kaki_Sharon'];
$product->link_rewrite = [$default_lang => 'Kaki_Shar'];
$product->price = 1.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Kaki Sharon.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Czerwone_winogrona_bezpestkowe_500_g'];
$product->link_rewrite = [$default_lang => 'Tesco_Cze'];
$product->price = 5.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Czerwone winogrona bezpestkowe 500 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Sun_Grown_Gruszki_1_kg'];
$product->link_rewrite = [$default_lang => 'Sun_Grown'];
$product->price = 3.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Sun Grown Gruszki 1 kg.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Gruszka_czerwona'];
$product->link_rewrite = [$default_lang => 'Gruszka_c'];
$product->price = 1.62;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Gruszka czerwona.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Sliwki_czerwone'];
$product->link_rewrite = [$default_lang => 'Sliwki_cz'];
$product->price = 0.43;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Śliwki czerwone.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Granat_premium'];
$product->link_rewrite = [$default_lang => 'Tesco_Gra'];
$product->price = 5.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Granat premium.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Kokos'];
$product->link_rewrite = [$default_lang => 'Tesco_Kok'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Kokos.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Gruszka_Nashi'];
$product->link_rewrite = [$default_lang => 'Gruszka_N'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Gruszka Nashi.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Sun_Grown_Cytryny_500_g'];
$product->link_rewrite = [$default_lang => 'Sun_Grown'];
$product->price = 2.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Sun Grown Cytryny 500 g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Melon_Galia'];
$product->link_rewrite = [$default_lang => 'Melon_Gal'];
$product->price = 8.76;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Melon Galia.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Avocado_XL'];
$product->link_rewrite = [$default_lang => 'Tesco_Avo'];
$product->price = 7.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Avocado XL.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Gruszka_Xenia'];
$product->link_rewrite = [$default_lang => 'Tesco_Gru'];
$product->price = 1.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Gruszka Xenia.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Polskie_jabka_deserowe'];
$product->link_rewrite = [$default_lang => 'Tesco_Pol'];
$product->price = 0.87;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Polskie jabłka deserowe.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Jabka_polskie_Ligol_lekko_kwasne_twarde'];
$product->link_rewrite = [$default_lang => 'Tesco_Jab'];
$product->price = 0.35;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Jabłka polskie Ligol lekko kwaśne twarde.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Polskie_jabka_Gloster_lekko_kwasne_twarde'];
$product->link_rewrite = [$default_lang => 'Tesco_Pol'];
$product->price = 0.35;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Polskie jabłka Gloster lekko kwaśne twarde.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'BIO_CYTRYNY_500g'];
$product->link_rewrite = [$default_lang => 'BIO_CYTRY'];
$product->price = 5.99;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/BIO CYTRYNY 500g.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Sun_Grown_Pomarancze_1_kg'];
$product->link_rewrite = [$default_lang => 'Sun_Grown'];
$product->price = 5.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Sun Grown Pomarańcze 1 kg.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Sun_Grown_Pomarancze_1_kg'];
$product->link_rewrite = [$default_lang => 'Sun_Grown'];
$product->price = 5.49;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Sun Grown Pomarańcze 1 kg.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Arbuz'];
$product->link_rewrite = [$default_lang => 'Arbuz'];
$product->price = 0.50;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Arbuz.png'))
    {
    
        $image->delete();
    }
    
}
$product = new Product();
$image = new Image();
$product->name = [$default_lang => 'Tesco_Jabka_polskie_Jonaprince_sodkie_twarde'];
$product->link_rewrite = [$default_lang => 'Tesco_Jab'];
$product->price = 1.10;
$product->quantity = 10;
$product->id_category =[$category->id,$subcategory->id];
$product->id_category_default = $category->id;
if ($product->add())
                {
                $product->updateCategories($product->id_category);
                StockAvailable::setQuantity((int)$product->id,0,$product->quantity,Context::getContext()->shop->id);
                }
            $image->id_product = $product->id;
$image->position = Image::getHighestPosition($product->id) + 1;
$image->cover = true; // or false;
$shops = Shop::getShops(true, null, true);
if (($image->validateFields(false, true)) === true &&
($image->validateFieldsLang(false, true)) === true && $image->add())
{
	
    $image->associateTo($shops);
    if (!copyImg($product->id, $image->id, 'images/Tesco Jabłka polskie Jonaprince słodkie twarde.png'))
    {
    
        $image->delete();
    }
    
}
